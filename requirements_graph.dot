digraph  {
"abilian-core";
"abilian-sbe";
AccessControl;
adminish;
"ageliaco.rd2";
aiohttp;
airflow;
aj;
ajenti;
"ajenti.plugin.core";
alabaster;
"aldryn-blog";
"aldryn-cms";
"aldryn-django";
"aldryn-faq";
"aldryn-newsblog";
"aldryn-people";
alembic;
algobroker;
alignak;
alignak_webui;
AllSpeak;
aloe;
aloe_django;
amibaker;
"amo-validator";
amphipathic;
amqp;
angr;
anhima;
anitya;
ansible;
anyconfig;
anyjson;
anytemplate;
"apache-libcloud";
appdirs;
AppValidationAutomation;
arches;
argcomplete;
argh;
argparse;
arrow;
"arsenal-director";
askbot;
"askbot-tuan";
"asm.cms";
"asm.cmsui";
assemblycoins;
astroid;
astropy;
"astropy-helpers";
asv_meta;
asyncio;
"asynx-core";
asynxd;
atramhasis;
attrdict;
augeias;
Authcode;
authentic2;
autobahn;
"Automated-Lazy-Unit-Testing-in-Python";
automaton;
ava;
avalonms;
awscli;
backy;
"bamboo-data";
"bamboo-server";
"bambu-tools";
bandit;
"baremetal-network-provisioning";
BarkingOwl;
bash8;
bashate;
"bat-country";
"bcbio-nextgen";
bcrypt;
bdgt;
beanstalkc;
beautifulsoup4;
beertools;
Beeswarm;
behave;
"bethel.silva.purge";
bewype;
bigtempo;
billy;
bindep;
bingads;
biobox_cli;
bioinfo;
biopython;
"birdhousebuilder.recipe.conda";
"birdhousebuilder.recipe.supervisor";
"bise.theme";
bitarray;
bitmerchant;
bleach;
blessed;
blessings;
blinker;
blist;
blockdiag;
blueberrypy;
BOSI;
boto;
boto3;
botocore;
bottle;
"brasil.gov.agenda";
"brasil.gov.paginadestaque";
"brasil.gov.portal";
"brasil.gov.tiles";
braubuddy;
brightway2;
brome;
bsnstacklib;
"bst.pygasus.core";
bts;
btsbots;
"btsbots-wallet";
btsprice;
btspusher;
buccaneer;
bugwarrior;
bumpversion;
bunch;
bundletester;
busbus;
bw2all;
bw2calc;
bw2data;
bw2io;
bztools;
c2cgeoportal;
"cached-property";
Cactus;
cairotft;
cameo;
carml;
casexml;
caso;
"cassandra-driver";
castellan;
catalyze;
catsnap;
catsup;
causal;
ceilometermiddleware;
"ceilometer-powervm";
celery;
"celery-redis-sentinel";
cement;
"ceph-workbench";
certidude;
certifi;
cffi;
cfgtool;
"chanjo-report";
chardet;
charlatan;
charmhelpers;
"charm-tools";
"check-manifest";
chempy;
chemreac;
chisubmit;
circuits;
cityhash;
CLASHChimeras;
Clay;
click;
clickclick;
cliff;
clint;
cliquet;
clize;
"cloudbase-init";
cloudengine;
cloudify;
cloudkitty;
"cloudkitty-dashboard";
cloudmesh_client;
cloudpulse;
clover;
"cmsplugin-filer";
coal_mine;
cocktail;
cognosco;
coil;
colander;
"collections-extended";
"collective.address";
"collective.autopermission";
"collective.contentalerts";
"collective.cover";
"collective.discussionplus";
"collective.disqus";
"collective.fingerpointing";
"collective.geo.behaviour";
"collective.geolocationbehavior";
"collective.geo.mapwidget";
"collective.geo.settings";
"collective.glossary";
"collective.googlenews";
"collective.gtags";
"collective.js.jqueryui";
"collective.lazysizes";
"collective.nitf";
"collective.plonetruegallery";
"collective.polls";
"collective.portlet.calendar";
"collective.ptg.allnewest";
"collective.registrationcaptcha";
"collective.searchandreplace";
"collective.transmogrifier";
"collective.venue";
"collective.z3cform.widgets";
"collective.zamqp";
colorama;
coloredlogs;
colorlog;
commutils;
"compose-monkey";
conan;
"cone.app";
coneyeye;
configobj;
configparser;
"conn-check";
Conpot;
conpy;
contextlib2;
coolfig;
coursera;
"cov-core";
coverage;
coveralls;
"covertile.cycle2";
croniter;
cronq;
cryptography;
"cs.app.mailfiler";
csat;
"cs.debug";
"cs.fileutils";
"cs.logutils";
"cs.nodedb";
"cs.obj";
"cs.py3";
"cs.seq";
cssmin;
cssselect;
cssutils;
"cstar_perf.frontend";
"cs.threads";
csvcompare;
dap;
"dash.py";
datagristle;
datasift;
dateutils;
dcextensions;
ddt;
"dead-simple-ops";
debtcollector;
decanter;
deform;
deis;
Deliverance;
"Deliverance.Rewrite";
Delorean;
derpconf;
"deuce-client";
devassistant;
devp2p;
"devpi-builder";
devs;
didelcli;
dill;
"dimagi-utils";
dinette;
discover;
diskcache;
"diskimage-builder";
distribute;
"dj-analytics";
"django-annoying";
"django-appconf";
"django-auxilium";
"django-bank";
"django-braces";
"django-br-addresses";
"django-celery";
"Django-Chuck";
"django-ckeditor";
"django-classy-tags";
"django-click";
"django-cloud-browser";
"django-cms";
"djangocms-text-ckeditor";
"django-compat";
"django-configurations";
"django-coop";
"django-countries";
"django-coverage";
"django-crispy-forms";
"django-dbbackup";
"django-db-quick-setup";
"django-debug-toolbar";
"django-discover-runner";
"django-djangui";
"django-endless-pagination";
"django-extensions";
"django-facebook-api";
"django-filer";
"django-grappelli";
"django-guardian";
"django-haystack";
"django-intranet";
"django-jsonfield";
"django-kong-admin";
"django-localflavor";
django_localizejs_seo;
"django-maja-newsletter";
"django-manifest";
"django-mobileu";
"django-modeltranslation";
"django-model-utils";
"django-mptt";
"django-nose";
"django-oauth-tokens";
"django-odnoklassniki-api";
django_openstack_auth;
"django-organice";
"django-oscar";
"django-pagination";
"django-photologue";
"django-picklefield";
"django-pipeline";
"django-player";
"django-projector";
"django-rblog";
"django-registration";
djangorestframework;
"django-rest-framework-braces";
"django-reversion";
"django-richtemplates";
"django-secure-auth";
"django-sekizai";
"django-shop";
"django-tagging";
"django-taggit";
"django-tastypie";
"django-textplusstuff";
django_th;
"django-tinymce";
"django-traxauth";
"django-treebeard";
"django-url-filter";
"django-vkontakte-api";
"django-warmama";
"django-webmap-corpus";
"django-widget-tweaks";
djcharme;
"dj-database-url";
djproxy;
doc8;
"docker-compose";
"docker-compose-xu";
"docker-harpoon";
"docker-py";
docon;
docopt;
docutils;
DoFler;
"dogpile.cache";
doit;
"dolmen.app.authentication";
"dolmen.app.breadcrumbs";
"dolmen.app.container";
"dolmen.app.content";
"dolmen.app.layout";
"dolmen.app.search";
"dolmen.app.viewselector";
"dolmen.authentication";
"dolmen.beaker";
"dolmen.blob";
"dolmen.content";
"dolmen.file";
"dolmen.forms.base";
"dolmen.forms.crud";
"dolmen.menu";
"dolmen.relations";
"dolmen.thumbnailer";
"dolmen.widget.file";
dork;
dox;
dragonmapper;
"drf-cached-instances";
"drf-haystack";
"drf-json-api";
dropbox;
"dstat-plugins";
dulwich;
dxpy;
"easyshop.core";
"easy-thumbnails";
easytrakt;
ebookmaker;
ebpub;
"ec2-api";
ecdsa;
ecs;
"edeposit.amqp.storage";
"edx-submissions";
egtest;
ElastAlert;
"elastic-git";
elasticsearch;
elita;
ella;
Elpotrero;
"enlightns-cli";
eno;
enum34;
envoy;
eom;
epys;
"esteele.manager";
ethereum;
"eureka-opensource";
eventlet;
everest;
exoline;
explode;
eyes;
faafo;
"fabric-bolt";
"facebook-sdk";
factopy;
"fairy-slipper";
"fa.jquery";
"fake-factory";
"fake-switches";
falcon;
Fanery;
fanstatic;
fauxmo;
"fc.agent";
fedmsg;
feedparser;
ferry;
fiblary;
ficloud;
fig;
figaro;
FinancialFundamentals;
FiPy;
"fish-bundles-web";
"five.globalrequest";
"five.grok";
"fiware-cloto";
"fiware-facts";
"fiware-glancesync";
fixtures;
flake8;
"flake8-quotes2";
FlaskCms;
"Flask-Dance";
"Flask-Diamond";
FlaskEx;
"Flask-Security";
flexmock;
flickrapi;
flotilla;
flotsam;
FlowCytometryTools;
fotochest;
frappe;
frasco;
"frasco-users";
freezegun;
freezer;
"freezer-api";
Freezes;
fs;
fssa;
"ftw.bridge.client";
"ftw.file";
"ftw.jsondump";
"ftw.lawgiver";
"ftw.slider";
"ftw.testing";
"ftw.upgrade";
fullpath;
funcsigs;
functools32;
furl;
future;
futures;
futurist;
fuzzywuzzy;
ga4gh;
gabbi;
garelay;
gbptestheat;
gbptestneutron;
"gce-api";
gdata;
gear;
gearhorn;
gearstore;
gemini;
geminicassandra;
geminisqlite;
genecoder;
general;
geokey;
geopdf;
geopy;
gerritexec;
gertty;
gevent;
"gevent-socketio";
"gevent-websocket";
ggcq;
"girder-worker";
gisht;
gitdb;
github2gitlab;
"github3.py";
"git-review";
giza;
glance_store;
Glastopf;
glean;
gnocchi;
gnocchiclient;
"gnowsys-studio";
"gnucash-utilities";
gnureadline;
googleanalytics;
"google-api-python-client";
grab;
grafyaml;
grako;
grano;
"graph-alchemy";
graphitepager;
grapple;
greenlet;
grequests;
gridjug;
griffin;
"grokcore.component";
"grokcore.layout";
"grokcore.security";
"grokcore.view";
"group-based-policy";
"group-based-policy-automation";
"group-based-policy-ui";
grouper;
GroupyAPI;
grow;
gruvi;
gthnk;
"gullikson-scripts";
gunicorn;
gwpy;
h5py;
hackedit;
hacking;
handroll;
hardware;
heatherr;
"heat-translator";
helionsdk;
"helpful-site";
hendrix;
hflossk;
hiredis;
holmes;
"horae.auth";
"horae.core";
"horae.dashboard";
"horae.layout";
"horae.lifecycle";
"horae.planning";
"horae.properties";
"horae.resources";
"horae.search";
"horae.ticketing";
"horae.workflow";
hot;
html2text;
html5lib;
htpwd;
httmock;
httpexceptor;
httplib2;
httpretty;
"htwkimn.theme";
hubugs;
hubward;
humanfriendly;
humanize;
humfrey;
"hurry.query";
Hydro;
"hyperdns-hal";
hypothesis;
icalendar;
IMPLib2;
importanize;
importlib;
indico;
inflection;
influxdb;
"infrae.rest";
"infrae.wsgi";
invenio;
"invenio-base";
"invenio-classifier";
"invenio-collections";
"invenio-db";
"invenio-deposit";
"invenio-ext";
"invenio-formatter";
"invenio-groups";
"invenio-knowledge";
"invenio-oauthclient";
"invenio-previewer";
"invenio-records";
"invenio-testing";
"invenio-unapi";
"invenio-upgrader";
"invenio-utils";
"invenio-workflows";
invoke;
ipaddr;
ipaddress;
ipython;
irc;
irco;
"ironic-discoverd";
"ironic-inspector";
"ironic-lib";
"ironic-oneview-cli";
"ironic-oneviewd";
"ironic-python-agent";
isbnlib;
isbntools;
iso8601;
isodate;
isort;
"isotoma.depends.plone4_1";
"isotoma.depends.zope2_13_8";
isstring;
itsdangerous;
"ityou.ESI";
"izug.ticketbox";
jeb;
"jenkins-job-builder";
"jenkins-job-builder-addons";
"jenkins-job-builder-naginator";
"jenkins-job-builder-workflow";
"jjb-puppetlabs";
jlle;
jmbo;
"jmbo-foundry";
jmespath;
joblib;
jsmin;
jsonfield;
jsonpatch;
"jsonpath-rw-ext";
jsonpickle;
jsonpointer;
jsonrpclib;
jsonschema;
jtime;
jupyterhub;
kafka_influxdb;
"kafka-python";
"ka-lite";
"ka-lite-static";
kazoo;
kdb;
"kemptech-openstack-lbaas";
kenkou;
kerlib;
keystoneauth1;
keystonemiddleware;
kglib;
Khan;
kii;
KloudBuster;
kombu;
Kotti;
"krux-stdlib";
labkit;
lacli;
lancet;
"largeblue.order";
"largeblue.pages";
"largeblue.tag";
"largeblue.util";
"launch-control";
"lava-dashboard";
"lava-tool";
"lazy-object-proxy";
lda;
ldapadapter;
ldaptor;
"ldclient-py";
"leap.bitmask";
"leap.common";
"leap.keymanager";
"leap.mail";
"leap.soledad.client";
"leap.soledad.common";
"leap.soledad.server";
"ledgerx-python";
Lektor;
leonardo_horizon;
libacr;
linketurbidity;
"lino-welfare";
"lisa-server";
listdir;
LitReview;
livereload;
localshop;
lockfile;
logging;
"logilab-common";
logtool;
logutils;
"lovely.memcached";
LumberMill;
lxml;
mad2;
madrona;
magellan;
magnetodb;
maidenhair;
maildump;
make_gtfs;
malleefowl;
managesf;
"manila-ui";
MapProxy;
mapreduce;
marionette_client;
"marionette_client-mozilla-b2g34_v2_1";
marshmallow;
matplotlib;
mccabe;
mechanize;
"megrok.layout";
"megrok.pagetemplate";
"megrok.z3cform.base";
"menhir.contenttype.document";
"menhir.contenttype.folder";
"menhir.contenttype.image";
"menhir.contenttype.photoalbum";
merengue;
messytables;
metaopt;
metarace;
metaseq;
mETL;
metrohash;
meza;
mgmtsystem;
MicroPipe;
"micropython-email.internal";
"micropython-email.utils";
"micropython-os";
"micropython-re-pcre";
mirage;
Misago;
misaka;
"mission-control2";
mistune;
mixer;
mltsp;
mneme;
mock;
modoboa;
molecule;
molly;
"molo.core";
"monasca-agent";
"monasca-api";
"monasca-common";
"monasca-events-api";
"monasca-events-engine";
"monasca-notification";
"monasca-persister";
"monasca-ui";
mongoengine;
"monitoring-for-openstack";
"monitoring-plugin";
Mopidy;
morepath;
moto;
motor;
mox;
mox3;
moya;
mozdef_client;
mozdevice;
mozinfo;
mozlog;
mozrunner;
mozsvc;
mpcontribs;
mrq;
mrwolfe;
"msgpack-python";
multigtfs;
"murano-common";
"murano-metadataclient";
"murano-repository";
mutagen;
my_beacon_manager;
nagios_graphite;
nagiosplugin;
nap;
natsort;
ncryptify;
"ndg-httpsclient";
nefertari;
nefertari_sqla;
nengo;
netaddr;
netcdf;
netifaces;
netman;
"networking-ale-omniswitch";
networking_arista;
"networking-bgpvpn";
"networking-brocade";
"networking-calico";
"networking-cisco";
"networking-fortinet";
"networking-fujitsu";
"networking-hyperv";
"networking-infoblox";
"networking-l2gw";
"networking-midonet";
"networking-nec";
"networking-odl";
"networking-ofagent";
"networking-onos";
"networking-ovs-dpdk";
networking_plumgrid;
"networking-powervm";
"networking-sfc";
"networking-vsphere";
networkx;
neurom;
neuronvisio;
"neutron-lib";
"neutron-ml2-driver-apic";
newslynx;
newspaper;
newspaper3k;
nibabel;
nidaba;
"nidaba-client";
Nikola;
nltk;
noaaclass;
noaadem;

nodepool;
nomadic;
nonobvious;
nose;
nose2;
"nose-cov";
"nose-exclude";
nosexcover;
notebook;
"nova-lxd";
"nova-powervm";
nsot;
ntorque;
numexpr;
numpy;
numpydoc;
nupic;
"nva.stormcontainer";
o2w_cms;
o2w_web;
oauth;
oauth2;
oauth2client;
oauthlib;
object_storage;
octavia;
octogrid;
odo;
oe_utils;
ofcourse;
oiopy;
olhoneles;
omitempty;
"onegov.election_day";
"onegov.municipality";
"onegov.onboarding";
"onegov.town";
ongeza;
ooi;
oonibackend;
ooniprobe;
openbiblio;
"opencanary-correlator";
opengrid;
"open-helpdesk";
openpyxl;
openre;
OpenREM;
openross;
openslides;
"openstack-doc-tools";
openstacksdk;
"openstacksdk-plugin";
opps;
ordereddict;
"os-apply-config";
"os-brick";
"os-client-config";
"os-cloud-config";
"os-collect-config";
"oslo.cache";
"oslo.concurrency";
"oslo.config";
"oslo.context";
"oslo.db";
"oslo.i18n";
"oslo.log";
"oslo.messaging";
"oslo.middleware";
"oslo.policy";
"oslo.privsep";
"oslo.reports";
"oslo.rootwrap";
"oslo.serialization";
"oslo.service";
oslosphinx;
oslotest;
"oslo.utils";
"oslo.versionedobjects";
"oslo.vmware";
"os-net-config";
"os-performance-tools";
osprofiler;
ospurge;
"os-refresh-config";
"os-testr";
"paasta-tools";
Pacific;
pagarmepy;
pageit;
"paho-mqtt";
palladium;
pandas;
panoramix;
panya;
papaye;
paperwork;
pappyproxy;
paramiko;
parsedatetime;
passlib;
patacrep;
pathlib;
Pathomx;
"path.py";
pathtools;
patroni;
pbr;
"pbr-samstav";
pdfminer;
"pd-sprintstats";
pdtools;
pecan;
peewee;
pelican;
"pelican-provisioner";
"penelope.core";
pep257;
pep8;
"pep8-naming";
percolate;
"performanceplatform-client";
"performanceplatform-collector";
petl;
pex;
pexpect;
pgcontents;
photocollage;
picklecache;
piecash;
PieCrust;
pika;
piksi_tools;
pillowtop;
"Pilot-Lib";
pinball;
pinocchio;
pip;
"pip-accel";
pipewelder;
pipreqs;
pkginfo;
pkutils;
"plone.api";
"plone.app.blocks";
"plone.app.caching";
"plone.app.collection";
"plone.app.content";
"plone.app.contentmenu";
"plone.app.contentrules";
"plone.app.customerize";
"plone.app.dexterity";
"plone.app.discussion";
"plone.app.event";
"plone.app.folder";
"plone.app.form";
"plone.app.imagecropping";
"plone.app.imaging";
"plone.app.iterate";
"plone.app.jquery";
"plone.app.jquerytools";
"plone.app.layout";
"plone.app.memberschema";
"plone.app.portlets";
"plone.app.querystring";
"plone.app.referenceablebehavior";
"plone.app.registry";
"plone.app.relationfield";
"plone.app.standardtiles";
"plone.app.theming";
"plone.app.tiles";
"plone.app.toolbar";
"plone.app.upgrade";
"plone.app.users";
"plone.app.versioningbehavior";
"plone.app.viewletmanager";
"plone.app.vocabularies";
"plone.app.widgets";
"plone.app.workflow";
"plone.app.z3cform";
"plone.behavior";
"plone.browserlayer";
"plone.cachepurging";
"plone.dexterity";
"plone.directives.form";
"plone.folder";
"plone.i18n";
"plone.indexer";
ploneintranet;
"plone.locking";
"plone.memoize";
"plone.mls.listing";
"plone.namedfile";
"plone.portlet.collection";
"plone.portlet.viewlet";
"plone.protect";
"plone.releaser";
"plone.schemaeditor";
"plone.session";
"plone.tiles";
pluggy;
plumbery;
plumbum;
ply;
polaris;
polib;
populartwitterbot;
poster;
precs;
"Products.Archetypes";
"Products.ATContentTypes";
"Products.CMFEditions";
"Products.CMFPlone";
"Products.Marshall";
"Products.PasswordResetTool";
"Products.ResourceRegistries";
"Products.SilvaDocument";
"Products.SilvaExternalSources";
"Products.SilvaFind";
"Products.SilvaPoll";
progress;
progressbar;
progressbar2;
"proso-apps";
"proso-geography-analysis";
protobuf;
"pspolicy.homes4.base";
psutil;
psycopg2;
public;
puente;
"pug-ann";
"pug-dj";
"pug-invest";
"pug-nlp";
purkinje;
"purkinje-messages";
py;
pyaml;
pyandoc;
"pyannote.core";
pyasn1;
"pyasn1-modules";
"py-bcrypt";
pybedtools;
pybitbucket;
pybitcoin;
pycadf;
pycountry;
pycparser;
pycrypto;
pycurl;
pydecode;
pyeapi;
pyejabberd;
pyenchant;
pyethapp;
pyethereum;
pyfits;
pyflakes;
pygal;
PyGall;
pygeogrids;
pygeoip;
pygerrit;
pyghmi;
pygit2;
pygogo;
pygraphviz;
PyGSP;
pyinotify;
PyInstaller;
pyJunosManager;
pylibmc;
pylint;
PyLTI;
PyLucid;
pylxd;
pymatgen;
pymongo;
pymystem3;
PyNLPIR;
"pyobjc-core";
pyolite;
pyparsing;
pypowervm;
pyproj;
pyquery;
pyramid;
"pyramid-notebook";
pyramid_promosite;
pyrax;
pyrene;
pyroma;
pysam;
pyserial;
pyshaker;
pysnmp;
pyspider;
pyspotify;
pysqlite;
pystache;
pytesmo;
pytest;
"pytest-cache";
"pytest-capturelog";
"pytest-cov";
"pytest-django";
"pytest-flakes";
"pytest-pep8";
"pytest-purkinje";
"pytest-timeout";
"python-ari";
"python-automationclient";
"python-barbicanclient";
"python-bitcoin";
"python-ceilometerclient";
"python-cicoclient";
"python-cinderclient";
"python-cloudfoundryclient";
"python-cloudkittyclient";
"python-cloudpulseclient";
"python-congressclient";
"python-coveralls";
"python-cueclient";
"python-daemon";
"python-dateutil";
"python-designateclient";
"python-epo-ops-client";
"python-evoqueclient";
"python-flameclient";
"python-fuelclient";
"python-gflags";
"python-gitlab";
"python-group-based-policy-client";
"python-heatclient";
"python-ironicclient";
"python-jenkins";
"python-keystoneclient";
"python-keystoneclient-kerberos";
"python-ldap";
"python-magic";
"python-magnetodbclient";
"python-magnumclient";
"python-manilaclient";
"python-marconiclient";
"python-memcached";
"python-mimeparse";
"python-mistralclient";
"python-monascaclient";
python_mozaggregator;
"python-multipart";
"python-muranoclient";
"python-neutronclient";
"python-novaclient";
"python-oneviewclient";
"python-openid";
"python-openstackclient";
"python-openstacksdk";
"python-plcloudclient";
"python-rdomanager-oscplugin";
"python-ripcordclient";
"python-saharaclient";
"python-salesforce";
"python-savannaclient";
"python-scciclient";
"python-seamicroclient";
"python-senlinclient";
"python-sjsclient";
"python-slimta";
"python-slugify";
"python-social-auth";
"python-solumclient";
"python-streamtools";
"python-subunit";
"python-surveilclient";
"python-suseapi";
"python-swiftclient";
"python-tripleoclient";
"python-troveclient";
"python-tuskarclient";
"python-twitter";
"python-watcher";
"python-watcherclient";
"python-watcher_metering_drivers";
"python-watcher_metering_grid5000";
"python-watcher_metering_vsphere";
"python-zaqarclient";
pytils;
pytz;
pyupio;
pyusb;
pywebhooks;
pywikibot;
pywizard;
pyxdg;
pyzmq;
qeventlog;
qipipe;
qmpy;
qrcode;
querylist;
"quickbooks-py";
quokka;
"quokka-flask-security";
qworkerd;
"rackspace-python-neutronclient";
rackspacesdk;
rally;
ramlfications;
"rapid-router";
rapport;
ratatosk;
rauth;
raven;
"rdc.etl";
rdflib;
rdopkg;
readembedability;
receiver;
recipy;
Reding;
redis;
rednose;
reflectme;
regex;
rejviz;
relayr;
releases;
relengapi;
reno;
rep;
Repack;
reportlab;
repositorytools;
"repoze.bfg";
"repoze.lru";
"repoze.sphinx.autointerface";
"repoze.what";
"repoze.who";
"repoze.zodbconn";
requests;
"requests-cache";
"requests-forecast";
"requests-futures";
"requests-mock";
"requests-oauthlib";
"requests-toolbelt";
requirements;
responses;
"rest-api-blueprint";
restkit;
rest_toolkit;
rethinkdb;
retrying;
revscoring;
ringo;
ripcord;
robotframework;
rogue_scores;
roomyjob;
rq;
rsa;
rtwo;
rum;
runestone;
runstats;
s3keyring;
sahara;
salesking;
Satchmo;
satori;
savanna;
"savanna-dashboard";
sbp;
"sc.apyb.pythonbrasil6";
"sc.dev.core";
"sc.embedder";
schema;
schematics;
"scikit-allel";
"scikit-bio";
"scikit-image";
"scikit-learn";
"scikit-nano";
scipy;
scrapple;
Scrapy;
scrypt;
scrypture;
"sc.social.bookmarks";
"sc.social.like";
sdataflow;
seaborn;
"seamicro-ml2";
"seantis.dir.base";
security_monkey;
SeedboxManager;
seldon;
selenium;
"senlin-dashboard";
sentry;
series;
seriesbutler;
setproctitle;
"setuptools-git";
setuptools_shim;
sh;
shaddock;
shade;
SharQServer;
shinkenplugins;
shiori;
shiva;
shortuuid;
sigal;
signalbox;
"silva.app.document";
"silva.app.forest";
"silva.app.news";
"silva.app.page";
"silva.app.photogallery";
"silva.app.redirectlink";
"silva.app.shorturl";
"silva.app.subscriptions";
"silva.captcha";
"silva.core.cache";
"silva.core.conf";
"silva.core.contentlayout";
"silva.core.editor";
"silva.core.interfaces";
"silva.core.layout";
"silva.core.references";
"silva.core.services";
"silva.core.smi";
"silva.core.upgrade";
"silva.core.views";
"silva.demo.contentlayout";
"silva.export.html";
"silva.fanstatic";
"silva.pas.base";
"silva.pas.openid";
"silva.resourceinclude";
"silva.security.logging";
"silva.security.overview";
"silva.system.utils";
"silva.translations";
"silva.ui";
simiki;
simoa;
simplejson;
simplepath;
simpy;
sit_django_ecs;
six;
SixIsles;
Sixpack;
skll;
skoober;
slacker;
sleekxmpp;
slumber;
smalisca;
Smap;
SmartyBot;
smiley;
snowballstemmer;
"socialschools-cms";
soco;
sofa;
solar;
solar_radiation_model;
SooVee;
sopel;
"sorl-thumbnail";
Souma;
soyprice;
speaklater;
spex;
sphere_connector;
"sphinx-argparse";
"sphinx-autobuild";
"sphinx-bootstrap-theme";
"sphinxcontrib-bibtex";
"sphinxcontrib-httpdomain";
"sphinxcontrib-napoleon";
"sphinxcontrib-pecanwsme";
"sphinxcontrib-programoutput";
"sphinxjp.themecore";
splash;
splinter;
spreads;
"sprockets.clients.cassandra";
"sqlalchemy-migrate";
sqlparse;
ssbench;
sshpool;
ssl_api;
stackalytics;
stackdistiller;
stalker_pyramid;
"StarCluster-openstack";
statico;
stations;
statsd;
statsmodels;
steel_pigs;
steve;
stevedore;
stoq;
storm;
stormtracks;
strikepackage;
structlog;
"stups-sevenseconds";
"stups-zign";
subopen;
subprocess32;
subunit2sql;
"sudosh-replay";
suds;
"Superdesk-Core";
supervisor;
sure;
surveil;
"swagger-aggregator";
"swagger-parser";
"swagger-stub";
"swagger-tester";
sympy;
synergy_scheduler;
tables;
tabulate;
tabutils;
tahoe;
tahrir;
Tailbone;
talons;
"tango-shared-core";
taskflow;
taskw;
"taskwarrior-timesheets";
"td-client";
teamvault;
telnetlib3;
"tempest-lib";
"tendril-framework";
termcolor;
terminaltables;
testfixtures;
"test-helpers";
TestLiveServer;
testrepository;
testresources;
testscenarios;
testtools;
texttable;
thrift;
thumbor;
"thumbor-web";
tiddlyweb;
"tiddlywebplugins.hoster";
"tiddlywebplugins.tiddlyspace";
"tiddlywebplugins.utils";
tiddlywebwiki;
timid;
tipboard;
tipfy;
tm_navigator;
tolist;
toolz;
tooz;
torlite;
tornado;
torus;
torweb;
"torweb-for-3";
"tosca-parser";
tox;
tqdm;
traitlets;
transaction;
TransAT_API;
transifex;
translationstring;
"transmogrify.dexterity";
trapperkeeper;
trellostats;
treq;
tribool;
trigrams;
"tripleo-common";
"tri.query";
trollduction;
trumpet;
tugboat;
turnip;
tuskar;
"tuskar-ui";
tutum;
tvdbapi_client;
tvdosage;
tvrenamer;
"tw2.core";
"tw2.jqplugins.ui";
"tw2.jquery";
tweeply;
tweepy;
twilio;
twine;
twip;
twitter;
twothirds;
twython;
txkazoo;
txt2contincd;
txt2xls;
txtorcon;
"typepad-motion";
tzlocal;
ujson;
unicodecsv;
"unicore-cms";
"unicore-cms-django";
"unicore.webhooks";
unittest2;
"uos.cli";
"upaas-admin";
"upaas-common";
urihandler;
uriregistry;
uritemplate;
urllib3;
urwid;
userbase;
uuid;
"UW-RestClients";
validictory;
"valuehorizon-companies";
"valuehorizon-countries";
"valuehorizon-forex";
"valuehorizon-people";
varify;
"vca-cli";
vcrpy;
vdw;
venusian;
versiontools;
VideoAnalysis;
"vim-debug";
viralata;
virtualenvwrapper;
"virtualenvwrapper.django_template";
vmtp;
"vmware-nsx";
"vnccollab.portal";
"vnccollab.theme";
"vnccollab.zimbra";
voluptuous;
vr;
"vr.server";
vumi;
"vumi-go";
"w20e.pycms";
"wafflehaus.iweb";
wagtail;
waitress;
wally;
warthog;
watchdog;
"watson-common";
"watson-framework";
"wc.cookiecredentials";
webalerts;
webassets;
Weblate;
webmux;
"web.py";
webreview;
"websocket-client";
weihnachtsgurke;
wger;
wheel;
wheelcms_project;
wight;
wikilabels;
Wikked;
will;
winchester;
Wooey;
worldengine;
wpull;
wrapt;
ws4py;
xadrpy;
"xbus.monitor";
xelpaste;
xlrd;
xlseries;
xlwt;
xmltodict;
xmpppy;
xtas;
xvfbwrapper;
yabgp;
yafowil;
"yafowil.documentation";
yaml2ical;
yaql;
"yith-library-server";
"z3c.boston";
"z3c.caching";
"z3c.extfile";
"z3c.filetype";
"z3c.form";
"z3c.formwidget.query";
"z3c.jbot";
"z3c.resourcecollector";
"z3c.rotterdam";
"z3c.template";
"z3c.zalchemy";
zappa;
"zato-apitest";
"zato-common";
"zc.buildout";
"zc.displayname";
"zc.recipe.egg";
"zc.relationship";
"zds-member";
"zeam.form.base";
"zeam.form.composed";
"zeam.form.layout";
"zeam.form.silva";
"zeam.form.table";
"zeam.form.ztk";
"zeam.utils.batch";
zerodb;
"zest.releaser";
zimplewiki;
zipfelchappe;
zipline;
zm;
ZMS3;
Zope2;
"zope.annotation";
"zope.app.component";
"zope.app.container";
"zope.app.file";
"zope.app.publication";
"zope.app.publisher";
"zope.app.testing";
"zope.authentication";
"zope.browser";
"zope.browserpage";
"zope.cachedescriptors";
"zope.catalog";
"zope.component";
"zope.componentvocabulary";
"zope.configuration";
"zope.container";
"zope.contentprovider";
"zope.datetime";
"zope.deferredimport";
"zope.deprecation";
"zope.dottedname";
"zope.dublincore";
"zope.event";
"zope.formlib";
"zope.globalrequest";
"zope.i18n";
"zope.i18nmessageid";
"zope.interface";
"zope.intid";
"zope.lifecycleevent";
"zope.location";
"zope.locking";
"zope.pagetemplate";
"zope.processlifetime";
"zope.proxy";
"zope.publisher";
"zope.schema";
"zope.security";
"zope.site";
"zope.tales";
"zope.testing";
"zope.viewlet";
"ztfy.alchemy";
"ztfy.baseskin";
"ztfy.blog";
"ztfy.cache";
"ztfy.captcha";
"ztfy.comment";
"ztfy.extfile";
"ztfy.file";
"ztfy.gallery";
"ztfy.i18n";
"ztfy.jqueryui";
"ztfy.ldap";
"ztfy.lock";
"ztfy.mail";
"ztfy.media";
"ztfy.myams";
"ztfy.scheduler";
"ztfy.security";
"ztfy.sendit";
"ztfy.sequence";
"ztfy.skin";
"ztfy.thesaurus";
"ztfy.utils";
"ztfy.workflow";
"ztfy.zmi";
zuul;
zuup;
django;
logbook;
pyyaml;
jinja2;
pygments;
sphinx;
"pytest-xdist";
"restructuredtext-lint";
"sphinx-rtd-theme";
toscawidgets;
decorator;
gitpython;
json;
acquisition;
datetime;
zodb3;
pymysql;
sqlalchemy;
twisted;
netcdf4;
pil;
m2crypto;
unidecode;
werkzeug;
wsgiref;
"archetypes.schemaextender";
pythonflu;
cython;
prettytable;
pastescript;
weberror;
markdown;
pyopenssl;
babel;
"backports.ssl-match-hostname";
plone;
flask;
beautifulsoup;
"collective.monkeypatcher";
"products.cmfplone";
formencode;
mako;
routes;
"mysql-python";
virtualenv;
pypandoc;
"flask-admin";
"flask-cache";
"flask-login";
"flask-wtf";
pillow;
webob;
fabric;
south;
"django-compressor";
uwsgi;
tablib;
praw;
"flask-bootstrap";
ipdb;
markupsafe;
"mysql-connector-python";
"factory-boy";
pyperclip;
cherrypy;
"flask-cors";
"flask-script";
"flask-sqlalchemy";
wtforms;
paste;
pastedeploy;
"flask-migrate";
bzr;
cheetah;
beaker;
pyside;
scrapy;
"service-identity";
webtest;
"products.archetypes";
"python-glanceclient";
pygithub;
markdown2;
pyjwt;
grok;
"zope.traversing";
"sphinx-py3doc-enhanced-theme";
continue;
"python-levenshtein";
"flask-debugtoolbar";
ipy;
pint;
"pyramid-debugtoolbar";
"pyramid-jinja2";
"pyramid-tm";
"zope.sqlalchemy";
"suds-jurko";
dnspython;
genshi;
pydot;
pydispatcher;
"-";
slimit;
keyring;
neutron;
tldextract;
chameleon;
pyhamcrest;
jira;
shapely;
"products.silva";
"plone.registry";
pygame;
"products.collage";
"plone.portlets";
"plone.supermodel";
"plone.uuid";
"products.cmfcore";
"products.genericsetup";
accesscontrol;
"products.ploneformgen";
bitstring;
whoosh;
xlsxwriter;
"rpi.gpio";
"flask-assets";
martian;
paver;
"flask-babel";
mercurial;
"flask-restful";
"flask-testing";
fiona;
"js.jquery";
"pyramid-chameleon";
webhelpers;
exifread;
apscheduler;
gdal;
elementtree;
pyexecjs;
pyscss;
tempita;
turbogears;
pyopengl;
couchdb;
mimeparse;
trac;
pygtk;
"django-filter";
zopeskel;
"plone.autoform";
zope2;
"plone.z3cform";
"products.pluggableauthservice";
"products.statusmessages";
python;
simplegeneric;
"django-polymorphic";
"semantic-version";
"pytest-mock";
mezzanine;
feincms;
"youtube-dl";
"grokcore.viewlet";
"openstack.nose-plugin";
"sqlalchemy-utils";
"flask-mail";
zconfig;
pypdf2;
"grokcore.chameleon";
pypdf;
"pyobjc-framework-cocoa";
"flask-babelex";
"pyramid-beaker";
muffin;
"ppp-datamodel";
"abilian-core" -> flake8;
"abilian-core" -> mock;
"abilian-core" -> pylint;
"abilian-core" -> pysqlite;
"abilian-core" -> pytest;
"abilian-core" -> "pytest-cov";
"abilian-core" -> "pytest-flakes";
"abilian-core" -> "pytest-pep8";
"abilian-core" -> "pytest-xdist";
"abilian-core" -> requests;
"abilian-core" -> "restructuredtext-lint";
"abilian-core" -> sphinx;
"abilian-core" -> "sphinx-rtd-theme";
"abilian-core" -> tox;
"abilian-sbe" -> coverage;
"abilian-sbe" -> mock;
"abilian-sbe" -> pytest;
"abilian-sbe" -> "pytest-cov";
"abilian-sbe" -> "pytest-flakes";
"abilian-sbe" -> "pytest-pep8";
"abilian-sbe" -> "pytest-xdist";
"abilian-sbe" -> sphinx;
"abilian-sbe" -> "sphinx-rtd-theme";
"abilian-sbe" -> splinter;
"abilian-sbe" -> tox;
AccessControl -> acquisition;
AccessControl -> datetime;
AccessControl -> transaction;
AccessControl -> zodb3;
AccessControl -> "zope.component";
AccessControl -> "zope.configuration";
AccessControl -> "zope.deferredimport";
AccessControl -> "zope.interface";
AccessControl -> "zope.publisher";
AccessControl -> "zope.schema";
AccessControl -> "zope.security";
AccessControl -> "zope.testing";
adminish -> pastescript;
adminish -> "repoze.who";
adminish -> weberror;
"ageliaco.rd2" -> "collective.autopermission";
"ageliaco.rd2" -> distribute;
"ageliaco.rd2" -> plone;
"ageliaco.rd2" -> "plone.app.dexterity";
"ageliaco.rd2" -> "plone.app.users";
"ageliaco.rd2" -> "plone.app.versioningbehavior";
"ageliaco.rd2" -> "plone.namedfile";
"ageliaco.rd2" -> yafowil;
airflow -> alembic;
airflow -> bcrypt;
airflow -> boto;
airflow -> celery;
airflow -> coverage;
airflow -> coveralls;
airflow -> croniter;
airflow -> cryptography;
airflow -> dill;
airflow -> flake8;
airflow -> flask;
airflow -> "flask-admin";
airflow -> "flask-cache";
airflow -> "flask-login";
airflow -> "flask-wtf";
airflow -> future;
airflow -> gunicorn;
airflow -> ipython;
airflow -> jinja2;
airflow -> lxml;
airflow -> markdown;
airflow -> nose;
airflow -> "nose-exclude";
airflow -> pandas;
airflow -> psycopg2;
airflow -> pygments;
airflow -> "python-dateutil";
airflow -> redis;
airflow -> requests;
airflow -> setproctitle;
airflow -> sphinx;
airflow -> "sphinx-argparse";
airflow -> "sphinx-rtd-theme";
airflow -> sqlalchemy;
airflow -> statsd;
airflow -> thrift;
airflow -> unicodecsv;
aj -> distribute;
aj -> gevent;
aj -> "gevent-socketio";
aj -> "gevent-websocket";
aj -> lxml;
aj -> passlib;
aj -> pexpect;
aj -> pip;
aj -> psutil;
aj -> pyopenssl;
aj -> pyyaml;
aj -> requests;
aj -> setproctitle;
aj -> six;
aj -> termcolor;
ajenti -> gevent;
ajenti -> "gevent-socketio";
ajenti -> "gevent-websocket";
ajenti -> lxml;
ajenti -> passlib;
ajenti -> pillow;
ajenti -> psutil;
ajenti -> pyopenssl;
ajenti -> "python-daemon";
ajenti -> "python-ldap";
ajenti -> requests;
"ajenti.plugin.core" -> aj;
"ajenti.plugin.core" -> setproctitle;
"aldryn-blog" -> "django-appconf";
"aldryn-blog" -> "django-classy-tags";
"aldryn-blog" -> "django-filer";
"aldryn-blog" -> "django-taggit";
"aldryn-blog" -> "djangocms-text-ckeditor";
"aldryn-blog" -> south;
"aldryn-blog" -> unidecode;
"aldryn-cms" -> beautifulsoup;
"aldryn-cms" -> "cmsplugin-filer";
"aldryn-cms" -> "django-cms";
"aldryn-cms" -> "django-compressor";
"aldryn-cms" -> "django-filer";
"aldryn-cms" -> "django-reversion";
"aldryn-cms" -> "django-treebeard";
"aldryn-cms" -> "djangocms-text-ckeditor";
"aldryn-cms" -> lxml;
"aldryn-cms" -> pillow;
"aldryn-cms" -> requests;
"aldryn-cms" -> south;
"aldryn-django" -> boto;
"aldryn-django" -> certifi;
"aldryn-django" -> click;
"aldryn-django" -> cryptography;
"aldryn-django" -> "dj-database-url";
"aldryn-django" -> django;
"aldryn-django" -> "django-appconf";
"aldryn-django" -> "django-reversion";
"aldryn-django" -> "ndg-httpsclient";
"aldryn-django" -> psycopg2;
"aldryn-django" -> pyopenssl;
"aldryn-django" -> raven;
"aldryn-django" -> south;
"aldryn-django" -> structlog;
"aldryn-django" -> subprocess32;
"aldryn-django" -> uwsgi;
"aldryn-faq" -> django;
"aldryn-faq" -> "django-cms";
"aldryn-faq" -> "django-reversion";
"aldryn-faq" -> "django-taggit";
"aldryn-faq" -> "djangocms-text-ckeditor";
"aldryn-newsblog" -> "aldryn-people";
"aldryn-newsblog" -> django;
"aldryn-newsblog" -> "django-cms";
"aldryn-newsblog" -> "django-filer";
"aldryn-newsblog" -> "django-reversion";
"aldryn-newsblog" -> "django-taggit";
"aldryn-newsblog" -> "djangocms-text-ckeditor";
"aldryn-newsblog" -> lxml;
"aldryn-newsblog" -> "python-dateutil";
"aldryn-newsblog" -> pytz;
"aldryn-newsblog" -> six;
"aldryn-people" -> django;
"aldryn-people" -> "django-cms";
"aldryn-people" -> "django-filer";
"aldryn-people" -> "djangocms-text-ckeditor";
"aldryn-people" -> "easy-thumbnails";
"aldryn-people" -> six;
algobroker -> gevent;
algobroker -> "msgpack-python";
algobroker -> numpy;
algobroker -> "python-dateutil";
algobroker -> pyzmq;
algobroker -> requests;
algobroker -> scipy;
algobroker -> simplejson;
algobroker -> twilio;
alignak -> argparse;
alignak -> astroid;
alignak -> coverage;
alignak -> coveralls;
alignak -> distribute;
alignak -> freezegun;
alignak -> importlib;
alignak -> "logilab-common";
alignak -> mock;
alignak -> "mysql-python";
alignak -> nose;
alignak -> "nose-cov";
alignak -> ordereddict;
alignak -> pep257;
alignak -> pep8;
alignak -> pycurl;
alignak -> pylint;
alignak -> pymongo;
alignak -> six;
alignak -> unittest2;
alignak -> wsgiref;
alignak_webui -> alignak;
alignak_webui -> coverage;
alignak_webui -> coveralls;
alignak_webui -> mock;
alignak_webui -> nose;
alignak_webui -> "nose-cov";
alignak_webui -> pep257;
alignak_webui -> pep8;
alignak_webui -> pylint;
alignak_webui -> unittest2;
alignak_webui -> uwsgi;
AllSpeak -> babel;
AllSpeak -> django;
AllSpeak -> ipdb;
AllSpeak -> jinja2;
AllSpeak -> markupsafe;
AllSpeak -> pytest;
AllSpeak -> "pytest-cov";
AllSpeak -> pytz;
AllSpeak -> pyyaml;
AllSpeak -> tox;
AllSpeak -> webob;
AllSpeak -> werkzeug;
aloe -> blessings;
aloe -> coverage;
aloe -> "factory-boy";
aloe -> future;
aloe -> mock;
aloe -> nose;
aloe -> pep8;
aloe -> pylint;
aloe -> "repoze.lru";
aloe -> sphinx;
aloe_django -> aloe;
aloe_django -> coverage;
aloe_django -> cssselect;
aloe_django -> django;
aloe_django -> "django-nose";
aloe_django -> future;
aloe_django -> lxml;
aloe_django -> pep8;
aloe_django -> pylint;
aloe_django -> pyyaml;
amibaker -> fabric;
amibaker -> flake8;
amibaker -> ipdb;
amibaker -> jinja2;
amibaker -> mock;
amibaker -> pytest;
amibaker -> "pytest-cov";
amibaker -> pyyaml;
amibaker -> tox;
"amo-validator" -> argparse;
"amo-validator" -> cssutils;
"amo-validator" -> fabric;
"amo-validator" -> mock;
"amo-validator" -> nose;
"amo-validator" -> rdflib;
"amo-validator" -> simplejson;
amphipathic -> beautifulsoup4;
amphipathic -> biopython;
amphipathic -> coveralls;
amphipathic -> gevent;
amphipathic -> ipdb;
amphipathic -> ipython;
amphipathic -> isort;
amphipathic -> "ndg-httpsclient";
amphipathic -> pyasn1;
amphipathic -> pyopenssl;
amphipathic -> requests;
amphipathic -> "vim-debug";
angr -> futures;
angr -> networkx;
angr -> progressbar;
anhima -> cython;
anhima -> flake8;
anhima -> h5py;
anhima -> ipython;
anhima -> matplotlib;
anhima -> nose;
anhima -> numexpr;
anhima -> numpy;
anhima -> numpydoc;
anhima -> pandas;
anhima -> psutil;
anhima -> "scikit-learn";
anhima -> scipy;
anitya -> bunch;
anitya -> dateutils;
anitya -> docutils;
anitya -> fedmsg;
anitya -> flask;
anitya -> "flask-wtf";
anitya -> markupsafe;
anitya -> "python-openid";
anitya -> sqlalchemy;
anitya -> wtforms;
ansible -> mock;
ansible -> pytest;
anyconfig -> configobj;
anyconfig -> coveralls;
anyconfig -> flake8;
anyconfig -> jinja2;
anyconfig -> jsonschema;
anyconfig -> mock;
anyconfig -> "msgpack-python";
anyconfig -> nose;
anyconfig -> pep8;
anyconfig -> pylint;
anyconfig -> pymongo;
anyconfig -> pyyaml;
anyconfig -> simplejson;
anytemplate -> anyconfig;
anytemplate -> cheetah;
anytemplate -> coveralls;
anytemplate -> jinja2;
anytemplate -> mako;
anytemplate -> nose;
anytemplate -> pep8;
anytemplate -> pylint;
anytemplate -> pystache;
anytemplate -> pyyaml;
anytemplate -> simplejson;
"apache-libcloud" -> flake8;
"apache-libcloud" -> mock;
"apache-libcloud" -> pep8;
AppValidationAutomation -> configparser;
AppValidationAutomation -> datetime;
AppValidationAutomation -> logging;
arches -> django;
arches -> elasticsearch;
arches -> fabric;
arches -> livereload;
arches -> pillow;
arches -> pyyaml;
arches -> rdflib;
arches -> sphinx;
arches -> unicodecsv;
arches -> webtest;
arches -> xlrd;
"arsenal-director" -> babel;
"arsenal-director" -> coverage;
"arsenal-director" -> discover;
"arsenal-director" -> eventlet;
"arsenal-director" -> hacking;
"arsenal-director" -> oslosphinx;
"arsenal-director" -> oslotest;
"arsenal-director" -> pbr;
"arsenal-director" -> "python-glanceclient";
"arsenal-director" -> "python-ironicclient";
"arsenal-director" -> "python-keystoneclient";
"arsenal-director" -> "python-novaclient";
"arsenal-director" -> "python-subunit";
"arsenal-director" -> sphinx;
"arsenal-director" -> testrepository;
"arsenal-director" -> testscenarios;
"arsenal-director" -> testtools;
askbot -> beautifulsoup4;
askbot -> django;
askbot -> "django-celery";
askbot -> "django-countries";
askbot -> "django-picklefield";
askbot -> "django-tinymce";
askbot -> html5lib;
askbot -> jinja2;
askbot -> jsonfield;
askbot -> markdown2;
askbot -> mock;
askbot -> oauth2;
askbot -> pyjwt;
askbot -> pystache;
askbot -> "python-openid";
askbot -> pytz;
askbot -> simplejson;
askbot -> unidecode;
"askbot-tuan" -> beautifulsoup4;
"askbot-tuan" -> django;
"askbot-tuan" -> "django-celery";
"askbot-tuan" -> "django-countries";
"askbot-tuan" -> "django-tinymce";
"askbot-tuan" -> html5lib;
"askbot-tuan" -> jinja2;
"askbot-tuan" -> markdown2;
"askbot-tuan" -> oauth2;
"askbot-tuan" -> pystache;
"askbot-tuan" -> "python-openid";
"askbot-tuan" -> pytz;
"askbot-tuan" -> south;
"askbot-tuan" -> unidecode;
"asm.cms" -> distribute;
"asm.cms" -> grok;
"asm.cms" -> "hurry.query";
"asm.cms" -> lxml;
"asm.cms" -> zodb3;
"asm.cms" -> "zope.app.container";
"asm.cms" -> "zope.app.testing";
"asm.cms" -> "zope.deferredimport";
"asm.cms" -> "zope.event";
"asm.cms" -> "zope.interface";
"asm.cms" -> "zope.lifecycleevent";
"asm.cms" -> "zope.schema";
"asm.cms" -> "zope.traversing";
"asm.cmsui" -> "asm.cms";
"asm.cmsui" -> distribute;
"asm.cmsui" -> grok;
"asm.cmsui" -> "hurry.query";
"asm.cmsui" -> lxml;
"asm.cmsui" -> simplejson;
"asm.cmsui" -> transaction;
"asm.cmsui" -> zodb3;
"asm.cmsui" -> "zope.app.component";
"asm.cmsui" -> "zope.app.container";
"asm.cmsui" -> "zope.app.publication";
"asm.cmsui" -> "zope.app.testing";
"asm.cmsui" -> "zope.component";
"asm.cmsui" -> "zope.event";
"asm.cmsui" -> "zope.interface";
"asm.cmsui" -> "zope.intid";
"asm.cmsui" -> "zope.lifecycleevent";
"asm.cmsui" -> "zope.security";
"asm.cmsui" -> "zope.traversing";
assemblycoins -> ecdsa;
assemblycoins -> flask;
assemblycoins -> "flask-sqlalchemy";
assemblycoins -> gunicorn;
assemblycoins -> itsdangerous;
assemblycoins -> markupsafe;
assemblycoins -> psycopg2;
assemblycoins -> pytest;
assemblycoins -> redis;
assemblycoins -> requests;
assemblycoins -> sqlalchemy;
assemblycoins -> virtualenv;
assemblycoins -> werkzeug;
assemblycoins -> wsgiref;
astropy -> cython;
astropy -> matplotlib;
astropy -> numpy;
asv_meta -> django;
asv_meta -> "django-mptt";
asv_meta -> html5lib;
asv_meta -> lxml;
asv_meta -> pytils;
asv_meta -> south;
"asynx-core" -> anyjson;
"asynx-core" -> celery;
"asynx-core" -> importlib;
"asynx-core" -> kombu;
"asynx-core" -> nose;
"asynx-core" -> ordereddict;
"asynx-core" -> "python-dateutil";
"asynx-core" -> pytz;
"asynx-core" -> redis;
"asynx-core" -> requests;
"asynx-core" -> tzlocal;
asynxd -> anyjson;
asynxd -> argparse;
asynxd -> "asynx-core";
asynxd -> flask;
asynxd -> "flask-script";
asynxd -> gunicorn;
asynxd -> nose;
asynxd -> "python-dateutil";
asynxd -> pytz;
asynxd -> sh;
asynxd -> tzlocal;
asynxd -> voluptuous;
atramhasis -> alembic;
atramhasis -> babel;
atramhasis -> colander;
atramhasis -> coveralls;
atramhasis -> "dogpile.cache";
atramhasis -> flake8;
atramhasis -> jinja2;
atramhasis -> mccabe;
atramhasis -> mock;
atramhasis -> pep8;
atramhasis -> psycopg2;
atramhasis -> py;
atramhasis -> pyflakes;
atramhasis -> pyramid;
atramhasis -> "pyramid-debugtoolbar";
atramhasis -> "pyramid-jinja2";
atramhasis -> "pyramid-tm";
atramhasis -> pytest;
atramhasis -> "pytest-cov";
atramhasis -> requests;
atramhasis -> six;
atramhasis -> sphinx;
atramhasis -> "sphinxcontrib-httpdomain";
atramhasis -> sqlalchemy;
atramhasis -> transaction;
atramhasis -> waitress;
atramhasis -> webtest;
atramhasis -> "zope.sqlalchemy";
attrdict -> coverage;
attrdict -> flake8;
attrdict -> nose;
attrdict -> "python-coveralls";
augeias -> augeias;
augeias -> coveralls;
augeias -> flake8;
augeias -> mccabe;
augeias -> mock;
augeias -> pastedeploy;
augeias -> pep8;
augeias -> py;
augeias -> pyflakes;
augeias -> pyramid;
augeias -> "pyramid-debugtoolbar";
augeias -> pytest;
augeias -> "pytest-cov";
augeias -> "repoze.lru";
augeias -> sphinx;
augeias -> "sphinx-rtd-theme";
augeias -> "sphinxcontrib-httpdomain";
augeias -> translationstring;
augeias -> venusian;
augeias -> waitress;
augeias -> webob;
augeias -> webtest;
augeias -> "zope.deprecation";
augeias -> "zope.interface";
Authcode -> bottle;
Authcode -> flake8;
Authcode -> flask;
Authcode -> "flask-sqlalchemy";
Authcode -> passlib;
Authcode -> pytest;
Authcode -> "pytest-cov";
Authcode -> requests;
Authcode -> sqlalchemy;
Authcode -> tox;
Authcode -> werkzeug;
authentic2 -> django;
authentic2 -> "django-debug-toolbar";
authentic2 -> "django-model-utils";
authentic2 -> "django-sekizai";
authentic2 -> dnspython;
authentic2 -> requests;
authentic2 -> six;
authentic2 -> south;
"Automated-Lazy-Unit-Testing-in-Python" -> decorator;
"Automated-Lazy-Unit-Testing-in-Python" -> distribute;
"Automated-Lazy-Unit-Testing-in-Python" -> fabric;
"Automated-Lazy-Unit-Testing-in-Python" -> genshi;
"Automated-Lazy-Unit-Testing-in-Python" -> ipython;
"Automated-Lazy-Unit-Testing-in-Python" -> jsonpickle;
"Automated-Lazy-Unit-Testing-in-Python" -> "logilab-common";
"Automated-Lazy-Unit-Testing-in-Python" -> markupsafe;
"Automated-Lazy-Unit-Testing-in-Python" -> nose;
"Automated-Lazy-Unit-Testing-in-Python" -> py;
"Automated-Lazy-Unit-Testing-in-Python" -> pycrypto;
"Automated-Lazy-Unit-Testing-in-Python" -> pydot;
"Automated-Lazy-Unit-Testing-in-Python" -> pylint;
"Automated-Lazy-Unit-Testing-in-Python" -> pyparsing;
"Automated-Lazy-Unit-Testing-in-Python" -> pystache;
"Automated-Lazy-Unit-Testing-in-Python" -> simplejson;
automaton -> coverage;
automaton -> debtcollector;
automaton -> discover;
automaton -> doc8;
automaton -> hacking;
automaton -> oslosphinx;
automaton -> oslotest;
automaton -> pbr;
automaton -> prettytable;
automaton -> "python-subunit";
automaton -> six;
automaton -> sphinx;
automaton -> testrepository;
automaton -> testscenarios;
automaton -> testtools;
ava -> "backports.ssl-match-hostname";
ava -> bottle;
ava -> click;
ava -> gevent;
ava -> "msgpack-python";
ava -> pydispatcher;
ava -> pyyaml;
ava -> requests;
ava -> six;
ava -> ujson;
ava -> ws4py;
avalonms -> "-";
avalonms -> argparse;
avalonms -> fabric;
avalonms -> flask;
avalonms -> gunicorn;
avalonms -> mock;
avalonms -> mutagen;
avalonms -> pylint;
avalonms -> pytest;
avalonms -> raven;
avalonms -> requirements;
avalonms -> simplejson;
avalonms -> sphinx;
avalonms -> "sphinx-rtd-theme";
avalonms -> sqlalchemy;
avalonms -> tox;
avalonms -> twine;
avalonms -> wheel;
awscli -> botocore;
awscli -> colorama;
awscli -> docutils;
awscli -> jmespath;
awscli -> mock;
awscli -> nose;
awscli -> rsa;
awscli -> sphinx;
awscli -> tox;
awscli -> wheel;
backy -> alabaster;
backy -> asyncio;
backy -> babel;
backy -> coverage;
backy -> docutils;
backy -> jinja2;
backy -> markupsafe;
backy -> pep8;
backy -> prettytable;
backy -> py;
backy -> pyflakes;
backy -> pygments;
backy -> pytest;
backy -> "pytest-cache";
backy -> "pytest-capturelog";
backy -> "pytest-cov";
backy -> "pytest-timeout";
backy -> pytz;
backy -> pyyaml;
backy -> requests;
backy -> shortuuid;
backy -> six;
backy -> snowballstemmer;
backy -> sphinx;
backy -> "sphinx-rtd-theme";
backy -> telnetlib3;
"bamboo-data" -> celery;
"bamboo-data" -> cherrypy;
"bamboo-data" -> kombu;
"bamboo-data" -> numpy;
"bamboo-data" -> pandas;
"bamboo-data" -> pymongo;
"bamboo-data" -> pyparsing;
"bamboo-data" -> "python-dateutil";
"bamboo-data" -> routes;
"bamboo-data" -> scipy;
"bamboo-data" -> simplejson;
"bamboo-server" -> celery;
"bamboo-server" -> cherrypy;
"bamboo-server" -> kombu;
"bamboo-server" -> numpy;
"bamboo-server" -> pandas;
"bamboo-server" -> pymongo;
"bamboo-server" -> pyparsing;
"bamboo-server" -> "python-dateutil";
"bamboo-server" -> routes;
"bamboo-server" -> scipy;
"bamboo-server" -> simplejson;
"bambu-tools" -> django;
"bambu-tools" -> "django-taggit";
"bambu-tools" -> markdown;
"bambu-tools" -> oauth;
"bambu-tools" -> oauth2;
"bambu-tools" -> pyquery;
"bambu-tools" -> "python-dateutil";
"bambu-tools" -> requests;
"bambu-tools" -> "sorl-thumbnail";
"bambu-tools" -> twitter;
bandit -> appdirs;
bandit -> beautifulsoup4;
bandit -> coverage;
bandit -> discover;
bandit -> fixtures;
bandit -> gitpython;
bandit -> hacking;
bandit -> mock;
bandit -> oslosphinx;
bandit -> "python-subunit";
bandit -> pyyaml;
bandit -> six;
bandit -> sphinx;
bandit -> stevedore;
bandit -> testrepository;
bandit -> testscenarios;
bandit -> testtools;
"baremetal-network-provisioning" -> babel;
"baremetal-network-provisioning" -> coverage;
"baremetal-network-provisioning" -> discover;
"baremetal-network-provisioning" -> hacking;
"baremetal-network-provisioning" -> neutron;
"baremetal-network-provisioning" -> oslosphinx;
"baremetal-network-provisioning" -> oslotest;
"baremetal-network-provisioning" -> pbr;
"baremetal-network-provisioning" -> "python-neutronclient";
"baremetal-network-provisioning" -> "python-subunit";
"baremetal-network-provisioning" -> sphinx;
"baremetal-network-provisioning" -> "tempest-lib";
"baremetal-network-provisioning" -> testrepository;
"baremetal-network-provisioning" -> testscenarios;
"baremetal-network-provisioning" -> testtools;
BarkingOwl -> beautifulsoup4;
BarkingOwl -> pika;
BarkingOwl -> pymongo;
BarkingOwl -> "python-magic";
BarkingOwl -> requests;
BarkingOwl -> six;
BarkingOwl -> sqlalchemy;
BarkingOwl -> tldextract;
BarkingOwl -> wsgiref;
bash8 -> argparse;
bash8 -> babel;
bash8 -> coverage;
bash8 -> discover;
bash8 -> fixtures;
bash8 -> hacking;
bash8 -> oslosphinx;
bash8 -> pbr;
bash8 -> "python-subunit";
bash8 -> sphinx;
bash8 -> testrepository;
bash8 -> testscenarios;
bash8 -> testtools;
bashate -> argparse;
bashate -> babel;
bashate -> coverage;
bashate -> discover;
bashate -> fixtures;
bashate -> hacking;
bashate -> mock;
bashate -> oslosphinx;
bashate -> pbr;
bashate -> "python-subunit";
bashate -> sphinx;
bashate -> testrepository;
bashate -> testscenarios;
bashate -> testtools;
"bat-country" -> argparse;
"bat-country" -> decorator;
"bat-country" -> matplotlib;
"bat-country" -> mock;
"bat-country" -> networkx;
"bat-country" -> nose;
"bat-country" -> numpy;
"bat-country" -> pillow;
"bat-country" -> protobuf;
"bat-country" -> pyparsing;
"bat-country" -> "python-dateutil";
"bat-country" -> pytz;
"bat-country" -> "scikit-image";
"bat-country" -> scipy;
"bat-country" -> six;
"bat-country" -> wsgiref;
"bcbio-nextgen" -> arrow;
"bcbio-nextgen" -> awscli;
"bcbio-nextgen" -> "bcbio-nextgen";
"bcbio-nextgen" -> biopython;
"bcbio-nextgen" -> boto;
"bcbio-nextgen" -> click;
"bcbio-nextgen" -> cython;
"bcbio-nextgen" -> fabric;
"bcbio-nextgen" -> joblib;
"bcbio-nextgen" -> logbook;
"bcbio-nextgen" -> lxml;
"bcbio-nextgen" -> "msgpack-python";
"bcbio-nextgen" -> nose;
"bcbio-nextgen" -> openpyxl;
"bcbio-nextgen" -> pandas;
"bcbio-nextgen" -> "path.py";
"bcbio-nextgen" -> progressbar;
"bcbio-nextgen" -> psutil;
"bcbio-nextgen" -> pybedtools;
"bcbio-nextgen" -> pysam;
"bcbio-nextgen" -> "python-dateutil";
"bcbio-nextgen" -> pyyaml;
"bcbio-nextgen" -> pyzmq;
"bcbio-nextgen" -> "scikit-learn";
"bcbio-nextgen" -> seaborn;
"bcbio-nextgen" -> sh;
"bcbio-nextgen" -> tabulate;
"bcbio-nextgen" -> toolz;
"bcbio-nextgen" -> tornado;
bdgt -> alembic;
bdgt -> argparse;
bdgt -> beautifulsoup4;
bdgt -> behave;
bdgt -> colorama;
bdgt -> coverage;
bdgt -> enum34;
bdgt -> mako;
bdgt -> markupsafe;
bdgt -> mock;
bdgt -> nose;
bdgt -> pyyaml;
bdgt -> "setuptools-git";
bdgt -> six;
bdgt -> sqlalchemy;
bdgt -> wsgiref;
beanstalkc -> pyyaml;
beertools -> argparse;
beertools -> beautifulsoup4;
beertools -> numpy;
beertools -> "python-dateutil";
beertools -> "python-levenshtein";
beertools -> pytz;
beertools -> requests;
beertools -> shapely;
beertools -> unidecode;
beertools -> wsgiref;
Beeswarm -> cssselect;
Beeswarm -> ecdsa;
Beeswarm -> enum34;
Beeswarm -> flask;
Beeswarm -> "flask-login";
Beeswarm -> "flask-wtf";
Beeswarm -> fs;
Beeswarm -> gevent;
Beeswarm -> lxml;
Beeswarm -> mock;
Beeswarm -> netifaces;
Beeswarm -> nose;
Beeswarm -> paramiko;
Beeswarm -> pycrypto;
Beeswarm -> pyopenssl;
Beeswarm -> pyzmq;
Beeswarm -> requests;
Beeswarm -> sqlalchemy;
behave -> pyhamcrest;
"bethel.silva.purge" -> distribute;
"bethel.silva.purge" -> "five.grok";
"bethel.silva.purge" -> "plone.cachepurging";
"bethel.silva.purge" -> "plone.registry";
"bethel.silva.purge" -> "silva.core.conf";
"bethel.silva.purge" -> "silva.core.interfaces";
"bethel.silva.purge" -> "silva.core.services";
"bethel.silva.purge" -> "silva.core.views";
"bethel.silva.purge" -> "zeam.form.base";
"bethel.silva.purge" -> "zeam.form.silva";
"bethel.silva.purge" -> "zeam.form.ztk";
"bethel.silva.purge" -> "zope.annotation";
"bethel.silva.purge" -> "zope.component";
"bethel.silva.purge" -> "zope.interface";
bewype -> babel;
bewype -> genshi;
bewype -> pyopenssl;
bewype -> pyyaml;
bewype -> simplejson;
bewype -> "sqlalchemy-migrate";
bewype -> twisted;
bewype -> "zope.interface";
bigtempo -> coverage;
bigtempo -> cython;
bigtempo -> matplotlib;
bigtempo -> nose;
bigtempo -> numexpr;
bigtempo -> numpy;
bigtempo -> pandas;
bigtempo -> pep8;
bigtempo -> "python-dateutil";
bigtempo -> pytz;
bigtempo -> scipy;
bigtempo -> statsmodels;
billy -> boto;
billy -> django;
billy -> icalendar;
billy -> lxml;
billy -> nose;
billy -> pymongo;
billy -> unicodecsv;
billy -> validictory;
bindep -> coverage;
bindep -> discover;
bindep -> fixtures;
bindep -> hacking;
bindep -> mox;
bindep -> oslosphinx;
bindep -> pbr;
bindep -> "python-subunit";
bindep -> sphinx;
bindep -> "sphinxcontrib-programoutput";
bindep -> testrepository;
bindep -> testtools;
bingads -> chardet;
bingads -> coverage;
bingads -> distribute;
bingads -> enum34;
bingads -> flake8;
bingads -> future;
bingads -> mock;
bingads -> pytest;
bingads -> requests;
bingads -> six;
bingads -> sphinx;
bingads -> "suds-jurko";
biobox_cli -> behave;
biobox_cli -> "docker-py";
biobox_cli -> docopt;
biobox_cli -> nose;
biobox_cli -> pexpect;
biobox_cli -> pyyaml;
biobox_cli -> rednose;
biobox_cli -> requests;
biobox_cli -> twine;
bioinfo -> bumpversion;
bioinfo -> "check-manifest";
bioinfo -> coverage;
bioinfo -> docopt;
bioinfo -> mock;
bioinfo -> nose;
bioinfo -> nosexcover;
bioinfo -> pyroma;
bioinfo -> pysam;
bioinfo -> tox;
"birdhousebuilder.recipe.conda" -> distribute;
"birdhousebuilder.recipe.conda" -> "zc.buildout";
"birdhousebuilder.recipe.supervisor" -> "birdhousebuilder.recipe.conda";
"birdhousebuilder.recipe.supervisor" -> distribute;
"birdhousebuilder.recipe.supervisor" -> mako;
"birdhousebuilder.recipe.supervisor" -> "zc.buildout";
"bise.theme" -> "collective.js.jqueryui";
"bise.theme" -> "collective.transmogrifier";
"bise.theme" -> distribute;
"bise.theme" -> "five.grok";
"bise.theme" -> "plone.api";
"bise.theme" -> "plone.app.dexterity";
"bise.theme" -> "plone.app.iterate";
"bise.theme" -> "plone.app.referenceablebehavior";
"bise.theme" -> "plone.app.versioningbehavior";
"bise.theme" -> "products.cmfplone";
"bise.theme" -> "products.collage";
"bise.theme" -> requests;
"bise.theme" -> "sc.social.like";
"bise.theme" -> "z3c.jbot";
bitmerchant -> bunch;
bitmerchant -> coverage;
bitmerchant -> ecdsa;
bitmerchant -> mock;
bitmerchant -> nose;
bitmerchant -> six;
blessed -> doc8;
blessed -> mock;
blessed -> pexpect;
blessed -> pytest;
blessed -> "pytest-cov";
blessed -> "pytest-xdist";
blessed -> "restructuredtext-lint";
blessed -> six;
blessed -> sphinx;
blessed -> "sphinx-rtd-theme";
blueberrypy -> cherrypy;
blueberrypy -> hiredis;
blueberrypy -> jinja2;
blueberrypy -> markupsafe;
blueberrypy -> "python-dateutil";
blueberrypy -> pyyaml;
blueberrypy -> redis;
blueberrypy -> routes;
blueberrypy -> shapely;
blueberrypy -> simplejson;
blueberrypy -> sqlalchemy;
blueberrypy -> webassets;
blueberrypy -> weberror;
BOSI -> cliff;
BOSI -> coverage;
BOSI -> discover;
BOSI -> fixtures;
BOSI -> futures;
BOSI -> hacking;
BOSI -> mock;
BOSI -> neutron;
BOSI -> oslosphinx;
BOSI -> oslotest;
BOSI -> pbr;
BOSI -> "python-subunit";
BOSI -> "requests-mock";
BOSI -> sphinx;
BOSI -> subprocess32;
BOSI -> "tempest-lib";
BOSI -> testrepository;
BOSI -> testscenarios;
BOSI -> testtools;
BOSI -> webtest;
boto3 -> botocore;
boto3 -> jmespath;
boto3 -> mock;
boto3 -> nose;
boto3 -> wheel;
botocore -> behave;
botocore -> docutils;
botocore -> jmespath;
botocore -> mock;
botocore -> nose;
botocore -> "python-dateutil";
botocore -> tox;
botocore -> wheel;
"brasil.gov.agenda" -> "brasil.gov.tiles";
"brasil.gov.agenda" -> "collective.portlet.calendar";
"brasil.gov.agenda" -> distribute;
"brasil.gov.agenda" -> "plone.api";
"brasil.gov.agenda" -> "plone.app.content";
"brasil.gov.agenda" -> "plone.app.dexterity";
"brasil.gov.agenda" -> "plone.app.portlets";
"brasil.gov.agenda" -> "plone.app.referenceablebehavior";
"brasil.gov.agenda" -> "plone.app.upgrade";
"brasil.gov.agenda" -> "plone.app.versioningbehavior";
"brasil.gov.agenda" -> "plone.app.vocabularies";
"brasil.gov.agenda" -> "plone.behavior";
"brasil.gov.agenda" -> "plone.dexterity";
"brasil.gov.agenda" -> "plone.directives.form";
"brasil.gov.agenda" -> "plone.portlets";
"brasil.gov.agenda" -> "plone.supermodel";
"brasil.gov.agenda" -> "plone.uuid";
"brasil.gov.agenda" -> "products.cmfcore";
"brasil.gov.agenda" -> "products.cmfplone";
"brasil.gov.agenda" -> "products.genericsetup";
"brasil.gov.agenda" -> "zope.component";
"brasil.gov.agenda" -> "zope.interface";
"brasil.gov.agenda" -> "zope.schema";
"brasil.gov.paginadestaque" -> "collective.cover";
"brasil.gov.paginadestaque" -> distribute;
"brasil.gov.paginadestaque" -> "five.grok";
"brasil.gov.paginadestaque" -> "plone.api";
"brasil.gov.paginadestaque" -> "plone.app.upgrade";
"brasil.gov.paginadestaque" -> "products.cmfplone";
"brasil.gov.paginadestaque" -> "products.genericsetup";
"brasil.gov.paginadestaque" -> "zope.i18nmessageid";
"brasil.gov.paginadestaque" -> "zope.interface";
"brasil.gov.portal" -> accesscontrol;
"brasil.gov.portal" -> acquisition;
"brasil.gov.portal" -> "brasil.gov.agenda";
"brasil.gov.portal" -> "brasil.gov.tiles";
"brasil.gov.portal" -> "collective.cover";
"brasil.gov.portal" -> "collective.nitf";
"brasil.gov.portal" -> "collective.polls";
"brasil.gov.portal" -> distribute;
"brasil.gov.portal" -> "five.grok";
"brasil.gov.portal" -> "plone.api";
"brasil.gov.portal" -> "plone.app.dexterity";
"brasil.gov.portal" -> "plone.app.layout";
"brasil.gov.portal" -> "plone.app.portlets";
"brasil.gov.portal" -> "plone.app.theming";
"brasil.gov.portal" -> "plone.app.upgrade";
"brasil.gov.portal" -> "plone.dexterity";
"brasil.gov.portal" -> "plone.directives.form";
"brasil.gov.portal" -> "plone.memoize";
"brasil.gov.portal" -> "plone.namedfile";
"brasil.gov.portal" -> "plone.supermodel";
"brasil.gov.portal" -> "plone.tiles";
"brasil.gov.portal" -> "products.cmfcore";
"brasil.gov.portal" -> "products.cmfplone";
"brasil.gov.portal" -> "products.genericsetup";
"brasil.gov.portal" -> "products.ploneformgen";
"brasil.gov.portal" -> "sc.embedder";
"brasil.gov.portal" -> "sc.social.like";
"brasil.gov.portal" -> "transmogrify.dexterity";
"brasil.gov.portal" -> "zope.component";
"brasil.gov.portal" -> "zope.interface";
"brasil.gov.portal" -> "zope.schema";
"brasil.gov.tiles" -> "collective.cover";
"brasil.gov.tiles" -> "collective.nitf";
"brasil.gov.tiles" -> "collective.polls";
"brasil.gov.tiles" -> distribute;
"brasil.gov.tiles" -> "five.grok";
"brasil.gov.tiles" -> "plone.app.blocks";
"brasil.gov.tiles" -> "plone.app.dexterity";
"brasil.gov.tiles" -> "plone.app.iterate";
"brasil.gov.tiles" -> "plone.app.layout";
"brasil.gov.tiles" -> "plone.app.registry";
"brasil.gov.tiles" -> "plone.app.tiles";
"brasil.gov.tiles" -> "plone.app.upgrade";
"brasil.gov.tiles" -> "plone.app.vocabularies";
"brasil.gov.tiles" -> "plone.dexterity";
"brasil.gov.tiles" -> "plone.memoize";
"brasil.gov.tiles" -> "plone.namedfile";
"brasil.gov.tiles" -> "plone.tiles";
"brasil.gov.tiles" -> "plone.uuid";
"brasil.gov.tiles" -> "products.cmfcore";
"brasil.gov.tiles" -> "products.cmfplone";
"brasil.gov.tiles" -> "products.genericsetup";
"brasil.gov.tiles" -> "zope.component";
"brasil.gov.tiles" -> "zope.interface";
"brasil.gov.tiles" -> "zope.schema";
braubuddy -> alabaster;
braubuddy -> cherrypy;
braubuddy -> cssselect;
braubuddy -> jinja2;
braubuddy -> lxml;
braubuddy -> mock;
braubuddy -> pygal;
braubuddy -> pyserial;
braubuddy -> pyxdg;
braubuddy -> twitter;
brightway2 -> appdirs;
brightway2 -> bw2calc;
brightway2 -> bw2data;
brightway2 -> bw2io;
brightway2 -> docopt;
brightway2 -> flask;
brightway2 -> future;
brightway2 -> lxml;
brightway2 -> nose;
brightway2 -> numpy;
brightway2 -> peewee;
brightway2 -> psutil;
brightway2 -> requests;
brightway2 -> scipy;
brightway2 -> unicodecsv;
brightway2 -> voluptuous;
brightway2 -> whoosh;
brightway2 -> xlrd;
brightway2 -> xlsxwriter;
brome -> boto;
brome -> cssmin;
brome -> cssselect;
brome -> decorator;
brome -> flask;
brome -> "flask-assets";
brome -> "flask-cache";
brome -> "flask-debugtoolbar";
brome -> "flask-login";
brome -> "flask-migrate";
brome -> "flask-sqlalchemy";
brome -> "flask-wtf";
brome -> gunicorn;
brome -> ipython;
brome -> itsdangerous;
brome -> jinja2;
brome -> jsmin;
brome -> lxml;
brome -> markupsafe;
brome -> netifaces;
brome -> paramiko;
brome -> psutil;
brome -> pyyaml;
brome -> selenium;
brome -> sqlalchemy;
brome -> tornado;
brome -> werkzeug;
brome -> wheel;
brome -> wtforms;
bsnstacklib -> cliff;
bsnstacklib -> coverage;
bsnstacklib -> fixtures;
bsnstacklib -> hacking;
bsnstacklib -> mock;
bsnstacklib -> neutron;
bsnstacklib -> oslosphinx;
bsnstacklib -> oslotest;
bsnstacklib -> "python-subunit";
bsnstacklib -> "requests-mock";
bsnstacklib -> sphinx;
bsnstacklib -> "tempest-lib";
bsnstacklib -> testrepository;
bsnstacklib -> testscenarios;
bsnstacklib -> testtools;
bsnstacklib -> webtest;
"bst.pygasus.core" -> distribute;
"bst.pygasus.core" -> genshi;
"bst.pygasus.core" -> "grokcore.component";
"bst.pygasus.core" -> martian;
"bst.pygasus.core" -> "zope.interface";
bts -> colorama;
bts -> docutils;
bts -> ecdsa;
bts -> flake8;
bts -> jinja2;
bts -> markupsafe;
bts -> mccabe;
bts -> mock;
bts -> paver;
bts -> pep8;
bts -> py;
bts -> pyflakes;
bts -> pygments;
bts -> pytest;
bts -> requests;
bts -> scrypt;
bts -> sphinx;
btsbots -> bts;
btsbots -> btsprice;
btsbots -> btspusher;
btsbots -> colorama;
btsbots -> docutils;
btsbots -> flake8;
btsbots -> jinja2;
btsbots -> markupsafe;
btsbots -> mccabe;
btsbots -> mock;
btsbots -> paver;
btsbots -> pep8;
btsbots -> py;
btsbots -> pyflakes;
btsbots -> pygments;
btsbots -> pytest;
btsbots -> sphinx;
"btsbots-wallet" -> bts;
"btsbots-wallet" -> colorama;
"btsbots-wallet" -> docutils;
"btsbots-wallet" -> flake8;
"btsbots-wallet" -> flask;
"btsbots-wallet" -> "flask-babel";
"btsbots-wallet" -> gevent;
"btsbots-wallet" -> "gevent-socketio";
"btsbots-wallet" -> "gevent-websocket";
"btsbots-wallet" -> greenlet;
"btsbots-wallet" -> itsdangerous;
"btsbots-wallet" -> jinja2;
"btsbots-wallet" -> markupsafe;
"btsbots-wallet" -> mccabe;
"btsbots-wallet" -> mock;
"btsbots-wallet" -> paver;
"btsbots-wallet" -> pep8;
"btsbots-wallet" -> py;
"btsbots-wallet" -> pyflakes;
"btsbots-wallet" -> pygments;
"btsbots-wallet" -> pytest;
"btsbots-wallet" -> sphinx;
"btsbots-wallet" -> ujson;
"btsbots-wallet" -> werkzeug;
btsprice -> aiohttp;
btsprice -> bts;
btsprice -> btspusher;
btsprice -> colorama;
btsprice -> docutils;
btsprice -> flake8;
btsprice -> jinja2;
btsprice -> markupsafe;
btsprice -> mccabe;
btsprice -> mock;
btsprice -> paver;
btsprice -> pep8;
btsprice -> prettytable;
btsprice -> py;
btsprice -> pyflakes;
btsprice -> pygments;
btsprice -> pytest;
btsprice -> sphinx;
btspusher -> autobahn;
btspusher -> colorama;
btspusher -> docutils;
btspusher -> flake8;
btspusher -> jinja2;
btspusher -> markupsafe;
btspusher -> mccabe;
btspusher -> mock;
btspusher -> paver;
btspusher -> pep8;
btspusher -> py;
btspusher -> pyflakes;
btspusher -> pygments;
btspusher -> pytest;
btspusher -> sphinx;
buccaneer -> blinker;
buccaneer -> boto;
buccaneer -> chameleon;
buccaneer -> docutils;
buccaneer -> jinja2;
buccaneer -> pygments;
buccaneer -> "python-dateutil";
buccaneer -> "python-magic";
buccaneer -> pytz;
buccaneer -> six;
buccaneer -> unidecode;
bugwarrior -> click;
bugwarrior -> "dogpile.cache";
bugwarrior -> jinja2;
bugwarrior -> keyring;
bugwarrior -> lockfile;
bugwarrior -> pycurl;
bugwarrior -> "python-dateutil";
bugwarrior -> pytz;
bugwarrior -> pyxdg;
bugwarrior -> requests;
bugwarrior -> six;
bugwarrior -> taskw;
bundletester -> blessings;
bundletester -> bzr;
bundletester -> "charm-tools";
bundletester -> coverage;
bundletester -> mock;
bundletester -> nose;
bundletester -> requests;
bundletester -> simplejson;
bundletester -> "websocket-client";
busbus -> arrow;
busbus -> cherrypy;
busbus -> distribute;
busbus -> lockfile;
busbus -> mock;
busbus -> pytest;
busbus -> "pytest-cache";
busbus -> "pytest-pep8";
busbus -> requests;
busbus -> responses;
busbus -> six;
busbus -> wheel;
bw2all -> brightway2;
bw2all -> bw2calc;
bw2all -> docopt;
bw2all -> flask;
bw2all -> nose;
bw2all -> numpy;
bw2all -> progressbar;
bw2all -> scipy;
bw2all -> voluptuous;
bw2calc -> numpy;
bw2calc -> scipy;
bw2data -> brightway2;
bw2data -> bw2calc;
bw2data -> bw2io;
bw2data -> colorama;
bw2data -> docopt;
bw2data -> flask;
bw2data -> lxml;
bw2data -> nose;
bw2data -> numpy;
bw2data -> peewee;
bw2data -> requests;
bw2data -> scipy;
bw2data -> unicodecsv;
bw2data -> voluptuous;
bw2data -> whoosh;
bw2data -> wrapt;
bw2io -> bw2calc;
bw2io -> bw2data;
bw2io -> lxml;
bw2io -> numpy;
bw2io -> psutil;
bw2io -> scipy;
bw2io -> unidecode;
bw2io -> voluptuous;
bw2io -> xlrd;
bw2io -> xlsxwriter;
bztools -> argparse;
bztools -> certifi;
bztools -> chardet;
bztools -> httplib2;
bztools -> jinja2;
bztools -> keyring;
bztools -> "path.py";
bztools -> pep8;
bztools -> pyflakes;
bztools -> "python-dateutil";
bztools -> requests;
bztools -> simplejson;
bztools -> wsgiref;
c2cgeoportal -> "dogpile.cache";
c2cgeoportal -> "fa.jquery";
c2cgeoportal -> isodate;
c2cgeoportal -> "js.jquery";
c2cgeoportal -> paste;
c2cgeoportal -> pastedeploy;
c2cgeoportal -> pastescript;
c2cgeoportal -> psycopg2;
c2cgeoportal -> pyramid;
c2cgeoportal -> "pyramid-chameleon";
c2cgeoportal -> "pyramid-tm";
c2cgeoportal -> pyyaml;
c2cgeoportal -> waitress;
c2cgeoportal -> webhelpers;
Cactus -> argparse;
Cactus -> boto;
Cactus -> colorama;
Cactus -> colorlog;
Cactus -> django;
Cactus -> keyring;
Cactus -> markdown2;
Cactus -> mock;
Cactus -> nose;
Cactus -> six;
Cactus -> tornado;
Cactus -> tox;
Cactus -> unittest2;
cairotft -> coverage;
cairotft -> flake8;
cairotft -> ipython;
cairotft -> nose;
cairotft -> pylint;
cairotft -> sphinx;
cairotft -> testtools;
cairotft -> wheel;
cameo -> blessings;
cameo -> ipython;
cameo -> jinja2;
cameo -> "lazy-object-proxy";
cameo -> networkx;
cameo -> numexpr;
cameo -> numpy;
cameo -> pandas;
cameo -> pyzmq;
cameo -> redis;
cameo -> scipy;
cameo -> six;
cameo -> sphinx;
cameo -> "sphinx-rtd-theme";
carml -> cffi;
carml -> cryptography;
carml -> humanize;
carml -> pyasn1;
carml -> "pyasn1-modules";
carml -> pycparser;
carml -> pyopenssl;
carml -> "service-identity";
carml -> six;
carml -> twisted;
carml -> txtorcon;
carml -> "zope.interface";
casexml -> celery;
casexml -> decorator;
casexml -> "dimagi-utils";
casexml -> django;
casexml -> lxml;
casexml -> pytz;
casexml -> receiver;
casexml -> requests;
casexml -> restkit;
casexml -> simplejson;
caso -> coverage;
caso -> discover;
caso -> fixtures;
caso -> hacking;
caso -> mock;
caso -> "oslo.config";
caso -> "oslo.log";
caso -> "oslo.utils";
caso -> oslosphinx;
caso -> pbr;
caso -> "python-ceilometerclient";
caso -> "python-dateutil";
caso -> "python-glanceclient";
caso -> "python-keystoneclient";
caso -> "python-novaclient";
caso -> "python-subunit";
caso -> six;
caso -> sphinx;
caso -> testrepository;
caso -> testscenarios;
caso -> testtools;
castellan -> babel;
castellan -> coverage;
castellan -> cryptography;
castellan -> discover;
castellan -> hacking;
castellan -> "oslo.config";
castellan -> "oslo.context";
castellan -> "oslo.log";
castellan -> "oslo.policy";
castellan -> "oslo.serialization";
castellan -> "oslo.utils";
castellan -> oslosphinx;
castellan -> oslotest;
castellan -> pbr;
castellan -> "python-barbicanclient";
castellan -> "python-subunit";
castellan -> sphinx;
castellan -> testrepository;
castellan -> testscenarios;
castellan -> testtools;
catalyze -> cffi;
catalyze -> click;
catalyze -> cryptography;
catalyze -> enum34;
catalyze -> "ndg-httpsclient";
catalyze -> pyasn1;
catalyze -> pycparser;
catalyze -> pycrypto;
catalyze -> pyopenssl;
catalyze -> requests;
catalyze -> six;
catalyze -> ws4py;
catsnap -> argparse;
catsnap -> boto;
catsnap -> flask;
catsnap -> gunicorn;
catsnap -> mock;
catsnap -> nose;
catsnap -> pil;
catsnap -> psycopg2;
catsnap -> requests;
catsnap -> splinter;
catsnap -> sqlalchemy;
catsup -> argh;
catsup -> docopt;
catsup -> jinja2;
catsup -> markupsafe;
catsup -> misaka;
catsup -> pathtools;
catsup -> pygments;
catsup -> pyyaml;
catsup -> tornado;
catsup -> ujson;
catsup -> watchdog;
causal -> beautifulsoup;
causal -> django;
causal -> "django-registration";
causal -> feedparser;
causal -> flickrapi;
causal -> oauth2;
causal -> "python-dateutil";
causal -> pytz;
causal -> south;
causal -> tweepy;
ceilometermiddleware -> babel;
ceilometermiddleware -> coverage;
ceilometermiddleware -> discover;
ceilometermiddleware -> hacking;
ceilometermiddleware -> "oslo.config";
ceilometermiddleware -> "oslo.context";
ceilometermiddleware -> "oslo.messaging";
ceilometermiddleware -> "oslo.utils";
ceilometermiddleware -> oslosphinx;
ceilometermiddleware -> oslotest;
ceilometermiddleware -> pbr;
ceilometermiddleware -> pycadf;
ceilometermiddleware -> "python-subunit";
ceilometermiddleware -> six;
ceilometermiddleware -> sphinx;
ceilometermiddleware -> testrepository;
ceilometermiddleware -> testscenarios;
ceilometermiddleware -> testtools;
"ceilometer-powervm" -> coverage;
"ceilometer-powervm" -> discover;
"ceilometer-powervm" -> fixtures;
"ceilometer-powervm" -> hacking;
"ceilometer-powervm" -> mock;
"ceilometer-powervm" -> "oslo.log";
"ceilometer-powervm" -> oslosphinx;
"ceilometer-powervm" -> oslotest;
"ceilometer-powervm" -> pbr;
"ceilometer-powervm" -> "python-subunit";
"ceilometer-powervm" -> sphinx;
"ceilometer-powervm" -> testrepository;
"ceilometer-powervm" -> testscenarios;
"ceilometer-powervm" -> testtools;
"celery-redis-sentinel" -> celery;
"celery-redis-sentinel" -> coverage;
"celery-redis-sentinel" -> flake8;
"celery-redis-sentinel" -> importanize;
"celery-redis-sentinel" -> mock;
"celery-redis-sentinel" -> pytest;
"celery-redis-sentinel" -> "pytest-cov";
"celery-redis-sentinel" -> redis;
"celery-redis-sentinel" -> six;
"celery-redis-sentinel" -> sphinx;
"celery-redis-sentinel" -> "sphinx-autobuild";
"celery-redis-sentinel" -> "sphinx-rtd-theme";
"celery-redis-sentinel" -> tox;
cement -> colorlog;
cement -> configobj;
cement -> coverage;
cement -> genshi;
cement -> mock;
cement -> nose;
cement -> pep8;
cement -> pyinotify;
cement -> pylibmc;
cement -> pystache;
cement -> pyyaml;
cement -> sphinx;
cement -> "sphinx-rtd-theme";
"ceph-workbench" -> configobj;
"ceph-workbench" -> discover;
"ceph-workbench" -> docutils;
"ceph-workbench" -> fixtures;
"ceph-workbench" -> gevent;
"ceph-workbench" -> github2gitlab;
"ceph-workbench" -> gitpython;
"ceph-workbench" -> hacking;
"ceph-workbench" -> mock;
"ceph-workbench" -> "ndg-httpsclient";
"ceph-workbench" -> paramiko;
"ceph-workbench" -> pbr;
"ceph-workbench" -> pyasn1;
"ceph-workbench" -> pyopenssl;
"ceph-workbench" -> pytest;
"ceph-workbench" -> "pytest-capturelog";
"ceph-workbench" -> "pytest-cov";
"ceph-workbench" -> "python-openstackclient";
"ceph-workbench" -> "python-subunit";
"ceph-workbench" -> pyyaml;
"ceph-workbench" -> requests;
"ceph-workbench" -> six;
"ceph-workbench" -> sphinx;
"ceph-workbench" -> testrepository;
"ceph-workbench" -> testtools;
certidude -> click;
certidude -> cryptography;
certidude -> falcon;
certidude -> humanize;
certidude -> jinja2;
certidude -> markupsafe;
certidude -> pycountry;
certidude -> pycrypto;
certidude -> pyopenssl;
certidude -> setproctitle;
cfgtool -> configobj;
cfgtool -> logtool;
cfgtool -> "path.py";
cfgtool -> six;
cfgtool -> termcolor;
"chanjo-report" -> "flask-assets";
"chanjo-report" -> "flask-babel";
"chanjo-report" -> "flask-debugtoolbar";
"chanjo-report" -> "path.py";
"chanjo-report" -> pyscss;
"chanjo-report" -> tabulate;
"chanjo-report" -> toolz;
charlatan -> coverage;
charlatan -> coveralls;
charlatan -> flake8;
charlatan -> freezegun;
charlatan -> ipdb;
charlatan -> mock;
charlatan -> pep257;
charlatan -> pep8;
charlatan -> pyflakes;
charlatan -> pyroma;
charlatan -> pytest;
charlatan -> pytz;
charlatan -> pyyaml;
charlatan -> schematics;
charlatan -> sphinx;
charlatan -> sqlalchemy;
charlatan -> tox;
charlatan -> "zest.releaser";
charmhelpers -> coverage;
charmhelpers -> distribute;
charmhelpers -> flake8;
charmhelpers -> gitpython;
charmhelpers -> jinja2;
charmhelpers -> mock;
charmhelpers -> netaddr;
charmhelpers -> netifaces;
charmhelpers -> nose;
charmhelpers -> pip;
charmhelpers -> pyyaml;
charmhelpers -> six;
charmhelpers -> tempita;
charmhelpers -> testtools;
"charm-tools" -> argparse;
"charm-tools" -> blessings;
"charm-tools" -> bzr;
"charm-tools" -> cheetah;
"charm-tools" -> colander;
"charm-tools" -> jsonschema;
"charm-tools" -> paramiko;
"charm-tools" -> "path.py";
"charm-tools" -> pip;
"charm-tools" -> pycrypto;
"charm-tools" -> pyyaml;
"charm-tools" -> requests;
"charm-tools" -> virtualenv;
chempy -> argh;
chempy -> matplotlib;
chempy -> numpy;
chempy -> pytest;
chempy -> "pytest-pep8";
chempy -> scipy;
chempy -> sympy;
chemreac -> argh;
chemreac -> chempy;
chemreac -> cython;
chemreac -> future;
chemreac -> mako;
chemreac -> matplotlib;
chemreac -> numpy;
chemreac -> pytest;
chemreac -> "pytest-pep8";
chemreac -> scipy;
chemreac -> sympy;
chisubmit -> click;
chisubmit -> colorama;
chisubmit -> docutils;
chisubmit -> enum34;
chisubmit -> gitpython;
chisubmit -> pygithub;
chisubmit -> "python-dateutil";
chisubmit -> pytz;
chisubmit -> pyyaml;
chisubmit -> requests;
chisubmit -> tzlocal;
circuits -> "-";
circuits -> fabric;
circuits -> pytest;
circuits -> "pytest-cov";
circuits -> releases;
circuits -> sphinx;
circuits -> "sphinxcontrib-programoutput";
circuits -> tox;
cityhash -> coverage;
cityhash -> cython;
cityhash -> distribute;
cityhash -> ipdb;
cityhash -> ipython;
cityhash -> mock;
cityhash -> nose;
cityhash -> nosexcover;
cityhash -> pytest;
cityhash -> virtualenv;
cityhash -> wheel;
CLASHChimeras -> alabaster;
CLASHChimeras -> beautifulsoup4;
CLASHChimeras -> biopython;
CLASHChimeras -> coloredlogs;
CLASHChimeras -> pandas;
CLASHChimeras -> progress;
CLASHChimeras -> requests;
CLASHChimeras -> "sphinx-argparse";
CLASHChimeras -> tabulate;
Clay -> cherrypy;
Clay -> flake8;
Clay -> flask;
Clay -> markdown;
Clay -> pillow;
Clay -> pygments;
Clay -> pytest;
Clay -> "pytest-cov";
Clay -> tox;
clickclick -> click;
clickclick -> pyyaml;
cliff -> argparse;
cliff -> coverage;
cliff -> httplib2;
cliff -> mock;
cliff -> nose;
cliff -> oslosphinx;
cliff -> pbr;
cliff -> prettytable;
cliff -> pyparsing;
cliff -> pyyaml;
cliff -> six;
cliff -> sphinx;
cliff -> stevedore;
cliff -> unicodecsv;
cliquet -> colander;
cliquet -> contextlib2;
cliquet -> iso8601;
cliquet -> mock;
cliquet -> nose;
cliquet -> "nose-cov";
cliquet -> pastedeploy;
cliquet -> psycopg2;
cliquet -> pyramid;
cliquet -> "pyramid-tm";
cliquet -> "python-dateutil";
cliquet -> raven;
cliquet -> redis;
cliquet -> "repoze.lru";
cliquet -> requests;
cliquet -> simplejson;
cliquet -> six;
cliquet -> sphinx;
cliquet -> "sphinx-rtd-theme";
cliquet -> sqlalchemy;
cliquet -> statsd;
cliquet -> structlog;
cliquet -> tox;
cliquet -> transaction;
cliquet -> translationstring;
cliquet -> ujson;
cliquet -> venusian;
cliquet -> webob;
cliquet -> webtest;
cliquet -> werkzeug;
cliquet -> wheel;
cliquet -> "zest.releaser";
cliquet -> "zope.deprecation";
cliquet -> "zope.interface";
cliquet -> "zope.sqlalchemy";
clize -> six;
"cloudbase-init" -> babel;
"cloudbase-init" -> coverage;
"cloudbase-init" -> eventlet;
"cloudbase-init" -> fixtures;
"cloudbase-init" -> hacking;
"cloudbase-init" -> iso8601;
"cloudbase-init" -> mock;
"cloudbase-init" -> netaddr;
"cloudbase-init" -> netifaces;
"cloudbase-init" -> oauthlib;
"cloudbase-init" -> "oslo.config";
"cloudbase-init" -> "oslo.log";
"cloudbase-init" -> oslosphinx;
"cloudbase-init" -> pbr;
"cloudbase-init" -> pyserial;
"cloudbase-init" -> pyyaml;
"cloudbase-init" -> requests;
"cloudbase-init" -> six;
"cloudbase-init" -> sphinx;
"cloudbase-init" -> testrepository;
"cloudbase-init" -> testtools;
cloudengine -> anyjson;
cloudengine -> argparse;
cloudengine -> boto;
cloudengine -> "django-filter";
cloudengine -> "django-registration";
cloudengine -> djangorestframework;
cloudengine -> gevent;
cloudengine -> "gevent-websocket";
cloudengine -> greenlet;
cloudengine -> gunicorn;
cloudengine -> mimeparse;
cloudengine -> mock;
cloudengine -> "mysql-python";
cloudengine -> pymongo;
cloudengine -> "python-dateutil";
cloudengine -> pytz;
cloudengine -> six;
cloudengine -> wsgiref;
cloudify -> argcomplete;
cloudify -> colorama;
cloudify -> fabric;
cloudify -> itsdangerous;
cloudify -> jinja2;
cloudify -> prettytable;
cloudify -> pyyaml;
cloudify -> retrying;
cloudkitty -> coverage;
cloudkitty -> discover;
cloudkitty -> eventlet;
cloudkitty -> hacking;
cloudkitty -> iso8601;
cloudkitty -> keystonemiddleware;
cloudkitty -> mock;
cloudkitty -> "oslo.concurrency";
cloudkitty -> "oslo.config";
cloudkitty -> "oslo.context";
cloudkitty -> "oslo.db";
cloudkitty -> "oslo.i18n";
cloudkitty -> "oslo.log";
cloudkitty -> "oslo.messaging";
cloudkitty -> "oslo.middleware";
cloudkitty -> "oslo.policy";
cloudkitty -> "oslo.utils";
cloudkitty -> oslosphinx;
cloudkitty -> oslotest;
cloudkitty -> pastedeploy;
cloudkitty -> pbr;
cloudkitty -> pecan;
cloudkitty -> "python-ceilometerclient";
cloudkitty -> "python-keystoneclient";
cloudkitty -> six;
cloudkitty -> sphinx;
cloudkitty -> "sphinxcontrib-httpdomain";
cloudkitty -> "sphinxcontrib-pecanwsme";
cloudkitty -> sqlalchemy;
cloudkitty -> stevedore;
cloudkitty -> testrepository;
cloudkitty -> testscenarios;
"cloudkitty-dashboard" -> babel;
"cloudkitty-dashboard" -> coverage;
"cloudkitty-dashboard" -> discover;
"cloudkitty-dashboard" -> hacking;
"cloudkitty-dashboard" -> oslosphinx;
"cloudkitty-dashboard" -> oslotest;
"cloudkitty-dashboard" -> pbr;
"cloudkitty-dashboard" -> "python-subunit";
"cloudkitty-dashboard" -> sphinx;
"cloudkitty-dashboard" -> testrepository;
"cloudkitty-dashboard" -> testscenarios;
"cloudkitty-dashboard" -> testtools;
cloudmesh_client -> colorama;
cloudmesh_client -> docopt;
cloudmesh_client -> future;
cloudmesh_client -> prettytable;
cloudmesh_client -> pyaml;
cloudmesh_client -> pycrypto;
cloudmesh_client -> "python-keystoneclient";
cloudmesh_client -> "python-novaclient";
cloudmesh_client -> requests;
cloudmesh_client -> simplejson;
cloudmesh_client -> six;
cloudmesh_client -> sqlalchemy;
cloudmesh_client -> urllib3;
cloudpulse -> ansible;
cloudpulse -> bandit;
cloudpulse -> coverage;
cloudpulse -> discover;
cloudpulse -> eventlet;
cloudpulse -> hacking;
cloudpulse -> keystonemiddleware;
cloudpulse -> "mysql-python";
cloudpulse -> "oslo.concurrency";
cloudpulse -> "oslo.config";
cloudpulse -> "oslo.db";
cloudpulse -> "oslo.messaging";
cloudpulse -> "oslo.versionedobjects";
cloudpulse -> oslosphinx;
cloudpulse -> oslotest;
cloudpulse -> paramiko;
cloudpulse -> pbr;
cloudpulse -> pecan;
cloudpulse -> "python-cinderclient";
cloudpulse -> "python-glanceclient";
cloudpulse -> "python-neutronclient";
cloudpulse -> "python-novaclient";
cloudpulse -> "python-subunit";
cloudpulse -> sphinx;
cloudpulse -> testrepository;
cloudpulse -> testscenarios;
cloudpulse -> testtools;
clover -> cherrypy;
clover -> coverage;
clover -> jinja2;
clover -> lxml;
clover -> nose;
clover -> paste;
clover -> polib;
clover -> pyyaml;
clover -> selenium;
clover -> webob;
"cmsplugin-filer" -> django;
"cmsplugin-filer" -> "django-appconf";
"cmsplugin-filer" -> "django-cms";
"cmsplugin-filer" -> "django-filer";
"cmsplugin-filer" -> "django-sekizai";
"cmsplugin-filer" -> "easy-thumbnails";
coal_mine -> coverage;
coal_mine -> flake8;
coal_mine -> logbook;
coal_mine -> mccabe;
coal_mine -> nose;
coal_mine -> pep8;
coal_mine -> pyflakes;
coal_mine -> pymongo;
coal_mine -> pypandoc;
coal_mine -> requests;
coal_mine -> "requests-futures";
coal_mine -> responses;
coal_mine -> six;
cocktail -> beaker;
cocktail -> cherrypy;
cocktail -> nose;
cocktail -> selenium;
cocktail -> simplejson;
cocktail -> zodb3;
cognosco -> argparse;
cognosco -> coverage;
cognosco -> distribute;
cognosco -> mock;
cognosco -> nose;
cognosco -> pbr;
cognosco -> pep8;
cognosco -> pygithub;
cognosco -> pyyaml;
cognosco -> six;
cognosco -> sphinx;
cognosco -> tox;
coil -> docopt;
coil -> flask;
coil -> "flask-login";
coil -> "flask-wtf";
coil -> logbook;
coil -> passlib;
coil -> "py-bcrypt";
coil -> redis;
coil -> requests;
coil -> rq;
coil -> webassets;
coil -> wtforms;
"collections-extended" -> bumpversion;
"collections-extended" -> coverage;
"collections-extended" -> flake8;
"collections-extended" -> ipython;
"collections-extended" -> pytest;
"collections-extended" -> sphinx;
"collections-extended" -> "sphinx-rtd-theme";
"collections-extended" -> "sphinxcontrib-napoleon";
"collections-extended" -> tox;
"collections-extended" -> wheel;
"collective.address" -> distribute;
"collective.address" -> "plone.autoform";
"collective.address" -> "plone.behavior";
"collective.address" -> "plone.indexer";
"collective.address" -> "plone.supermodel";
"collective.address" -> "products.cmfplone";
"collective.address" -> pycountry;
"collective.address" -> "zope.i18nmessageid";
"collective.address" -> "zope.interface";
"collective.address" -> "zope.schema";
"collective.autopermission" -> distribute;
"collective.contentalerts" -> distribute;
"collective.contentalerts" -> "plone.api";
"collective.contentalerts" -> "plone.app.contentrules";
"collective.contentalerts" -> "plone.app.registry";
"collective.contentalerts" -> "products.genericsetup";
"collective.contentalerts" -> "zope.component";
"collective.contentalerts" -> "zope.formlib";
"collective.contentalerts" -> "zope.i18nmessageid";
"collective.contentalerts" -> "zope.interface";
"collective.contentalerts" -> "zope.publisher";
"collective.contentalerts" -> "zope.schema";
"collective.contentalerts" -> zope2;
"collective.cover" -> accesscontrol;
"collective.cover" -> acquisition;
"collective.cover" -> "collective.js.jqueryui";
"collective.cover" -> distribute;
"collective.cover" -> "five.grok";
"collective.cover" -> "plone.api";
"collective.cover" -> "plone.app.blocks";
"collective.cover" -> "plone.app.dexterity";
"collective.cover" -> "plone.app.iterate";
"collective.cover" -> "plone.app.jquery";
"collective.cover" -> "plone.app.jquerytools";
"collective.cover" -> "plone.app.layout";
"collective.cover" -> "plone.app.referenceablebehavior";
"collective.cover" -> "plone.app.registry";
"collective.cover" -> "plone.app.relationfield";
"collective.cover" -> "plone.app.tiles";
"collective.cover" -> "plone.app.vocabularies";
"collective.cover" -> "plone.autoform";
"collective.cover" -> "plone.behavior";
"collective.cover" -> "plone.dexterity";
"collective.cover" -> "plone.directives.form";
"collective.cover" -> "plone.i18n";
"collective.cover" -> "plone.indexer";
"collective.cover" -> "plone.memoize";
"collective.cover" -> "plone.namedfile";
"collective.cover" -> "plone.registry";
"collective.cover" -> "plone.supermodel";
"collective.cover" -> "plone.tiles";
"collective.cover" -> "plone.uuid";
"collective.cover" -> "plone.z3cform";
"collective.cover" -> "products.archetypes";
"collective.cover" -> "products.cmfcore";
"collective.cover" -> "products.cmfplone";
"collective.cover" -> "products.genericsetup";
"collective.cover" -> "z3c.caching";
"collective.cover" -> "z3c.form";
"collective.cover" -> "zope.browserpage";
"collective.cover" -> "zope.component";
"collective.cover" -> "zope.event";
"collective.cover" -> "zope.i18nmessageid";
"collective.cover" -> "zope.interface";
"collective.cover" -> "zope.schema";
"collective.discussionplus" -> "collective.autopermission";
"collective.discussionplus" -> distribute;
"collective.discussionplus" -> "five.grok";
"collective.discussionplus" -> plone;
"collective.discussionplus" -> "plone.indexer";
"collective.discussionplus" -> "products.cmfcore";
"collective.discussionplus" -> "zope.app.container";
"collective.discussionplus" -> "zope.component";
"collective.discussionplus" -> "zope.event";
"collective.discussionplus" -> "zope.lifecycleevent";
"collective.disqus" -> distribute;
"collective.disqus" -> "plone.api";
"collective.disqus" -> "plone.app.discussion";
"collective.disqus" -> "plone.app.layout";
"collective.disqus" -> "plone.app.registry";
"collective.disqus" -> "plone.memoize";
"collective.disqus" -> "plone.portlets";
"collective.disqus" -> "plone.registry";
"collective.disqus" -> "products.cmfcore";
"collective.disqus" -> "products.cmfplone";
"collective.disqus" -> "products.genericsetup";
"collective.disqus" -> "zope.component";
"collective.disqus" -> "zope.i18nmessageid";
"collective.disqus" -> "zope.interface";
"collective.disqus" -> "zope.schema";
"collective.fingerpointing" -> distribute;
"collective.fingerpointing" -> "plone.api";
"collective.fingerpointing" -> "plone.app.registry";
"collective.fingerpointing" -> "plone.directives.form";
"collective.fingerpointing" -> "plone.registry";
"collective.fingerpointing" -> "products.cmfcore";
"collective.fingerpointing" -> "products.cmfplone";
"collective.fingerpointing" -> "products.genericsetup";
"collective.fingerpointing" -> "products.pluggableauthservice";
"collective.fingerpointing" -> "zope.globalrequest";
"collective.fingerpointing" -> "zope.i18nmessageid";
"collective.fingerpointing" -> "zope.interface";
"collective.fingerpointing" -> "zope.lifecycleevent";
"collective.fingerpointing" -> "zope.schema";
"collective.geo.behaviour" -> "collective.geo.mapwidget";
"collective.geo.behaviour" -> distribute;
"collective.geo.behaviour" -> "plone.autoform";
"collective.geo.behaviour" -> "plone.behavior";
"collective.geo.behaviour" -> "plone.supermodel";
"collective.geo.behaviour" -> "zope.component";
"collective.geo.behaviour" -> "zope.interface";
"collective.geo.behaviour" -> "zope.schema";
"collective.geolocationbehavior" -> distribute;
"collective.geolocationbehavior" -> "plone.app.dexterity";
"collective.geolocationbehavior" -> "plone.autoform";
"collective.geolocationbehavior" -> "plone.behavior";
"collective.geolocationbehavior" -> "plone.dexterity";
"collective.geolocationbehavior" -> "plone.supermodel";
"collective.geolocationbehavior" -> "zope.annotation";
"collective.geolocationbehavior" -> "zope.component";
"collective.geolocationbehavior" -> "zope.interface";
"collective.geo.mapwidget" -> beautifulsoup;
"collective.geo.mapwidget" -> "collective.geo.settings";
"collective.geo.mapwidget" -> distribute;
"collective.geo.mapwidget" -> geopy;
"collective.geo.mapwidget" -> "plone.app.z3cform";
"collective.geo.mapwidget" -> "products.cmfcore";
"collective.geo.settings" -> distribute;
"collective.geo.settings" -> "plone.app.registry";
"collective.geo.settings" -> "plone.app.z3cform";
"collective.geo.settings" -> "products.cmfcore";
"collective.glossary" -> distribute;
"collective.glossary" -> "plone.api";
"collective.glossary" -> "plone.app.dexterity";
"collective.glossary" -> "plone.app.registry";
"collective.glossary" -> "plone.dexterity";
"collective.glossary" -> "plone.directives.form";
"collective.glossary" -> "plone.namedfile";
"collective.glossary" -> "products.cmfplone";
"collective.glossary" -> "products.genericsetup";
"collective.glossary" -> "zope.globalrequest";
"collective.glossary" -> "zope.i18nmessageid";
"collective.glossary" -> "zope.interface";
"collective.glossary" -> "zope.schema";
"collective.googlenews" -> "collective.monkeypatcher";
"collective.googlenews" -> distribute;
"collective.googlenews" -> "plone.api";
"collective.googlenews" -> "plone.app.dexterity";
"collective.googlenews" -> "plone.app.layout";
"collective.googlenews" -> "plone.app.registry";
"collective.googlenews" -> "plone.behavior";
"collective.googlenews" -> "plone.dexterity";
"collective.googlenews" -> "plone.directives.form";
"collective.googlenews" -> "plone.namedfile";
"collective.googlenews" -> "plone.supermodel";
"collective.googlenews" -> "products.cmfcore";
"collective.googlenews" -> "products.cmfplone";
"collective.googlenews" -> "products.genericsetup";
"collective.googlenews" -> "zope.i18nmessageid";
"collective.googlenews" -> "zope.interface";
"collective.googlenews" -> "zope.schema";
"collective.gtags" -> distribute;
"collective.gtags" -> plone;
"collective.gtags" -> "plone.app.registry";
"collective.gtags" -> "plone.behavior";
"collective.gtags" -> "plone.directives.form";
"collective.gtags" -> "plone.registry";
"collective.gtags" -> "plone.z3cform";
"collective.gtags" -> "z3c.form";
"collective.gtags" -> "zope.component";
"collective.gtags" -> "zope.interface";
"collective.gtags" -> "zope.schema";
"collective.js.jqueryui" -> distribute;
"collective.js.jqueryui" -> "plone.app.jquery";
"collective.lazysizes" -> distribute;
"collective.lazysizes" -> lxml;
"collective.lazysizes" -> "plone.api";
"collective.lazysizes" -> "plone.app.imaging";
"collective.lazysizes" -> "plone.app.registry";
"collective.lazysizes" -> "plone.app.upgrade";
"collective.lazysizes" -> "plone.directives.form";
"collective.lazysizes" -> "products.cmfplone";
"collective.lazysizes" -> "products.genericsetup";
"collective.lazysizes" -> "zope.i18nmessageid";
"collective.lazysizes" -> "zope.interface";
"collective.lazysizes" -> "zope.schema";
"collective.nitf" -> accesscontrol;
"collective.nitf" -> acquisition;
"collective.nitf" -> "collective.js.jqueryui";
"collective.nitf" -> distribute;
"collective.nitf" -> "plone.api";
"collective.nitf" -> "plone.app.contentmenu";
"collective.nitf" -> "plone.app.dexterity";
"collective.nitf" -> "plone.app.imaging";
"collective.nitf" -> "plone.app.layout";
"collective.nitf" -> "plone.app.portlets";
"collective.nitf" -> "plone.app.querystring";
"collective.nitf" -> "plone.app.referenceablebehavior";
"collective.nitf" -> "plone.app.registry";
"collective.nitf" -> "plone.app.relationfield";
"collective.nitf" -> "plone.app.upgrade";
"collective.nitf" -> "plone.app.vocabularies";
"collective.nitf" -> "plone.behavior";
"collective.nitf" -> "plone.dexterity";
"collective.nitf" -> "plone.directives.form";
"collective.nitf" -> "plone.indexer";
"collective.nitf" -> "plone.portlets";
"collective.nitf" -> "plone.registry";
"collective.nitf" -> "plone.supermodel";
"collective.nitf" -> "plone.uuid";
"collective.nitf" -> "products.cmfplone";
"collective.nitf" -> "products.genericsetup";
"collective.nitf" -> "zope.browserpage";
"collective.nitf" -> "zope.component";
"collective.nitf" -> "zope.formlib";
"collective.nitf" -> "zope.i18nmessageid";
"collective.nitf" -> "zope.interface";
"collective.nitf" -> "zope.schema";
"collective.plonetruegallery" -> distribute;
"collective.plonetruegallery" -> "plone.api";
"collective.plonetruegallery" -> "plone.app.collection";
"collective.plonetruegallery" -> "plone.app.contentmenu";
"collective.plonetruegallery" -> "plone.app.form";
"collective.plonetruegallery" -> "plone.app.imaging";
"collective.plonetruegallery" -> "plone.app.portlets";
"collective.plonetruegallery" -> "plone.app.querystring";
"collective.plonetruegallery" -> "plone.app.vocabularies";
"collective.plonetruegallery" -> "plone.app.z3cform";
"collective.plonetruegallery" -> "plone.folder";
"collective.plonetruegallery" -> "plone.memoize";
"collective.plonetruegallery" -> "plone.portlets";
"collective.plonetruegallery" -> "plone.uuid";
"collective.plonetruegallery" -> "plone.z3cform";
"collective.plonetruegallery" -> "products.archetypes";
"collective.plonetruegallery" -> "products.cmfcore";
"collective.plonetruegallery" -> "products.cmfplone";
"collective.plonetruegallery" -> "products.genericsetup";
"collective.plonetruegallery" -> transaction;
"collective.plonetruegallery" -> "z3c.form";
"collective.plonetruegallery" -> "zope.component";
"collective.plonetruegallery" -> "zope.i18nmessageid";
"collective.plonetruegallery" -> "zope.interface";
"collective.plonetruegallery" -> "zope.schema";
"collective.polls" -> accesscontrol;
"collective.polls" -> "collective.z3cform.widgets";
"collective.polls" -> distribute;
"collective.polls" -> "five.grok";
"collective.polls" -> "plone.api";
"collective.polls" -> "plone.app.dexterity";
"collective.polls" -> "plone.app.portlets";
"collective.polls" -> "plone.app.referenceablebehavior";
"collective.polls" -> "plone.memoize";
"collective.polls" -> "plone.portlets";
"collective.polls" -> "plone.uuid";
"collective.polls" -> "products.cmfcore";
"collective.polls" -> "products.cmfplone";
"collective.polls" -> "products.genericsetup";
"collective.polls" -> "zope.component";
"collective.polls" -> "zope.i18nmessageid";
"collective.polls" -> "zope.interface";
"collective.polls" -> "zope.schema";
"collective.portlet.calendar" -> distribute;
"collective.portlet.calendar" -> "plone.app.collection";
"collective.portlet.calendar" -> "plone.app.portlets";
"collective.portlet.calendar" -> "plone.memoize";
"collective.portlet.calendar" -> "plone.portlets";
"collective.portlet.calendar" -> "products.cmfcore";
"collective.portlet.calendar" -> "products.genericsetup";
"collective.portlet.calendar" -> "zope.component";
"collective.portlet.calendar" -> "zope.interface";
"collective.portlet.calendar" -> "zope.schema";
"collective.ptg.allnewest" -> "collective.plonetruegallery";
"collective.ptg.allnewest" -> distribute;
"collective.registrationcaptcha" -> distribute;
"collective.registrationcaptcha" -> "plone.app.discussion";
"collective.registrationcaptcha" -> "plone.app.users";
"collective.registrationcaptcha" -> "plone.protect";
"collective.registrationcaptcha" -> "plone.registry";
"collective.registrationcaptcha" -> "plone.z3cform";
"collective.registrationcaptcha" -> "products.cmfcore";
"collective.registrationcaptcha" -> "z3c.form";
"collective.registrationcaptcha" -> "zope.component";
"collective.registrationcaptcha" -> "zope.interface";
"collective.registrationcaptcha" -> "zope.publisher";
"collective.searchandreplace" -> acquisition;
"collective.searchandreplace" -> distribute;
"collective.searchandreplace" -> "plone.app.layout";
"collective.searchandreplace" -> "products.cmfcore";
"collective.searchandreplace" -> "products.cmfplone";
"collective.searchandreplace" -> "products.statusmessages";
"collective.searchandreplace" -> "zope.component";
"collective.searchandreplace" -> "zope.formlib";
"collective.searchandreplace" -> "zope.i18nmessageid";
"collective.searchandreplace" -> "zope.interface";
"collective.searchandreplace" -> "zope.publisher";
"collective.searchandreplace" -> "zope.schema";
"collective.searchandreplace" -> zope2;
"collective.venue" -> "collective.address";
"collective.venue" -> "collective.geolocationbehavior";
"collective.venue" -> distribute;
"collective.venue" -> "plone.api";
"collective.venue" -> "plone.app.content";
"collective.venue" -> "plone.app.dexterity";
"collective.venue" -> "plone.app.event";
"collective.venue" -> "plone.app.widgets";
"collective.venue" -> "plone.browserlayer";
"collective.venue" -> "products.cmfplone";
"collective.venue" -> "products.genericsetup";
"collective.z3cform.widgets" -> "collective.js.jqueryui";
"collective.z3cform.widgets" -> distribute;
"collective.z3cform.widgets" -> "plone.app.dexterity";
"collective.z3cform.widgets" -> "plone.app.layout";
"collective.z3cform.widgets" -> "plone.app.vocabularies";
"collective.z3cform.widgets" -> "plone.autoform";
"collective.z3cform.widgets" -> "plone.dexterity";
"collective.z3cform.widgets" -> "plone.directives.form";
"collective.z3cform.widgets" -> "products.cmfcore";
"collective.z3cform.widgets" -> "products.cmfplone";
"collective.z3cform.widgets" -> "products.genericsetup";
"collective.z3cform.widgets" -> "z3c.form";
"collective.z3cform.widgets" -> "zope.browserpage";
"collective.z3cform.widgets" -> "zope.component";
"collective.z3cform.widgets" -> "zope.i18nmessageid";
"collective.z3cform.widgets" -> "zope.interface";
"collective.z3cform.widgets" -> "zope.schema";
"collective.zamqp" -> "collective.monkeypatcher";
"collective.zamqp" -> distribute;
"collective.zamqp" -> "grokcore.component";
"collective.zamqp" -> pika;
"collective.zamqp" -> transaction;
"collective.zamqp" -> zodb3;
"collective.zamqp" -> "zope.component";
"collective.zamqp" -> "zope.deprecation";
"collective.zamqp" -> "zope.event";
"collective.zamqp" -> "zope.interface";
"collective.zamqp" -> "zope.processlifetime";
"collective.zamqp" -> "zope.publisher";
"collective.zamqp" -> zope2;
coloredlogs -> flake8;
coloredlogs -> pep257;
coloredlogs -> pep8;
coloredlogs -> pyflakes;
commutils -> clize;
commutils -> coverage;
commutils -> fixtures;
commutils -> jinja2;
commutils -> mock;
commutils -> pbr;
commutils -> pyhamcrest;
commutils -> "python-subunit";
commutils -> pyyaml;
commutils -> sh;
commutils -> six;
commutils -> testrepository;
commutils -> testscenarios;
commutils -> testtools;
"compose-monkey" -> "docker-py";
"compose-monkey" -> docopt;
"compose-monkey" -> flake8;
"compose-monkey" -> mock;
"compose-monkey" -> nose;
"compose-monkey" -> pep8;
"compose-monkey" -> pyyaml;
"compose-monkey" -> requests;
"compose-monkey" -> six;
"compose-monkey" -> texttable;
"compose-monkey" -> unittest2;
"compose-monkey" -> "websocket-client";
conan -> boto;
conan -> bottle;
conan -> colorama;
conan -> mock;
conan -> nose;
conan -> passlib;
conan -> pyjwt;
conan -> pyyaml;
conan -> requests;
conan -> webtest;
"cone.app" -> babel;
"cone.app" -> chameleon;
"cone.app" -> distribute;
"cone.app" -> node;
"cone.app" -> pyramid;
"cone.app" -> yafowil;
coneyeye -> cfgtool;
coneyeye -> colorama;
coneyeye -> configobj;
coneyeye -> logtool;
coneyeye -> logutils;
coneyeye -> "path.py";
coneyeye -> raven;
coneyeye -> requests;
coneyeye -> setproctitle;
coneyeye -> six;
coneyeye -> statsd;
coneyeye -> termcolor;
coneyeye -> wrapt;
"conn-check" -> cryptography;
"conn-check" -> "ndg-httpsclient";
"conn-check" -> netaddr;
"conn-check" -> nose;
"conn-check" -> psycopg2;
"conn-check" -> pyasn1;
"conn-check" -> pyopenssl;
"conn-check" -> pyyaml;
"conn-check" -> requests;
"conn-check" -> "service-identity";
"conn-check" -> testtools;
"conn-check" -> twisted;
Conpot -> beautifulsoup4;
Conpot -> bottle;
Conpot -> gevent;
Conpot -> jinja2;
Conpot -> lxml;
Conpot -> "mysql-python";
Conpot -> pyghmi;
Conpot -> pysnmp;
Conpot -> requests;
Conpot -> sphinx;
Conpot -> xlrd;
conpy -> argparse;
conpy -> "backports.ssl-match-hostname";
conpy -> celery;
conpy -> flask;
conpy -> "flask-admin";
conpy -> "flask-debugtoolbar";
conpy -> "flask-login";
conpy -> "flask-script";
conpy -> "flask-wtf";
conpy -> jinja2;
conpy -> lxml;
conpy -> mongoengine;
conpy -> nose;
conpy -> pymongo;
conpy -> pytz;
conpy -> requests;
conpy -> sqlalchemy;
conpy -> wtforms;
conpy -> xlrd;
coolfig -> "check-manifest";
coolfig -> fabric;
coolfig -> flake8;
coolfig -> livereload;
coolfig -> mccabe;
coolfig -> pep8;
coolfig -> "pep8-naming";
coolfig -> pyflakes;
coolfig -> pytest;
coolfig -> "pytest-cov";
coolfig -> six;
coolfig -> sphinx;
coolfig -> "sphinx-autobuild";
coolfig -> "sphinx-rtd-theme";
coolfig -> sqlalchemy;
coolfig -> wheel;
coursera -> beautifulsoup4;
coursera -> coverage;
coursera -> html5lib;
coursera -> keyring;
coursera -> mock;
coursera -> pyasn1;
coursera -> pytest;
coursera -> "pytest-cov";
coursera -> "pytest-xdist";
coursera -> requests;
coursera -> six;
coursera -> urllib3;
coverage -> pyenchant;
coverage -> sphinx;
"covertile.cycle2" -> "collective.cover";
"covertile.cycle2" -> distribute;
"covertile.cycle2" -> "plone.api";
"covertile.cycle2" -> "plone.autoform";
"covertile.cycle2" -> "plone.namedfile";
"covertile.cycle2" -> "plone.tiles";
"covertile.cycle2" -> "products.cmfplone";
"covertile.cycle2" -> "products.genericsetup";
"covertile.cycle2" -> "z3c.form";
"covertile.cycle2" -> "zope.component";
"covertile.cycle2" -> "zope.i18nmessageid";
"covertile.cycle2" -> "zope.interface";
"covertile.cycle2" -> "zope.schema";
cronq -> coverage;
cronq -> flask;
cronq -> gevent;
cronq -> greenlet;
cronq -> gunicorn;
cronq -> itsdangerous;
cronq -> jinja2;
cronq -> markupsafe;
cronq -> mock;
cronq -> "mysql-connector-python";
cronq -> "python-dateutil";
cronq -> six;
cronq -> sqlalchemy;
cronq -> werkzeug;
cronq -> wheel;
"cs.app.mailfiler" -> "cs.fileutils";
"cs.app.mailfiler" -> "cs.logutils";
"cs.app.mailfiler" -> "cs.obj";
"cs.app.mailfiler" -> "cs.py3";
"cs.app.mailfiler" -> "cs.seq";
"cs.app.mailfiler" -> "cs.threads";
csat -> beautifulsoup4;
csat -> cssmin;
csat -> django;
csat -> "django-crispy-forms";
csat -> "django-polymorphic";
csat -> fabric;
csat -> flake8;
csat -> gitdb;
csat -> gitpython;
csat -> jinja2;
csat -> jsmin;
csat -> lxml;
csat -> markdown;
csat -> mccabe;
csat -> paramiko;
csat -> pep8;
csat -> pillow;
csat -> pycrypto;
csat -> pyflakes;
csat -> pygithub;
csat -> pygments;
csat -> "python-dateutil";
csat -> pytz;
csat -> south;
csat -> twisted;
csat -> webassets;
csat -> "zope.interface";
"cs.debug" -> "cs.logutils";
"cs.debug" -> "cs.obj";
"cs.debug" -> "cs.py3";
"cs.debug" -> "cs.seq";
"cs.fileutils" -> "cs.debug";
"cs.fileutils" -> "cs.logutils";
"cs.fileutils" -> "cs.obj";
"cs.fileutils" -> "cs.py3";
"cs.fileutils" -> "cs.threads";
"cs.logutils" -> "cs.obj";
"cs.logutils" -> "cs.py3";
"cs.nodedb" -> "cs.debug";
"cs.nodedb" -> "cs.fileutils";
"cs.nodedb" -> "cs.logutils";
"cs.nodedb" -> "cs.obj";
"cs.nodedb" -> "cs.py3";
"cs.nodedb" -> "cs.seq";
"cs.nodedb" -> "cs.threads";
"cs.obj" -> "cs.py3";
"cs.seq" -> "cs.logutils";
"cstar_perf.frontend" -> blist;
"cstar_perf.frontend" -> "cassandra-driver";
"cstar_perf.frontend" -> ecdsa;
"cstar_perf.frontend" -> fabric;
"cstar_perf.frontend" -> flask;
"cstar_perf.frontend" -> "flask-script";
"cstar_perf.frontend" -> "google-api-python-client";
"cstar_perf.frontend" -> gunicorn;
"cstar_perf.frontend" -> pexpect;
"cstar_perf.frontend" -> pyyaml;
"cstar_perf.frontend" -> pyzmq;
"cstar_perf.frontend" -> supervisor;
"cstar_perf.frontend" -> "websocket-client";
"cs.threads" -> "cs.debug";
"cs.threads" -> "cs.logutils";
"cs.threads" -> "cs.obj";
"cs.threads" -> "cs.py3";
"cs.threads" -> "cs.seq";
csvcompare -> coverage;
csvcompare -> django;
csvcompare -> djangorestframework;
csvcompare -> jinja2;
csvcompare -> markupsafe;
csvcompare -> nose;
csvcompare -> pluggy;
csvcompare -> py;
csvcompare -> tox;
csvcompare -> virtualenv;
csvcompare -> wsgiref;
dap -> httplib2;
"dash.py" -> beautifulsoup4;
"dash.py" -> docopt;
"dash.py" -> docutils;
"dash.py" -> jinja2;
"dash.py" -> lxml;
"dash.py" -> markupsafe;
"dash.py" -> pygments;
"dash.py" -> pyyaml;
"dash.py" -> requests;
"dash.py" -> sphinx;
datagristle -> appdirs;
datagristle -> "cov-core";
datagristle -> coverage;
datagristle -> envoy;
datagristle -> flask;
datagristle -> py;
datagristle -> pytest;
datagristle -> "pytest-cov";
datagristle -> pyyaml;
datagristle -> sqlalchemy;
datagristle -> tox;
datagristle -> validictory;
datagristle -> virtualenv;
datagristle -> wsgiref;
datasift -> autobahn;
datasift -> "ndg-httpsclient";
datasift -> pyopenssl;
datasift -> "python-dateutil";
datasift -> requests;
datasift -> "requests-futures";
datasift -> "service-identity";
datasift -> six;
datasift -> twisted;
dateutils -> argparse;
dateutils -> "python-dateutil";
dateutils -> pytz;
dcextensions -> colorama;
dcextensions -> docutils;
dcextensions -> "dogpile.cache";
dcextensions -> flake8;
dcextensions -> jinja2;
dcextensions -> markupsafe;
dcextensions -> mccabe;
dcextensions -> mock;
dcextensions -> paver;
dcextensions -> pep8;
dcextensions -> py;
dcextensions -> pyflakes;
dcextensions -> pygments;
dcextensions -> pytest;
dcextensions -> "pytest-cov";
dcextensions -> sphinx;
dcextensions -> tox;
"dead-simple-ops" -> docopt;
"dead-simple-ops" -> flask;
"dead-simple-ops" -> gevent;
"dead-simple-ops" -> "gevent-websocket";
"dead-simple-ops" -> greenlet;
"dead-simple-ops" -> itsdangerous;
"dead-simple-ops" -> jinja2;
"dead-simple-ops" -> markupsafe;
"dead-simple-ops" -> pyyaml;
"dead-simple-ops" -> requests;
"dead-simple-ops" -> werkzeug;
debtcollector -> babel;
debtcollector -> coverage;
debtcollector -> discover;
debtcollector -> doc8;
debtcollector -> fixtures;
debtcollector -> hacking;
debtcollector -> oslosphinx;
debtcollector -> oslotest;
debtcollector -> pbr;
debtcollector -> "python-subunit";
debtcollector -> six;
debtcollector -> sphinx;
debtcollector -> testrepository;
debtcollector -> testscenarios;
debtcollector -> testtools;
debtcollector -> wrapt;
decanter -> argparse;
decanter -> babel;
decanter -> bottle;
decanter -> gevent;
decanter -> greenlet;
decanter -> jinja2;
decanter -> jsonschema;
decanter -> markupsafe;
decanter -> mock;
decanter -> nose;
decanter -> pep8;
decanter -> pika;
decanter -> pycrypto;
decanter -> redis;
decanter -> requests;
decanter -> unittest2;
decanter -> wsgiref;
deis -> cryptography;
deis -> docopt;
deis -> "ndg-httpsclient";
deis -> pyasn1;
deis -> pyopenssl;
deis -> "python-dateutil";
deis -> pyyaml;
deis -> requests;
deis -> tabulate;
deis -> termcolor;
deis -> urllib3;
Deliverance -> chardet;
Deliverance -> lxml;
Deliverance -> paste;
Deliverance -> pastescript;
Deliverance -> pygments;
Deliverance -> simplejson;
Deliverance -> tempita;
Deliverance -> weberror;
Deliverance -> webob;
"Deliverance.Rewrite" -> chardet;
"Deliverance.Rewrite" -> cssselect;
"Deliverance.Rewrite" -> lxml;
"Deliverance.Rewrite" -> paste;
"Deliverance.Rewrite" -> pastescript;
"Deliverance.Rewrite" -> pygments;
"Deliverance.Rewrite" -> simplejson;
"Deliverance.Rewrite" -> tempita;
"Deliverance.Rewrite" -> weberror;
"Deliverance.Rewrite" -> webob;
Delorean -> alabaster;
Delorean -> astroid;
Delorean -> babel;
Delorean -> click;
Delorean -> colorama;
Delorean -> coverage;
Delorean -> decorator;
Delorean -> docutils;
Delorean -> funcsigs;
Delorean -> gnureadline;
Delorean -> humanize;
Delorean -> ipython;
Delorean -> jinja2;
Delorean -> "lazy-object-proxy";
Delorean -> markupsafe;
Delorean -> mock;
Delorean -> nose;
Delorean -> "path.py";
Delorean -> pbr;
Delorean -> pep8;
Delorean -> pexpect;
Delorean -> pygments;
Delorean -> pylint;
Delorean -> "python-dateutil";
Delorean -> pytz;
Delorean -> simplegeneric;
Delorean -> six;
Delorean -> snowballstemmer;
Delorean -> sphinx;
Delorean -> "sphinx-rtd-theme";
Delorean -> traitlets;
Delorean -> tzlocal;
Delorean -> wrapt;
"deuce-client" -> coverage;
"deuce-client" -> ddt;
"deuce-client" -> distribute;
"deuce-client" -> httpretty;
"deuce-client" -> mock;
"deuce-client" -> nose;
"deuce-client" -> "nose-exclude";
"deuce-client" -> pep8;
"deuce-client" -> testfixtures;
"deuce-client" -> testtools;
devassistant -> flexmock;
devassistant -> jinja2;
devassistant -> "ndg-httpsclient";
devassistant -> progress;
devassistant -> pyasn1;
devassistant -> pygithub;
devassistant -> pyopenssl;
devassistant -> pytest;
devassistant -> pyyaml;
devassistant -> requests;
devassistant -> six;
devp2p -> coverage;
devp2p -> gevent;
devp2p -> ipaddress;
devp2p -> tox;
devp2p -> wheel;
"devpi-builder" -> coverage;
"devpi-builder" -> distribute;
"devpi-builder" -> mock;
"devpi-builder" -> nose;
"devpi-builder" -> pip;
"devpi-builder" -> six;
"devpi-builder" -> wheel;
devs -> cython;
devs -> future;
devs -> ipdb;
devs -> ipython;
devs -> psutil;
devs -> pytest;
devs -> "pytest-cov";
devs -> "pytest-mock";
devs -> sphinx;
devs -> "sphinx-rtd-theme";
devs -> "sphinxcontrib-napoleon";
didelcli -> beautifulsoup4;
didelcli -> coverage;
didelcli -> lxml;
didelcli -> mock;
didelcli -> ordereddict;
didelcli -> py;
didelcli -> pyflakes;
didelcli -> requests;
didelcli -> responses;
didelcli -> six;
didelcli -> tox;
didelcli -> virtualenv;
"dimagi-utils" -> celery;
"dimagi-utils" -> django;
"dimagi-utils" -> mock;
"dimagi-utils" -> openpyxl;
"dimagi-utils" -> pillow;
"dimagi-utils" -> "python-dateutil";
"dimagi-utils" -> pytz;
"dimagi-utils" -> simplejson;
"dimagi-utils" -> unittest2;
dinette -> beautifulsoup;
dinette -> django;
dinette -> "django-compressor";
dinette -> "django-haystack";
dinette -> "django-pagination";
dinette -> "facebook-sdk";
dinette -> oauth;
dinette -> pil;
dinette -> "python-openid";
dinette -> "sorl-thumbnail";
dinette -> whoosh;
diskcache -> astroid;
diskcache -> colorama;
diskcache -> coverage;
diskcache -> decorator;
diskcache -> django;
diskcache -> funcsigs;
diskcache -> gnureadline;
diskcache -> ipython;
diskcache -> "lazy-object-proxy";
diskcache -> mock;
diskcache -> nose;
diskcache -> "path.py";
diskcache -> pbr;
diskcache -> pexpect;
diskcache -> pluggy;
diskcache -> py;
diskcache -> pylint;
diskcache -> simplegeneric;
diskcache -> six;
diskcache -> tox;
diskcache -> traitlets;
diskcache -> virtualenv;
diskcache -> wrapt;
diskcache -> wsgiref;
"diskimage-builder" -> testrepository;
"diskimage-builder" -> babel;
"diskimage-builder" -> discover;
"diskimage-builder" -> flake8;
"diskimage-builder" -> hacking;
"diskimage-builder" -> oslosphinx;
"diskimage-builder" -> oslotest;
"diskimage-builder" -> pyyaml;
"diskimage-builder" -> six;
"diskimage-builder" -> sphinx;
"dj-analytics" -> django;
"dj-analytics" -> "django-nose";
"dj-analytics" -> freezegun;
"dj-analytics" -> ipaddress;
"dj-analytics" -> jsmin;
"dj-analytics" -> mock;
"dj-analytics" -> "python-dateutil";
"dj-analytics" -> pytz;
"dj-analytics" -> tablib;
"django-auxilium" -> coverage;
"django-auxilium" -> django;
"django-auxilium" -> flake8;
"django-auxilium" -> importanize;
"django-auxilium" -> mock;
"django-auxilium" -> pathlib;
"django-auxilium" -> pytest;
"django-auxilium" -> "pytest-cov";
"django-auxilium" -> "pytest-django";
"django-auxilium" -> "python-magic";
"django-auxilium" -> six;
"django-auxilium" -> sphinx;
"django-auxilium" -> "sphinx-autobuild";
"django-auxilium" -> "sphinx-rtd-theme";
"django-auxilium" -> tox;
"django-bank" -> coverage;
"django-bank" -> coveralls;
"django-bank" -> django;
"django-bank" -> "django-nose";
"django-bank" -> flake8;
"django-bank" -> mock;
"django-bank" -> nose;
"django-bank" -> pylint;
"django-bank" -> tox;
"django-bank" -> wheel;
"django-braces" -> six;
"django-br-addresses" -> coverage;
"django-br-addresses" -> django;
"django-br-addresses" -> "django-coverage";
"django-br-addresses" -> "django-extensions";
"django-br-addresses" -> "django-localflavor";
"django-br-addresses" -> "django-nose";
"django-br-addresses" -> flake8;
"django-br-addresses" -> nose;
"django-br-addresses" -> unittest2;
"Django-Chuck" -> coverage;
"Django-Chuck" -> fabric;
"Django-Chuck" -> "logilab-common";
"Django-Chuck" -> mock;
"Django-Chuck" -> pil;
"Django-Chuck" -> psycopg2;
"Django-Chuck" -> pylint;
"Django-Chuck" -> unittest2;
"django-classy-tags" -> django;
"django-click" -> "check-manifest";
"django-click" -> click;
"django-click" -> fabric;
"django-click" -> flake8;
"django-click" -> livereload;
"django-click" -> mccabe;
"django-click" -> pep8;
"django-click" -> "pep8-naming";
"django-click" -> pyflakes;
"django-click" -> pytest;
"django-click" -> "pytest-cov";
"django-click" -> six;
"django-click" -> sphinx;
"django-click" -> "sphinx-autobuild";
"django-click" -> "sphinx-rtd-theme";
"django-click" -> wheel;
"django-cloud-browser" -> boto;
"django-cloud-browser" -> distribute;
"django-cloud-browser" -> django;
"django-cloud-browser" -> fabric;
"django-cloud-browser" -> "logilab-common";
"django-cloud-browser" -> pep8;
"django-cloud-browser" -> pycrypto;
"django-cloud-browser" -> pylint;
"django-cloud-browser" -> sphinx;
"django-cloud-browser" -> "sphinx-bootstrap-theme";
"django-cloud-browser" -> wsgiref;
"django-cms" -> django;
"django-cms" -> "django-classy-tags";
"django-cms" -> "django-sekizai";
"django-cms" -> "django-treebeard";
"django-cms" -> html5lib;
"djangocms-text-ckeditor" -> "django-cms";
"djangocms-text-ckeditor" -> html5lib;
"djangocms-text-ckeditor" -> pillow;
"django-compat" -> "django-nose";
"django-compat" -> six;
"django-configurations" -> coverage;
"django-configurations" -> "dj-database-url";
"django-configurations" -> "django-discover-runner";
"django-configurations" -> mock;
"django-configurations" -> six;
"django-coop" -> "django-appconf";
"django-coop" -> "django-debug-toolbar";
"django-coop" -> "django-mptt";
"django-coop" -> "django-tinymce";
"django-coop" -> "easy-thumbnails";
"django-coop" -> feedparser;
"django-coop" -> mimeparse;
"django-coop" -> pillow;
"django-coop" -> psycopg2;
"django-coop" -> "python-dateutil";
"django-coop" -> raven;
"django-coop" -> rdflib;
"django-coop" -> rq;
"django-coop" -> shortuuid;
"django-coop" -> "sorl-thumbnail";
"django-coop" -> south;
"django-dbbackup" -> boto;
"django-dbbackup" -> coverage;
"django-dbbackup" -> "dj-database-url";
"django-dbbackup" -> django;
"django-dbbackup" -> flake8;
"django-dbbackup" -> mock;
"django-dbbackup" -> moto;
"django-dbbackup" -> pep8;
"django-dbbackup" -> pylint;
"django-dbbackup" -> pytz;
"django-dbbackup" -> six;
"django-db-quick-setup" -> django;
"django-db-quick-setup" -> "docker-py";
"django-db-quick-setup" -> pep8;
"django-db-quick-setup" -> psycopg2;
"django-db-quick-setup" -> requests;
"django-db-quick-setup" -> six;
"django-db-quick-setup" -> "websocket-client";
"django-db-quick-setup" -> wheel;
"django-debug-toolbar" -> django;
"django-debug-toolbar" -> sqlparse;
"django-djangui" -> boto;
"django-djangui" -> django;
"django-djangui" -> "django-celery";
"django-djangui" -> "django-djangui";
"django-djangui" -> psycopg2;
"django-djangui" -> waitress;
"django-endless-pagination" -> coverage;
"django-endless-pagination" -> django;
"django-endless-pagination" -> "django-nose";
"django-endless-pagination" -> flake8;
"django-endless-pagination" -> ipdb;
"django-endless-pagination" -> nose;
"django-endless-pagination" -> selenium;
"django-endless-pagination" -> sphinx;
"django-endless-pagination" -> xvfbwrapper;
"django-facebook-api" -> django;
"django-facebook-api" -> "django-annoying";
"django-facebook-api" -> "django-oauth-tokens";
"django-facebook-api" -> "facebook-sdk";
"django-facebook-api" -> "python-dateutil";
"django-guardian" -> django;
"django-guardian" -> six;
"django-intranet" -> certifi;
"django-intranet" -> chardet;
"django-intranet" -> distribute;
"django-intranet" -> django;
"django-intranet" -> "mysql-python";
"django-intranet" -> pil;
"django-intranet" -> pyyaml;
"django-intranet" -> requests;
"django-intranet" -> south;
"django-kong-admin" -> coverage;
"django-kong-admin" -> docutils;
"django-kong-admin" -> "factory-boy";
"django-kong-admin" -> "fake-factory";
"django-kong-admin" -> flake8;
"django-kong-admin" -> jinja2;
"django-kong-admin" -> mock;
"django-kong-admin" -> pytest;
"django-kong-admin" -> "pytest-capturelog";
"django-kong-admin" -> "pytest-cov";
"django-kong-admin" -> "pytest-django";
"django-kong-admin" -> six;
"django-kong-admin" -> sphinx;
"django-localflavor" -> coverage;
"django-localflavor" -> "django-discover-runner";
"django-localflavor" -> flake8;
"django-localflavor" -> invoke;
"django-localflavor" -> six;
django_localizejs_seo -> cffi;
django_localizejs_seo -> cryptography;
django_localizejs_seo -> enum34;
django_localizejs_seo -> gnureadline;
django_localizejs_seo -> ipdb;
django_localizejs_seo -> ipython;
django_localizejs_seo -> "ndg-httpsclient";
django_localizejs_seo -> pep8;
django_localizejs_seo -> pyasn1;
django_localizejs_seo -> pycparser;
django_localizejs_seo -> pyopenssl;
django_localizejs_seo -> requests;
django_localizejs_seo -> six;
"django-maja-newsletter" -> beautifulsoup;
"django-maja-newsletter" -> celery;
"django-maja-newsletter" -> distribute;
"django-maja-newsletter" -> "django-tagging";
"django-maja-newsletter" -> html2text;
"django-maja-newsletter" -> "python-dateutil";
"django-maja-newsletter" -> pytz;
"django-maja-newsletter" -> xlrd;
"django-maja-newsletter" -> xlwt;
"django-manifest" -> django;
"django-manifest" -> "django-countries";
"django-manifest" -> "django-debug-toolbar";
"django-manifest" -> "django-tagging";
"django-manifest" -> docutils;
"django-manifest" -> feedparser;
"django-manifest" -> markdown;
"django-manifest" -> pil;
"django-manifest" -> "python-dateutil";
"django-manifest" -> pytz;
"django-manifest" -> "sorl-thumbnail";
"django-mobileu" -> beautifulsoup4;
"django-mobileu" -> celery;
"django-mobileu" -> django;
"django-mobileu" -> "django-celery";
"django-mobileu" -> "django-grappelli";
"django-mobileu" -> pillow;
"django-mobileu" -> psycopg2;
"django-mobileu" -> requests;
"django-mobileu" -> south;
"django-mptt" -> coverage;
"django-mptt" -> django;
"django-nose" -> "check-manifest";
"django-nose" -> coverage;
"django-nose" -> "dj-database-url";
"django-nose" -> django;
"django-nose" -> docutils;
"django-nose" -> flake8;
"django-nose" -> gnureadline;
"django-nose" -> ipdb;
"django-nose" -> ipython;
"django-nose" -> mccabe;
"django-nose" -> pep257;
"django-nose" -> pep8;
"django-nose" -> py;
"django-nose" -> pyflakes;
"django-nose" -> pygments;
"django-nose" -> pyroma;
"django-nose" -> sphinx;
"django-nose" -> tox;
"django-nose" -> virtualenv;
"django-nose" -> wheel;
"django-oauth-tokens" -> beautifulsoup4;
"django-oauth-tokens" -> django;
"django-oauth-tokens" -> "django-annoying";
"django-oauth-tokens" -> "django-taggit";
"django-oauth-tokens" -> requests;
"django-oauth-tokens" -> "requests-oauthlib";
"django-oauth-tokens" -> simplejson;
"django-odnoklassniki-api" -> django;
"django-odnoklassniki-api" -> "django-annoying";
"django-odnoklassniki-api" -> "django-oauth-tokens";
"django-odnoklassniki-api" -> "django-picklefield";
"django-odnoklassniki-api" -> pytz;
"django-odnoklassniki-api" -> simplejson;
django_openstack_auth -> babel;
django_openstack_auth -> coverage;
django_openstack_auth -> django;
django_openstack_auth -> hacking;
django_openstack_auth -> keystoneauth1;
django_openstack_auth -> mock;
django_openstack_auth -> mox3;
django_openstack_auth -> "oslo.config";
django_openstack_auth -> "oslo.policy";
django_openstack_auth -> oslosphinx;
django_openstack_auth -> pbr;
django_openstack_auth -> "python-keystoneclient";
django_openstack_auth -> six;
django_openstack_auth -> sphinx;
django_openstack_auth -> testscenarios;
"django-organice" -> beautifulsoup4;
"django-organice" -> cssselect;
"django-organice" -> django;
"django-organice" -> "django-classy-tags";
"django-organice" -> "django-cms";
"django-organice" -> "django-mptt";
"django-organice" -> "django-sekizai";
"django-organice" -> "django-tagging";
"django-organice" -> "django-tinymce";
"django-organice" -> "django-treebeard";
"django-organice" -> "djangocms-text-ckeditor";
"django-organice" -> "easy-thumbnails";
"django-organice" -> html5lib;
"django-organice" -> lxml;
"django-organice" -> oauthlib;
"django-organice" -> pillow;
"django-organice" -> pyparsing;
"django-organice" -> pyquery;
"django-organice" -> pytz;
"django-organice" -> requests;
"django-organice" -> "requests-oauthlib";
"django-organice" -> six;
"django-photologue" -> django;
"django-photologue" -> exifread;
"django-photologue" -> pillow;
"django-player" -> beautifulsoup;
"django-player" -> cssutils;
"django-player" -> "django-classy-tags";
"django-player" -> "django-compressor";
"django-player" -> "django-pagination";
"django-player" -> "django-reversion";
"django-player" -> elementtree;
"django-player" -> feedparser;
"django-player" -> pygments;
"django-player" -> "sorl-thumbnail";
"django-player" -> south;
"django-projector" -> celery;
"django-projector" -> django;
"django-projector" -> "django-celery";
"django-projector" -> "django-extensions";
"django-projector" -> "django-filter";
"django-projector" -> "django-guardian";
"django-projector" -> "django-pagination";
"django-projector" -> "django-registration";
"django-projector" -> "django-richtemplates";
"django-projector" -> "django-treebeard";
"django-projector" -> docutils;
"django-projector" -> dulwich;
"django-projector" -> mercurial;
"django-projector" -> pygments;
"django-projector" -> wsgiref;
"django-rblog" -> beautifulsoup;
"django-rblog" -> django;
"django-rblog" -> "django-braces";
"django-rblog" -> "django-compressor";
"django-rblog" -> "django-taggit";
"django-rblog" -> "django-tinymce";
"django-rblog" -> elementtree;
"django-rblog" -> pillow;
"django-rblog" -> pygments;
"django-rblog" -> "sorl-thumbnail";
"django-rest-framework-braces" -> coverage;
"django-rest-framework-braces" -> dateutils;
"django-rest-framework-braces" -> django;
"django-rest-framework-braces" -> "django-extensions";
"django-rest-framework-braces" -> djangorestframework;
"django-rest-framework-braces" -> flake8;
"django-rest-framework-braces" -> mock;
"django-rest-framework-braces" -> pytz;
"django-rest-framework-braces" -> six;
"django-rest-framework-braces" -> sphinx;
"django-rest-framework-braces" -> "sphinx-autobuild";
"django-rest-framework-braces" -> "sphinx-rtd-theme";
"django-rest-framework-braces" -> tox;
"django-rest-framework-braces" -> watchdog;
"django-rest-framework-braces" -> werkzeug;
"django-richtemplates" -> django;
"django-richtemplates" -> "django-filter";
"django-richtemplates" -> "django-pagination";
"django-richtemplates" -> "django-registration";
"django-richtemplates" -> docutils;
"django-richtemplates" -> pygments;
"django-secure-auth" -> "django-filter";
"django-secure-auth" -> ipaddress;
"django-secure-auth" -> twilio;
"django-shop" -> django;
"django-shop" -> "django-classy-tags";
"django-shop" -> "django-polymorphic";
"django-shop" -> jsonfield;
"django-shop" -> south;
"django-textplusstuff" -> beautifulsoup4;
"django-textplusstuff" -> djangorestframework;
"django-textplusstuff" -> jsonfield;
"django-textplusstuff" -> markdown2;
django_th -> arrow;
django_th -> celery;
django_th -> django;
django_th -> "django-haystack";
django_th -> feedparser;
django_th -> twython;
"django-traxauth" -> django;
"django-traxauth" -> "django-pagination";
"django-traxauth" -> "django-registration";
"django-traxauth" -> "django-traxauth";
"django-traxauth" -> oauth2;
"django-traxauth" -> "python-openid";
"django-traxauth" -> sphinx;
"django-url-filter" -> "cached-property";
"django-url-filter" -> coverage;
"django-url-filter" -> django;
"django-url-filter" -> "django-extensions";
"django-url-filter" -> djangorestframework;
"django-url-filter" -> enum34;
"django-url-filter" -> flake8;
"django-url-filter" -> importanize;
"django-url-filter" -> mock;
"django-url-filter" -> pytest;
"django-url-filter" -> "pytest-cov";
"django-url-filter" -> "pytest-django";
"django-url-filter" -> six;
"django-url-filter" -> sphinx;
"django-url-filter" -> "sphinx-autobuild";
"django-url-filter" -> "sphinx-rtd-theme";
"django-url-filter" -> sqlalchemy;
"django-url-filter" -> tox;
"django-url-filter" -> watchdog;
"django-url-filter" -> werkzeug;
"django-vkontakte-api" -> beautifulsoup4;
"django-vkontakte-api" -> django;
"django-vkontakte-api" -> "django-annoying";
"django-vkontakte-api" -> "django-oauth-tokens";
"django-vkontakte-api" -> "django-picklefield";
"django-vkontakte-api" -> simplejson;
"django-warmama" -> django;
"django-warmama" -> djangorestframework;
"django-warmama" -> flake8;
"django-warmama" -> mock;
"django-warmama" -> pytest;
"django-warmama" -> "pytest-cov";
"django-warmama" -> "pytest-django";
"django-warmama" -> requests;
"django-warmama" -> six;
"django-warmama" -> wheel;
"django-webmap-corpus" -> coverage;
"django-webmap-corpus" -> coveralls;
"django-webmap-corpus" -> "django-filter";
"django-webmap-corpus" -> "django-nose";
"django-webmap-corpus" -> djangorestframework;
"django-webmap-corpus" -> "easy-thumbnails";
"django-webmap-corpus" -> fabric;
"django-webmap-corpus" -> "factory-boy";
"django-webmap-corpus" -> flake8;
"django-webmap-corpus" -> ipdb;
"django-webmap-corpus" -> mock;
"django-webmap-corpus" -> pillow;
"django-webmap-corpus" -> psycopg2;
"django-webmap-corpus" -> selenium;
djcharme -> django;
djcharme -> "django-classy-tags";
djcharme -> "django-registration";
djcharme -> html5lib;
djcharme -> isodate;
djcharme -> ordereddict;
djcharme -> "py-bcrypt";
djcharme -> pyparsing;
djcharme -> rdflib;
djcharme -> shortuuid;
djproxy -> coveralls;
djproxy -> django;
djproxy -> flake8;
djproxy -> mock;
djproxy -> nose;
djproxy -> pep257;
djproxy -> pinocchio;
djproxy -> pyflakes;
djproxy -> requests;
djproxy -> unittest2;
doc8 -> argparse;
doc8 -> chardet;
doc8 -> doc8;
doc8 -> docutils;
doc8 -> hacking;
doc8 -> nose;
doc8 -> oslosphinx;
doc8 -> "restructuredtext-lint";
doc8 -> six;
doc8 -> sphinx;
doc8 -> stevedore;
doc8 -> testtools;
"docker-compose" -> "cached-property";
"docker-compose" -> coverage;
"docker-compose" -> "docker-py";
"docker-compose" -> docopt;
"docker-compose" -> enum34;
"docker-compose" -> jsonschema;
"docker-compose" -> mock;
"docker-compose" -> pytest;
"docker-compose" -> "pytest-cov";
"docker-compose" -> pyyaml;
"docker-compose" -> requests;
"docker-compose" -> six;
"docker-compose" -> texttable;
"docker-compose" -> "websocket-client";
"docker-compose-xu" -> coverage;
"docker-compose-xu" -> "docker-py";
"docker-compose-xu" -> docopt;
"docker-compose-xu" -> enum34;
"docker-compose-xu" -> jsonschema;
"docker-compose-xu" -> mock;
"docker-compose-xu" -> pytest;
"docker-compose-xu" -> "pytest-cov";
"docker-compose-xu" -> pyyaml;
"docker-compose-xu" -> requests;
"docker-compose-xu" -> six;
"docker-compose-xu" -> texttable;
"docker-compose-xu" -> "websocket-client";
"docker-harpoon" -> boto3;
"docker-harpoon" -> "docker-py";
"docker-harpoon" -> dulwich;
"docker-harpoon" -> humanize;
"docker-harpoon" -> pyyaml;
"docker-harpoon" -> six;
"docker-py" -> coverage;
"docker-py" -> flake8;
"docker-py" -> mock;
"docker-py" -> pytest;
"docker-py" -> "pytest-cov";
"docker-py" -> requests;
"docker-py" -> six;
"docker-py" -> "websocket-client";
docon -> argparse;
docon -> "backports.ssl-match-hostname";
docon -> celery;
docon -> flask;
docon -> "flask-admin";
docon -> "flask-debugtoolbar";
docon -> "flask-login";
docon -> "flask-script";
docon -> "flask-wtf";
docon -> jinja2;
docon -> lxml;
docon -> mongoengine;
docon -> nose;
docon -> pymongo;
docon -> pytz;
docon -> requests;
docon -> sqlalchemy;
docon -> unicodecsv;
docon -> wtforms;
docon -> xlrd;
DoFler -> beautifulsoup;
DoFler -> bleach;
DoFler -> bottle;
DoFler -> jinja2;
DoFler -> markdown;
DoFler -> paste;
DoFler -> pexpect;
DoFler -> psutil;
DoFler -> requests;
DoFler -> "requests-futures";
DoFler -> sqlalchemy;
"dogpile.cache" -> mako;
doit -> coverage;
doit -> mock;
doit -> pyflakes;
doit -> pytest;
doit -> sphinx;
"dolmen.app.authentication" -> distribute;
"dolmen.app.authentication" -> "dolmen.authentication";
"dolmen.app.authentication" -> "dolmen.forms.base";
"dolmen.app.authentication" -> "dolmen.forms.crud";
"dolmen.app.authentication" -> grok;
"dolmen.app.authentication" -> "grokcore.component";
"dolmen.app.authentication" -> "grokcore.layout";
"dolmen.app.authentication" -> "grokcore.view";
"dolmen.app.authentication" -> "zeam.form.base";
"dolmen.app.authentication" -> "zope.authentication";
"dolmen.app.authentication" -> "zope.component";
"dolmen.app.authentication" -> "zope.container";
"dolmen.app.authentication" -> "zope.event";
"dolmen.app.authentication" -> "zope.formlib";
"dolmen.app.authentication" -> "zope.i18n";
"dolmen.app.authentication" -> "zope.i18nmessageid";
"dolmen.app.authentication" -> "zope.interface";
"dolmen.app.authentication" -> "zope.location";
"dolmen.app.authentication" -> "zope.publisher";
"dolmen.app.authentication" -> "zope.schema";
"dolmen.app.authentication" -> "zope.security";
"dolmen.app.authentication" -> "zope.site";
"dolmen.app.authentication" -> "zope.traversing";
"dolmen.app.breadcrumbs" -> distribute;
"dolmen.app.breadcrumbs" -> "dolmen.app.layout";
"dolmen.app.breadcrumbs" -> "grokcore.component";
"dolmen.app.breadcrumbs" -> "grokcore.viewlet";
"dolmen.app.breadcrumbs" -> "zope.component";
"dolmen.app.breadcrumbs" -> "zope.dublincore";
"dolmen.app.breadcrumbs" -> "zope.interface";
"dolmen.app.breadcrumbs" -> "zope.location";
"dolmen.app.breadcrumbs" -> "zope.proxy";
"dolmen.app.breadcrumbs" -> "zope.publisher";
"dolmen.app.breadcrumbs" -> "zope.traversing";
"dolmen.app.container" -> distribute;
"dolmen.app.container" -> "dolmen.app.layout";
"dolmen.app.container" -> "dolmen.content";
"dolmen.app.container" -> "dolmen.menu";
"dolmen.app.container" -> "grokcore.component";
"dolmen.app.container" -> "grokcore.view";
"dolmen.app.container" -> "grokcore.viewlet";
"dolmen.app.container" -> zodb3;
"dolmen.app.container" -> "zope.component";
"dolmen.app.container" -> "zope.container";
"dolmen.app.container" -> "zope.dublincore";
"dolmen.app.container" -> "zope.i18n";
"dolmen.app.container" -> "zope.i18nmessageid";
"dolmen.app.container" -> "zope.interface";
"dolmen.app.container" -> "zope.security";
"dolmen.app.content" -> distribute;
"dolmen.app.content" -> "dolmen.blob";
"dolmen.app.content" -> "dolmen.content";
"dolmen.app.content" -> "dolmen.file";
"dolmen.app.content" -> "dolmen.forms.base";
"dolmen.app.content" -> "dolmen.thumbnailer";
"dolmen.app.content" -> grok;
"dolmen.app.content" -> "grokcore.component";
"dolmen.app.content" -> martian;
"dolmen.app.content" -> pil;
"dolmen.app.content" -> "zope.annotation";
"dolmen.app.content" -> "zope.dublincore";
"dolmen.app.content" -> "zope.i18nmessageid";
"dolmen.app.content" -> "zope.interface";
"dolmen.app.content" -> "zope.schema";
"dolmen.app.layout" -> distribute;
"dolmen.app.layout" -> "dolmen.forms.crud";
"dolmen.app.layout" -> "dolmen.menu";
"dolmen.app.layout" -> "grokcore.layout";
"dolmen.app.layout" -> "grokcore.security";
"dolmen.app.layout" -> "grokcore.view";
"dolmen.app.layout" -> "grokcore.viewlet";
"dolmen.app.layout" -> "zope.container";
"dolmen.app.layout" -> "zope.interface";
"dolmen.app.layout" -> "zope.location";
"dolmen.app.layout" -> "zope.publisher";
"dolmen.app.layout" -> "zope.traversing";
"dolmen.app.search" -> distribute;
"dolmen.app.search" -> "dolmen.app.layout";
"dolmen.app.search" -> "grokcore.security";
"dolmen.app.search" -> "grokcore.viewlet";
"dolmen.app.search" -> martian;
"dolmen.app.search" -> "zope.catalog";
"dolmen.app.search" -> "zope.component";
"dolmen.app.search" -> "zope.i18n";
"dolmen.app.search" -> "zope.i18nmessageid";
"dolmen.app.search" -> "zope.interface";
"dolmen.app.search" -> "zope.intid";
"dolmen.app.search" -> "zope.schema";
"dolmen.app.search" -> "zope.security";
"dolmen.app.viewselector" -> distribute;
"dolmen.app.viewselector" -> "dolmen.app.layout";
"dolmen.app.viewselector" -> "dolmen.menu";
"dolmen.app.viewselector" -> "grokcore.component";
"dolmen.app.viewselector" -> "grokcore.view";
"dolmen.app.viewselector" -> "grokcore.viewlet";
"dolmen.app.viewselector" -> "megrok.layout";
"dolmen.app.viewselector" -> "zope.component";
"dolmen.app.viewselector" -> "zope.i18n";
"dolmen.app.viewselector" -> "zope.i18nmessageid";
"dolmen.app.viewselector" -> "zope.interface";
"dolmen.app.viewselector" -> "zope.schema";
"dolmen.authentication" -> distribute;
"dolmen.authentication" -> "grokcore.component";
"dolmen.authentication" -> "zope.component";
"dolmen.authentication" -> "zope.container";
"dolmen.authentication" -> "zope.i18nmessageid";
"dolmen.authentication" -> "zope.interface";
"dolmen.authentication" -> "zope.location";
"dolmen.authentication" -> "zope.schema";
"dolmen.authentication" -> "zope.security";
"dolmen.beaker" -> beaker;
"dolmen.beaker" -> distribute;
"dolmen.beaker" -> "grokcore.component";
"dolmen.beaker" -> "zope.component";
"dolmen.beaker" -> "zope.interface";
"dolmen.beaker" -> "zope.publisher";
"dolmen.beaker" -> "zope.schema";
"dolmen.beaker" -> "zope.site";
"dolmen.beaker" -> "zope.traversing";
"dolmen.blob" -> distribute;
"dolmen.blob" -> "dolmen.file";
"dolmen.blob" -> "grokcore.component";
"dolmen.blob" -> "grokcore.view";
"dolmen.blob" -> zodb3;
"dolmen.blob" -> "zope.component";
"dolmen.blob" -> "zope.interface";
"dolmen.blob" -> "zope.location";
"dolmen.blob" -> "zope.publisher";
"dolmen.blob" -> "zope.schema";
"dolmen.content" -> distribute;
"dolmen.content" -> "grokcore.component";
"dolmen.content" -> "grokcore.security";
"dolmen.content" -> martian;
"dolmen.content" -> zodb3;
"dolmen.content" -> "zope.component";
"dolmen.content" -> "zope.i18nmessageid";
"dolmen.content" -> "zope.interface";
"dolmen.content" -> "zope.schema";
"dolmen.file" -> distribute;
"dolmen.file" -> "grokcore.component";
"dolmen.file" -> "grokcore.view";
"dolmen.file" -> zodb3;
"dolmen.file" -> "zope.component";
"dolmen.file" -> "zope.interface";
"dolmen.file" -> "zope.publisher";
"dolmen.file" -> "zope.schema";
"dolmen.file" -> "zope.security";
"dolmen.file" -> "zope.traversing";
"dolmen.forms.base" -> distribute;
"dolmen.forms.base" -> "grokcore.component";
"dolmen.forms.base" -> "grokcore.layout";
"dolmen.forms.base" -> "zeam.form.base";
"dolmen.forms.base" -> "zeam.form.layout";
"dolmen.forms.base" -> "zeam.form.ztk";
"dolmen.forms.base" -> "zope.configuration";
"dolmen.forms.base" -> "zope.event";
"dolmen.forms.base" -> "zope.i18n";
"dolmen.forms.base" -> "zope.interface";
"dolmen.forms.base" -> "zope.lifecycleevent";
"dolmen.forms.base" -> "zope.schema";
"dolmen.forms.crud" -> distribute;
"dolmen.forms.crud" -> "dolmen.content";
"dolmen.forms.crud" -> "dolmen.forms.base";
"dolmen.forms.crud" -> "grokcore.component";
"dolmen.forms.crud" -> martian;
"dolmen.forms.crud" -> "zeam.form.base";
"dolmen.forms.crud" -> "zeam.form.layout";
"dolmen.forms.crud" -> "zeam.form.ztk";
"dolmen.forms.crud" -> "zope.cachedescriptors";
"dolmen.forms.crud" -> "zope.component";
"dolmen.forms.crud" -> "zope.container";
"dolmen.forms.crud" -> "zope.dublincore";
"dolmen.forms.crud" -> "zope.event";
"dolmen.forms.crud" -> "zope.i18n";
"dolmen.forms.crud" -> "zope.i18nmessageid";
"dolmen.forms.crud" -> "zope.interface";
"dolmen.forms.crud" -> "zope.lifecycleevent";
"dolmen.forms.crud" -> "zope.location";
"dolmen.forms.crud" -> "zope.publisher";
"dolmen.forms.crud" -> "zope.schema";
"dolmen.forms.crud" -> "zope.security";
"dolmen.forms.crud" -> "zope.traversing";
"dolmen.menu" -> distribute;
"dolmen.menu" -> "grokcore.component";
"dolmen.menu" -> "grokcore.view";
"dolmen.menu" -> "grokcore.viewlet";
"dolmen.menu" -> martian;
"dolmen.menu" -> "megrok.pagetemplate";
"dolmen.menu" -> "zope.component";
"dolmen.menu" -> "zope.interface";
"dolmen.menu" -> "zope.location";
"dolmen.menu" -> "zope.publisher";
"dolmen.menu" -> "zope.schema";
"dolmen.menu" -> "zope.security";
"dolmen.menu" -> "zope.traversing";
"dolmen.menu" -> "zope.viewlet";
"dolmen.relations" -> distribute;
"dolmen.relations" -> "grokcore.component";
"dolmen.relations" -> "zope.component";
"dolmen.relations" -> "zope.container";
"dolmen.relations" -> "zope.event";
"dolmen.relations" -> "zope.i18nmessageid";
"dolmen.relations" -> "zope.interface";
"dolmen.relations" -> "zope.intid";
"dolmen.relations" -> "zope.lifecycleevent";
"dolmen.relations" -> "zope.schema";
"dolmen.thumbnailer" -> distribute;
"dolmen.thumbnailer" -> "dolmen.file";
"dolmen.thumbnailer" -> "grokcore.component";
"dolmen.thumbnailer" -> pil;
"dolmen.thumbnailer" -> "zope.component";
"dolmen.thumbnailer" -> "zope.interface";
"dolmen.thumbnailer" -> "zope.publisher";
"dolmen.thumbnailer" -> "zope.schema";
"dolmen.thumbnailer" -> "zope.security";
"dolmen.widget.file" -> distribute;
"dolmen.widget.file" -> "dolmen.file";
"dolmen.widget.file" -> "grokcore.component";
"dolmen.widget.file" -> "grokcore.view";
"dolmen.widget.file" -> "zeam.form.base";
"dolmen.widget.file" -> "zeam.form.ztk";
"dolmen.widget.file" -> "zope.i18n";
"dolmen.widget.file" -> "zope.i18nmessageid";
"dolmen.widget.file" -> "zope.interface";
"dolmen.widget.file" -> "zope.location";
"dolmen.widget.file" -> "zope.traversing";
dork -> ansible;
dork -> enum34;
dork -> paramiko;
dork -> requests;
dork -> terminaltables;
dox -> argparse;
dox -> coverage;
dox -> discover;
dox -> fixtures;
dox -> hacking;
dox -> mock;
dox -> pbr;
dox -> "python-subunit";
dox -> pyyaml;
dox -> six;
dox -> sphinx;
dox -> testrepository;
dox -> testscenarios;
dox -> testtools;
dragonmapper -> coverage;
dragonmapper -> docutils;
dragonmapper -> flake8;
dragonmapper -> jinja2;
dragonmapper -> markupsafe;
dragonmapper -> mccabe;
dragonmapper -> pep8;
dragonmapper -> py;
dragonmapper -> pyflakes;
dragonmapper -> pygments;
dragonmapper -> sphinx;
dragonmapper -> tox;
dragonmapper -> virtualenv;
"drf-cached-instances" -> celery;
"drf-cached-instances" -> coverage;
"drf-cached-instances" -> "dj-database-url";
"drf-cached-instances" -> django;
"drf-cached-instances" -> "django-debug-toolbar";
"drf-cached-instances" -> "django-extensions";
"drf-cached-instances" -> "django-nose";
"drf-cached-instances" -> djangorestframework;
"drf-cached-instances" -> flake8;
"drf-cached-instances" -> gunicorn;
"drf-cached-instances" -> ipdb;
"drf-cached-instances" -> ipython;
"drf-cached-instances" -> mock;
"drf-cached-instances" -> pep257;
"drf-cached-instances" -> psycopg2;
"drf-cached-instances" -> pyroma;
"drf-cached-instances" -> sphinx;
"drf-cached-instances" -> tox;
"drf-cached-instances" -> werkzeug;
"drf-cached-instances" -> wheel;
"drf-haystack" -> coverage;
"drf-haystack" -> django;
"drf-haystack" -> "django-haystack";
"drf-haystack" -> djangorestframework;
"drf-haystack" -> elasticsearch;
"drf-haystack" -> geopy;
"drf-haystack" -> nose;
"drf-haystack" -> "python-dateutil";
"drf-haystack" -> sphinx;
"drf-haystack" -> "sphinx-rtd-theme";
"drf-haystack" -> tox;
"drf-haystack" -> unittest2;
"drf-haystack" -> urllib3;
"drf-json-api" -> "check-manifest";
"drf-json-api" -> django;
"drf-json-api" -> djangorestframework;
"drf-json-api" -> flake8;
"drf-json-api" -> mccabe;
"drf-json-api" -> pep8;
"drf-json-api" -> pyflakes;
"drf-json-api" -> pygments;
"drf-json-api" -> pyroma;
"drf-json-api" -> pytest;
"drf-json-api" -> "pytest-cov";
"drf-json-api" -> "pytest-django";
"drf-json-api" -> sphinx;
"drf-json-api" -> tox;
"drf-json-api" -> wheel;
"dstat-plugins" -> coverage;
"dstat-plugins" -> discover;
"dstat-plugins" -> hacking;
"dstat-plugins" -> oslosphinx;
"dstat-plugins" -> oslotest;
"dstat-plugins" -> pbr;
"dstat-plugins" -> pymysql;
"dstat-plugins" -> "python-subunit";
"dstat-plugins" -> sphinx;
"dstat-plugins" -> testrepository;
"dstat-plugins" -> testresources;
"dstat-plugins" -> testscenarios;
"dstat-plugins" -> testtools;
dxpy -> argcomplete;
dxpy -> beautifulsoup4;
dxpy -> coverage;
dxpy -> distribute;
dxpy -> futures;
dxpy -> gnureadline;
dxpy -> pexpect;
dxpy -> pip;
dxpy -> psutil;
dxpy -> "python-dateutil";
dxpy -> "python-magic";
dxpy -> requests;
dxpy -> wheel;
dxpy -> ws4py;
"easyshop.core" -> distribute;
easytrakt -> attrdict;
easytrakt -> hacking;
easytrakt -> mock;
easytrakt -> pytest;
easytrakt -> "pytest-cov";
easytrakt -> "python-dateutil";
easytrakt -> requests;
easytrakt -> "requests-oauthlib";
ebookmaker -> chardet;
ebookmaker -> cherrypy;
ebookmaker -> cssutils;
ebookmaker -> distribute;
ebookmaker -> docutils;
ebookmaker -> lxml;
ebookmaker -> pillow;
ebookmaker -> requests;
ebookmaker -> six;
ebpub -> django;
ebpub -> "django-jsonfield";
ebpub -> "easy-thumbnails";
ebpub -> gdal;
ebpub -> mock;
ebpub -> pil;
ebpub -> psycopg2;
ebpub -> "python-dateutil";
ebpub -> pytz;
ebpub -> pyyaml;
ebpub -> shapely;
ebpub -> south;
"ec2-api" -> argparse;
"ec2-api" -> babel;
"ec2-api" -> boto;
"ec2-api" -> botocore;
"ec2-api" -> coverage;
"ec2-api" -> eventlet;
"ec2-api" -> fixtures;
"ec2-api" -> greenlet;
"ec2-api" -> hacking;
"ec2-api" -> httplib2;
"ec2-api" -> lxml;
"ec2-api" -> mock;
"ec2-api" -> nose;
"ec2-api" -> "oslo.concurrency";
"ec2-api" -> "oslo.config";
"ec2-api" -> "oslo.context";
"ec2-api" -> "oslo.db";
"ec2-api" -> "oslo.log";
"ec2-api" -> "oslo.messaging";
"ec2-api" -> "oslo.serialization";
"ec2-api" -> "oslo.utils";
"ec2-api" -> oslotest;
"ec2-api" -> paste;
"ec2-api" -> pastedeploy;
"ec2-api" -> pbr;
"ec2-api" -> pylint;
"ec2-api" -> "python-cinderclient";
"ec2-api" -> "python-glanceclient";
"ec2-api" -> "python-keystoneclient";
"ec2-api" -> "python-neutronclient";
"ec2-api" -> "python-novaclient";
"ec2-api" -> "python-openstackclient";
"ec2-api" -> "python-subunit";
"ec2-api" -> six;
"ec2-api" -> sphinx;
"ec2-api" -> sqlalchemy;
"ec2-api" -> "sqlalchemy-migrate";
"ec2-api" -> "tempest-lib";
"ec2-api" -> testrepository;
"ec2-api" -> testtools;
"ec2-api" -> webob;
ecs -> colorama;
ecs -> docutils;
ecs -> flake8;
ecs -> jinja2;
ecs -> markupsafe;
ecs -> mccabe;
ecs -> mock;
ecs -> paver;
ecs -> pep8;
ecs -> py;
ecs -> pyflakes;
ecs -> pygments;
ecs -> pytest;
ecs -> six;
ecs -> sphinx;
"edeposit.amqp.storage" -> bottle;
"edeposit.amqp.storage" -> paste;
"edeposit.amqp.storage" -> zodb3;
"edeposit.amqp.storage" -> "zope.event";
"edx-submissions" -> coverage;
"edx-submissions" -> ddt;
"edx-submissions" -> django;
"edx-submissions" -> "django-extensions";
"edx-submissions" -> "django-model-utils";
"edx-submissions" -> "django-nose";
"edx-submissions" -> djangorestframework;
"edx-submissions" -> mock;
"edx-submissions" -> nose;
"edx-submissions" -> pep8;
"edx-submissions" -> pylint;
"edx-submissions" -> pytz;
"edx-submissions" -> south;
"edx-submissions" -> sphinx;
"edx-submissions" -> "sphinx-rtd-theme";
"edx-submissions" -> "sphinxcontrib-napoleon";
egtest -> colorama;
egtest -> "cov-core";
egtest -> coverage;
egtest -> docopt;
egtest -> flake8;
egtest -> mccabe;
egtest -> mock;
egtest -> pep8;
egtest -> py;
egtest -> pyflakes;
egtest -> pytest;
egtest -> "pytest-cov";
egtest -> six;
egtest -> tox;
egtest -> virtualenv;
egtest -> wheel;
ElastAlert -> argparse;
ElastAlert -> blist;
ElastAlert -> boto;
ElastAlert -> croniter;
ElastAlert -> elasticsearch;
ElastAlert -> jira;
ElastAlert -> jsonschema;
ElastAlert -> mock;
ElastAlert -> "python-dateutil";
ElastAlert -> pyyaml;
ElastAlert -> simplejson;
"elastic-git" -> elasticsearch;
"elastic-git" -> gitpython;
"elastic-git" -> jinja2;
"elastic-git" -> mock;
"elastic-git" -> requests;
"elastic-git" -> unidecode;
"elastic-git" -> "zope.interface";
elita -> celery;
elita -> clint;
elita -> gevent;
elita -> gitpython;
elita -> gunicorn;
elita -> jsonpatch;
elita -> lockfile;
elita -> mock;
elita -> nose;
elita -> pymongo;
elita -> pyramid;
elita -> "python-slugify";
elita -> pyyaml;
elita -> requests;
elita -> sh;
elita -> simplejson;
ella -> distribute;
ella -> django;
ella -> pytz;
ella -> south;
Elpotrero -> argparse;
Elpotrero -> distribute;
Elpotrero -> django;
Elpotrero -> gunicorn;
Elpotrero -> jinja2;
Elpotrero -> "mysql-python";
Elpotrero -> pillow;
Elpotrero -> psycopg2;
Elpotrero -> pyyaml;
Elpotrero -> wsgiref;
"enlightns-cli" -> cffi;
"enlightns-cli" -> click;
"enlightns-cli" -> colorama;
"enlightns-cli" -> cryptography;
"enlightns-cli" -> dnspython;
"enlightns-cli" -> enum34;
"enlightns-cli" -> ipaddress;
"enlightns-cli" -> ipy;
"enlightns-cli" -> "ndg-httpsclient";
"enlightns-cli" -> netifaces;
"enlightns-cli" -> ordereddict;
"enlightns-cli" -> py;
"enlightns-cli" -> pyasn1;
"enlightns-cli" -> pycparser;
"enlightns-cli" -> pyopenssl;
"enlightns-cli" -> pytest;
"enlightns-cli" -> "python-dateutil";
"enlightns-cli" -> requests;
"enlightns-cli" -> six;
eno -> argparse;
eno -> flask;
eno -> itsdangerous;
eno -> jinja2;
eno -> markupsafe;
eno -> pyserial;
eno -> pyyaml;
eno -> requests;
eno -> werkzeug;
eno -> wsgiref;
eom -> coverage;
eom -> ddt;
eom -> distribute;
eom -> hacking;
eom -> hiredis;
eom -> mock;
eom -> "msgpack-python";
eom -> nose;
eom -> "nose-exclude";
eom -> "openstack.nose-plugin";
eom -> "oslo.config";
eom -> pbr;
eom -> "python-keystoneclient";
eom -> redis;
eom -> requests;
eom -> "requests-mock";
eom -> simplejson;
eom -> six;
eom -> sphinx;
eom -> "sphinx-autobuild";
eom -> statsd;
eom -> testtools;
eom -> uwsgi;
epys -> coverage;
epys -> coveralls;
epys -> docopt;
epys -> funcsigs;
epys -> matplotlib;
epys -> nose;
epys -> numpy;
epys -> pandas;
epys -> pbr;
epys -> py;
epys -> pyparsing;
epys -> pytest;
epys -> "python-dateutil";
epys -> pytz;
epys -> pyyaml;
epys -> requests;
epys -> six;
epys -> wheel;
"esteele.manager" -> argcomplete;
"esteele.manager" -> argh;
"esteele.manager" -> configparser;
"esteele.manager" -> distribute;
"esteele.manager" -> docutils;
"esteele.manager" -> gitpython;
"esteele.manager" -> keyring;
"esteele.manager" -> progress;
"esteele.manager" -> pygithub;
"esteele.manager" -> "zest.releaser";
ethereum -> coveralls;
ethereum -> pytest;
ethereum -> "pytest-timeout";
ethereum -> pyyaml;
ethereum -> "repoze.lru";
ethereum -> scrypt;
ethereum -> tox;
"eureka-opensource" -> configobj;
"eureka-opensource" -> ecdsa;
"eureka-opensource" -> paramiko;
"eureka-opensource" -> pillow;
"eureka-opensource" -> pycrypto;
"eureka-opensource" -> pysqlite;
"eureka-opensource" -> reportlab;
"eureka-opensource" -> supervisor;
"eureka-opensource" -> whoosh;
"eureka-opensource" -> xlwt;
eventlet -> greenlet;
everest -> iso8601;
everest -> lxml;
everest -> paste;
everest -> pastedeploy;
everest -> pastescript;
everest -> pyopenssl;
everest -> pyparsing;
everest -> pyramid;
everest -> "pyramid-tm";
everest -> sqlalchemy;
everest -> transaction;
everest -> "zope.sqlalchemy";
exoline -> blessings;
exoline -> humanize;
exoline -> jsonschema;
exoline -> ordereddict;
exoline -> "python-dateutil";
exoline -> pytz;
exoline -> requests;
exoline -> six;
exoline -> tzlocal;
explode -> coverage;
explode -> discover;
explode -> hacking;
explode -> oslotest;
explode -> pbr;
explode -> "python-subunit";
explode -> pyyaml;
explode -> sphinx;
explode -> testrepository;
explode -> testscenarios;
explode -> testtools;
eyes -> coverage;
eyes -> django;
eyes -> "django-extensions";
eyes -> docutils;
eyes -> elementtree;
eyes -> httplib2;
eyes -> jinja2;
eyes -> "logilab-common";
eyes -> pygments;
eyes -> pylint;
eyes -> "python-dateutil";
eyes -> simplejson;
eyes -> south;
eyes -> sphinx;
eyes -> unittest2;
eyes -> wsgiref;
faafo -> anyjson;
faafo -> eventlet;
faafo -> flask;
faafo -> "flask-bootstrap";
faafo -> "flask-sqlalchemy";
faafo -> hacking;
faafo -> "oslo.config";
faafo -> "oslo.log";
faafo -> "oslo.messaging";
faafo -> "oslo.vmware";
faafo -> pbr;
faafo -> pillow;
faafo -> pymysql;
faafo -> "python-swiftclient";
faafo -> requests;
faafo -> sphinx;
"fabric-bolt" -> croniter;
"fabric-bolt" -> django;
"fabric-bolt" -> "django-braces";
"fabric-bolt" -> "django-crispy-forms";
"fabric-bolt" -> "django-grappelli";
"fabric-bolt" -> "django-sekizai";
"fabric-bolt" -> fabric;
"fabric-bolt" -> "gevent-socketio";
"fabric-bolt" -> gitpython;
"fabric-bolt" -> pillow;
"fabric-bolt" -> requests;
"fabric-bolt" -> virtualenv;
factopy -> coveralls;
factopy -> django;
factopy -> "django-debug-toolbar";
factopy -> "django-polymorphic";
factopy -> "django-tastypie";
factopy -> ipython;
factopy -> lxml;
factopy -> numpy;
factopy -> pyandoc;
factopy -> pytz;
factopy -> pyyaml;
factopy -> uwsgi;
"fairy-slipper" -> babel;
"fairy-slipper" -> coverage;
"fairy-slipper" -> discover;
"fairy-slipper" -> docutils;
"fairy-slipper" -> hacking;
"fairy-slipper" -> jinja2;
"fairy-slipper" -> "oslo.serialization";
"fairy-slipper" -> oslosphinx;
"fairy-slipper" -> oslotest;
"fairy-slipper" -> pbr;
"fairy-slipper" -> pecan;
"fairy-slipper" -> prettytable;
"fairy-slipper" -> "python-subunit";
"fairy-slipper" -> reno;
"fairy-slipper" -> sphinx;
"fairy-slipper" -> testrepository;
"fairy-slipper" -> testscenarios;
"fairy-slipper" -> testtools;
"fairy-slipper" -> webob;
"fa.jquery" -> babel;
"fa.jquery" -> distribute;
"fa.jquery" -> fanstatic;
"fa.jquery" -> "js.jquery";
"fa.jquery" -> mako;
"fa.jquery" -> markdown;
"fa.jquery" -> simplejson;
"fa.jquery" -> webhelpers;
"fake-switches" -> flexmock;
"fake-switches" -> mock;
"fake-switches" -> netaddr;
"fake-switches" -> nose;
"fake-switches" -> pexpect;
"fake-switches" -> pyasn1;
"fake-switches" -> pyhamcrest;
"fake-switches" -> twisted;
Fanery -> ipdb;
Fanery -> "msgpack-python";
Fanery -> requests;
Fanery -> scrypt;
Fanery -> ujson;
Fanery -> webob;
fanstatic -> cssmin;
fanstatic -> jsmin;
fanstatic -> "pytest-capturelog";
fauxmo -> jinja2;
fauxmo -> markupsafe;
fauxmo -> pypandoc;
fauxmo -> pytz;
fauxmo -> pyyaml;
fauxmo -> requests;
fauxmo -> sphinx;
fauxmo -> "sphinx-rtd-theme";
fauxmo -> twine;
fauxmo -> wheel;
"fc.agent" -> configobj;
"fc.agent" -> distribute;
"fc.agent" -> iso8601;
"fc.agent" -> nagiosplugin;
"fc.agent" -> netaddr;
"fc.agent" -> pytest;
"fc.agent" -> "python-ldap";
"fc.agent" -> pytz;
"fc.agent" -> pyyaml;
"fc.agent" -> requests;
"fc.agent" -> shortuuid;
fedmsg -> nose;
fedmsg -> requests;
ferry -> boto;
ferry -> flask;
ferry -> pymongo;
ferry -> "python-heatclient";
ferry -> "python-neutronclient";
ferry -> "python-novaclient";
ferry -> pyyaml;
ferry -> requests;
ferry -> sh;
ferry -> six;
ferry -> sphinx;
ferry -> "sphinxcontrib-httpdomain";
ferry -> termcolor;
ferry -> tornado;
fiblary -> coverage;
fiblary -> discover;
fiblary -> fixtures;
fiblary -> flake8;
fiblary -> jsonpatch;
fiblary -> mock;
fiblary -> netaddr;
fiblary -> prettytable;
fiblary -> "python-dateutil";
fiblary -> requests;
fiblary -> six;
fiblary -> sphinx;
fiblary -> testrepository;
fiblary -> testtools;
ficloud -> colorama;
ficloud -> docutils;
ficloud -> fabric;
ficloud -> fig;
ficloud -> flake8;
ficloud -> jinja2;
ficloud -> markupsafe;
ficloud -> mccabe;
ficloud -> mock;
ficloud -> pep8;
ficloud -> prettytable;
ficloud -> py;
ficloud -> pyflakes;
ficloud -> pygments;
ficloud -> pytest;
ficloud -> sphinx;
fig -> "docker-py";
fig -> docopt;
fig -> flake8;
fig -> mock;
fig -> nose;
fig -> pyyaml;
fig -> requests;
fig -> six;
fig -> texttable;
fig -> unittest2;
fig -> "websocket-client";
figaro -> colorama;
figaro -> docutils;
figaro -> flake8;
figaro -> jinja2;
figaro -> markupsafe;
figaro -> mccabe;
figaro -> mock;
figaro -> paver;
figaro -> pep8;
figaro -> py;
figaro -> pyflakes;
figaro -> pygments;
figaro -> pytest;
figaro -> sphinx;
FinancialFundamentals -> beautifulsoup;
FinancialFundamentals -> blist;
FinancialFundamentals -> mock;
FinancialFundamentals -> numpy;
FinancialFundamentals -> pandas;
FinancialFundamentals -> "python-dateutil";
FinancialFundamentals -> pytz;
FinancialFundamentals -> requests;
FinancialFundamentals -> "requests-cache";
FinancialFundamentals -> xmltodict;
FiPy -> bzr;
FiPy -> configobj;
FiPy -> cython;
FiPy -> distribute;
FiPy -> docopt;
FiPy -> docutils;
FiPy -> ipdb;
FiPy -> ipython;
FiPy -> jinja2;
FiPy -> markdown;
FiPy -> markupsafe;
FiPy -> matplotlib;
FiPy -> numpy;
FiPy -> pygments;
FiPy -> pyyaml;
FiPy -> pyzmq;
FiPy -> scipy;
FiPy -> sphinx;
FiPy -> stevedore;
FiPy -> tornado;
FiPy -> virtualenv;
FiPy -> virtualenvwrapper;
FiPy -> wsgiref;
"fish-bundles-web" -> alembic;
"fish-bundles-web" -> cssmin;
"fish-bundles-web" -> derpconf;
"fish-bundles-web" -> flask;
"fish-bundles-web" -> "flask-assets";
"fish-bundles-web" -> "flask-sqlalchemy";
"fish-bundles-web" -> jsmin;
"fish-bundles-web" -> markdown;
"fish-bundles-web" -> "mysql-python";
"fish-bundles-web" -> "semantic-version";
"fish-bundles-web" -> ujson;
"five.globalrequest" -> distribute;
"five.globalrequest" -> "zope.globalrequest";
"five.globalrequest" -> zope2;
"five.grok" -> distribute;
"five.grok" -> "grokcore.component";
"five.grok" -> "grokcore.security";
"five.grok" -> "grokcore.view";
"five.grok" -> "grokcore.viewlet";
"five.grok" -> martian;
"five.grok" -> "zope.annotation";
"five.grok" -> "zope.component";
"five.grok" -> "zope.container";
"five.grok" -> "zope.contentprovider";
"five.grok" -> "zope.interface";
"five.grok" -> "zope.location";
"five.grok" -> "zope.pagetemplate";
"five.grok" -> "zope.publisher";
"five.grok" -> "zope.traversing";
"five.grok" -> zope2;
"fiware-cloto" -> coverage;
"fiware-cloto" -> coveralls;
"fiware-cloto" -> django;
"fiware-cloto" -> "django-nose";
"fiware-cloto" -> djangorestframework;
"fiware-cloto" -> gunicorn;
"fiware-cloto" -> mock;
"fiware-cloto" -> "mysql-python";
"fiware-cloto" -> nose;
"fiware-cloto" -> "oslo.config";
"fiware-cloto" -> "oslo.i18n";
"fiware-cloto" -> "oslo.serialization";
"fiware-cloto" -> "oslo.utils";
"fiware-cloto" -> pika;
"fiware-cloto" -> "python-keystoneclient";
"fiware-cloto" -> pyyaml;
"fiware-facts" -> coverage;
"fiware-facts" -> coveralls;
"fiware-facts" -> flask;
"fiware-facts" -> "flask-testing";
"fiware-facts" -> gevent;
"fiware-facts" -> gunicorn;
"fiware-facts" -> mock;
"fiware-facts" -> "mysql-python";
"fiware-facts" -> nose;
"fiware-facts" -> "oslo.config";
"fiware-facts" -> "oslo.i18n";
"fiware-facts" -> "oslo.serialization";
"fiware-facts" -> "oslo.utils";
"fiware-facts" -> pika;
"fiware-facts" -> "python-dateutil";
"fiware-facts" -> "python-keystoneclient";
"fiware-facts" -> redis;
"fiware-glancesync" -> coverage;
"fiware-glancesync" -> mock;
"fiware-glancesync" -> nose;
"fiware-glancesync" -> "nose-cov";
"fiware-glancesync" -> "oslo.config";
"fiware-glancesync" -> "oslo.i18n";
"fiware-glancesync" -> "oslo.serialization";
"fiware-glancesync" -> "oslo.utils";
"fiware-glancesync" -> pbr;
"fiware-glancesync" -> "python-glanceclient";
"fiware-glancesync" -> "python-keystoneclient";
"fiware-glancesync" -> "requests-mock";
fixtures -> pbr;
fixtures -> six;
fixtures -> testtools;
"flake8-quotes2" -> "check-manifest";
"flake8-quotes2" -> flake8;
"flake8-quotes2" -> mock;
"flake8-quotes2" -> "pep8-naming";
"flake8-quotes2" -> pytest;
"flake8-quotes2" -> "pytest-capturelog";
"flake8-quotes2" -> "pytest-cov";
"flake8-quotes2" -> "pytest-xdist";
"flake8-quotes2" -> sphinx;
"flake8-quotes2" -> tox;
"flake8-quotes2" -> twine;
"flake8-quotes2" -> wheel;
FlaskCms -> alembic;
FlaskCms -> argparse;
FlaskCms -> blinker;
FlaskCms -> flask;
FlaskCms -> "flask-debugtoolbar";
FlaskCms -> "flask-script";
FlaskCms -> "flask-sqlalchemy";
FlaskCms -> "flask-wtf";
FlaskCms -> itsdangerous;
FlaskCms -> jinja2;
FlaskCms -> mako;
FlaskCms -> markdown;
FlaskCms -> markupsafe;
FlaskCms -> "mysql-python";
FlaskCms -> pygments;
FlaskCms -> six;
FlaskCms -> sqlalchemy;
FlaskCms -> "sqlalchemy-utils";
FlaskCms -> webhelpers;
FlaskCms -> werkzeug;
FlaskCms -> wsgiref;
FlaskCms -> wtforms;
"Flask-Dance" -> flask;
"Flask-Dance" -> "flask-cache";
"Flask-Dance" -> "flask-login";
"Flask-Dance" -> "flask-sqlalchemy";
"Flask-Dance" -> mock;
"Flask-Dance" -> oauthlib;
"Flask-Dance" -> pytest;
"Flask-Dance" -> "pytest-cov";
"Flask-Dance" -> requests;
"Flask-Dance" -> "requests-oauthlib";
"Flask-Dance" -> responses;
"Flask-Dance" -> six;
"Flask-Dance" -> sphinx;
"Flask-Dance" -> "sphinxcontrib-napoleon";
"Flask-Dance" -> sqlalchemy;
"Flask-Dance" -> "sqlalchemy-utils";
"Flask-Diamond" -> alembic;
"Flask-Diamond" -> fabric;
"Flask-Diamond" -> flask;
"Flask-Diamond" -> "flask-admin";
"Flask-Diamond" -> "flask-assets";
"Flask-Diamond" -> "flask-debugtoolbar";
"Flask-Diamond" -> "flask-login";
"Flask-Diamond" -> "flask-mail";
"Flask-Diamond" -> "flask-migrate";
"Flask-Diamond" -> "flask-restful";
"Flask-Diamond" -> "flask-script";
"Flask-Diamond" -> "flask-sqlalchemy";
"Flask-Diamond" -> "flask-testing";
"Flask-Diamond" -> "flask-wtf";
"Flask-Diamond" -> gitpython;
"Flask-Diamond" -> gunicorn;
"Flask-Diamond" -> jinja2;
"Flask-Diamond" -> marshmallow;
"Flask-Diamond" -> nose;
"Flask-Diamond" -> pylint;
"Flask-Diamond" -> sphinx;
"Flask-Diamond" -> watchdog;
"Flask-Diamond" -> werkzeug;
"Flask-Diamond" -> wheel;
FlaskEx -> alembic;
FlaskEx -> "facebook-sdk";
FlaskEx -> flask;
FlaskEx -> "flask-assets";
FlaskEx -> "flask-debugtoolbar";
FlaskEx -> "flask-script";
FlaskEx -> "flask-sqlalchemy";
FlaskEx -> "flask-wtf";
FlaskEx -> iso8601;
FlaskEx -> pytz;
FlaskEx -> simplejson;
"Flask-Security" -> bcrypt;
"Flask-Security" -> flask;
"Flask-Security" -> "flask-login";
"Flask-Security" -> "flask-mail";
"Flask-Security" -> "flask-sqlalchemy";
"Flask-Security" -> "flask-wtf";
"Flask-Security" -> itsdangerous;
"Flask-Security" -> passlib;
"Flask-Security" -> pymongo;
"Flask-Security" -> pytest;
"Flask-Security" -> "pytest-cov";
"Flask-Security" -> "pytest-flakes";
"Flask-Security" -> "pytest-pep8";
"Flask-Security" -> tox;
flexmock -> nose;
flexmock -> pytest;
flexmock -> twisted;
flotilla -> distribute;
flotilla -> ipython;
flotilla -> jinja2;
flotilla -> joblib;
flotilla -> matplotlib;
flotilla -> networkx;
flotilla -> numpy;
flotilla -> pandas;
flotilla -> pymongo;
flotilla -> "pytest-cov";
flotilla -> "python-coveralls";
flotilla -> pyzmq;
flotilla -> "scikit-learn";
flotilla -> scipy;
flotilla -> seaborn;
flotilla -> "semantic-version";
flotilla -> six;
flotilla -> statsmodels;
flotilla -> tornado;
flotsam -> "cov-core";
flotsam -> coverage;
flotsam -> coveralls;
flotsam -> flake8;
flotsam -> future;
flotsam -> mock;
flotsam -> pep8;
flotsam -> pylint;
flotsam -> "pytest-cache";
flotsam -> "pytest-cov";
flotsam -> "pytest-pep8";
flotsam -> "restructuredtext-lint";
flotsam -> sphinx;
flotsam -> "sphinx-autobuild";
flotsam -> tox;
flotsam -> wheel;
FlowCytometryTools -> argparse;
FlowCytometryTools -> decorator;
FlowCytometryTools -> distribute;
FlowCytometryTools -> docutils;
FlowCytometryTools -> ecdsa;
FlowCytometryTools -> fabric;
FlowCytometryTools -> funcsigs;
FlowCytometryTools -> gitdb;
FlowCytometryTools -> gitpython;
FlowCytometryTools -> ipython;
FlowCytometryTools -> jinja2;
FlowCytometryTools -> markupsafe;
FlowCytometryTools -> matplotlib;
FlowCytometryTools -> mock;
FlowCytometryTools -> nose;
FlowCytometryTools -> numpy;
FlowCytometryTools -> pandas;
FlowCytometryTools -> paramiko;
FlowCytometryTools -> pbr;
FlowCytometryTools -> pycrypto;
FlowCytometryTools -> pygments;
FlowCytometryTools -> pyparsing;
FlowCytometryTools -> "python-dateutil";
FlowCytometryTools -> pytz;
FlowCytometryTools -> scipy;
FlowCytometryTools -> six;
FlowCytometryTools -> sphinx;
FlowCytometryTools -> "sphinx-bootstrap-theme";
FlowCytometryTools -> "sphinxcontrib-napoleon";
FlowCytometryTools -> wsgiref;
fotochest -> celery;
fotochest -> "django-braces";
fotochest -> "django-celery";
fotochest -> "django-crispy-forms";
fotochest -> "django-haystack";
fotochest -> "django-taggit";
fotochest -> "django-tastypie";
fotochest -> pil;
fotochest -> "python-memcached";
fotochest -> "sorl-thumbnail";
fotochest -> whoosh;
frappe -> click;
frappe -> coverage;
frappe -> django;
frappe -> "django-coverage";
frappe -> "django-debug-toolbar";
frappe -> "django-nose";
frappe -> djangorestframework;
frappe -> docopt;
frappe -> futures;
frappe -> "mysql-python";
frappe -> nose;
frappe -> pandas;
frappe -> "python-dateutil";
frappe -> "python-memcached";
frappe -> pytz;
frappe -> raven;
frappe -> six;
frappe -> sphinx;
frappe -> "sphinx-rtd-theme";
frappe -> uwsgi;
frasco -> blinker;
frasco -> flask;
frasco -> "python-slugify";
frasco -> pyyaml;
frasco -> requests;
frasco -> simplejson;
frasco -> speaklater;
"frasco-users" -> "flask-login";
"frasco-users" -> frasco;
freezer -> apscheduler;
freezer -> astroid;
freezer -> coverage;
freezer -> discover;
freezer -> distribute;
freezer -> flake8;
freezer -> hacking;
freezer -> mock;
freezer -> "oslo.config";
freezer -> "oslo.i18n";
freezer -> "oslo.log";
freezer -> "oslo.utils";
freezer -> oslosphinx;
freezer -> paramiko;
freezer -> pbr;
freezer -> pylint;
freezer -> pymongo;
freezer -> pymysql;
freezer -> "python-cinderclient";
freezer -> "python-glanceclient";
freezer -> "python-keystoneclient";
freezer -> "python-novaclient";
freezer -> "python-openstackclient";
freezer -> "python-subunit";
freezer -> "python-swiftclient";
freezer -> sphinx;
freezer -> testrepository;
freezer -> testtools;
"freezer-api" -> astroid;
"freezer-api" -> coverage;
"freezer-api" -> elasticsearch;
"freezer-api" -> falcon;
"freezer-api" -> flake8;
"freezer-api" -> jsonschema;
"freezer-api" -> keystonemiddleware;
"freezer-api" -> mock;
"freezer-api" -> "oslo.config";
"freezer-api" -> "oslo.i18n";
"freezer-api" -> pylint;
"freezer-api" -> pytest;
"freezer-api" -> "pytest-cov";
"freezer-api" -> "pytest-xdist";
Freezes -> argh;
Freezes -> "backports.ssl-match-hostname";
Freezes -> certifi;
Freezes -> cssmin;
Freezes -> cssutils;
Freezes -> flask;
Freezes -> "flask-assets";
Freezes -> "flask-babel";
Freezes -> "flask-bootstrap";
Freezes -> "flask-script";
Freezes -> itsdangerous;
Freezes -> jinja2;
Freezes -> jsmin;
Freezes -> livereload;
Freezes -> markdown;
Freezes -> markupsafe;
Freezes -> pathtools;
Freezes -> pyyaml;
Freezes -> tornado;
Freezes -> webassets;
Freezes -> werkzeug;
fssa -> future;
fssa -> h5py;
fssa -> hypothesis;
fssa -> matplotlib;
fssa -> numpy;
fssa -> pytest;
fssa -> "pytest-capturelog";
fssa -> "pytest-cov";
fssa -> "pytest-mock";
fssa -> "pytest-pep8";
fssa -> releases;
fssa -> scipy;
fssa -> seaborn;
fssa -> sphinx;
fssa -> "sphinxcontrib-bibtex";
"ftw.bridge.client" -> accesscontrol;
"ftw.bridge.client" -> acquisition;
"ftw.bridge.client" -> distribute;
"ftw.bridge.client" -> "ftw.upgrade";
"ftw.bridge.client" -> plone;
"ftw.bridge.client" -> "plone.api";
"ftw.bridge.client" -> "plone.app.portlets";
"ftw.bridge.client" -> "plone.app.registry";
"ftw.bridge.client" -> "plone.memoize";
"ftw.bridge.client" -> "plone.portlets";
"ftw.bridge.client" -> "products.cmfcore";
"ftw.bridge.client" -> "products.cmfplone";
"ftw.bridge.client" -> "products.genericsetup";
"ftw.bridge.client" -> "products.pluggableauthservice";
"ftw.bridge.client" -> "products.statusmessages";
"ftw.bridge.client" -> "zope.app.component";
"ftw.bridge.client" -> "zope.component";
"ftw.bridge.client" -> "zope.formlib";
"ftw.bridge.client" -> "zope.i18nmessageid";
"ftw.bridge.client" -> "zope.interface";
"ftw.bridge.client" -> "zope.publisher";
"ftw.bridge.client" -> "zope.schema";
"ftw.bridge.client" -> zope2;
"ftw.file" -> distribute;
"ftw.file" -> "ftw.upgrade";
"ftw.file" -> pillow;
"ftw.file" -> plone;
"ftw.file" -> "plone.api";
"ftw.file" -> "plone.app.registry";
"ftw.jsondump" -> acquisition;
"ftw.jsondump" -> distribute;
"ftw.jsondump" -> "plone.dexterity";
"ftw.jsondump" -> "plone.uuid";
"ftw.jsondump" -> "products.archetypes";
"ftw.jsondump" -> "products.cmfcore";
"ftw.jsondump" -> "zope.component";
"ftw.jsondump" -> "zope.i18nmessageid";
"ftw.jsondump" -> "zope.interface";
"ftw.jsondump" -> "zope.schema";
"ftw.jsondump" -> zope2;
"ftw.lawgiver" -> accesscontrol;
"ftw.lawgiver" -> acquisition;
"ftw.lawgiver" -> argparse;
"ftw.lawgiver" -> distribute;
"ftw.lawgiver" -> "ftw.upgrade";
"ftw.lawgiver" -> lxml;
"ftw.lawgiver" -> ordereddict;
"ftw.lawgiver" -> "path.py";
"ftw.lawgiver" -> plone;
"ftw.lawgiver" -> "plone.app.workflow";
"ftw.lawgiver" -> "plone.i18n";
"ftw.lawgiver" -> "products.cmfcore";
"ftw.lawgiver" -> "products.cmfplone";
"ftw.lawgiver" -> "products.genericsetup";
"ftw.lawgiver" -> "products.statusmessages";
"ftw.lawgiver" -> zodb3;
"ftw.lawgiver" -> "zope.component";
"ftw.lawgiver" -> "zope.configuration";
"ftw.lawgiver" -> "zope.i18n";
"ftw.lawgiver" -> "zope.i18nmessageid";
"ftw.lawgiver" -> "zope.interface";
"ftw.lawgiver" -> "zope.publisher";
"ftw.lawgiver" -> "zope.schema";
"ftw.lawgiver" -> zope2;
"ftw.slider" -> "archetypes.schemaextender";
"ftw.slider" -> distribute;
"ftw.slider" -> "ftw.upgrade";
"ftw.slider" -> "plone.app.dexterity";
"ftw.slider" -> "plone.app.jquery";
"ftw.slider" -> "plone.behavior";
"ftw.slider" -> "plone.dexterity";
"ftw.slider" -> "plone.directives.form";
"ftw.slider" -> "plone.namedfile";
"ftw.slider" -> "products.cmfcore";
"ftw.slider" -> "products.cmfplone";
"ftw.slider" -> "products.genericsetup";
"ftw.testing" -> distribute;
"ftw.testing" -> "path.py";
"ftw.testing" -> pytz;
"ftw.testing" -> unittest2;
"ftw.testing" -> "zope.component";
"ftw.testing" -> "zope.configuration";
"ftw.testing" -> "zope.interface";
"ftw.testing" -> "zope.publisher";
"ftw.upgrade" -> accesscontrol;
"ftw.upgrade" -> acquisition;
"ftw.upgrade" -> argcomplete;
"ftw.upgrade" -> argparse;
"ftw.upgrade" -> distribute;
"ftw.upgrade" -> inflection;
"ftw.upgrade" -> "path.py";
"ftw.upgrade" -> plone;
"ftw.upgrade" -> "plone.browserlayer";
"ftw.upgrade" -> "products.cmfcore";
"ftw.upgrade" -> "products.cmfplone";
"ftw.upgrade" -> "products.genericsetup";
"ftw.upgrade" -> requests;
"ftw.upgrade" -> transaction;
"ftw.upgrade" -> "zope.component";
"ftw.upgrade" -> "zope.interface";
"ftw.upgrade" -> "zope.publisher";
"ftw.upgrade" -> zope2;
fullpath -> isstring;
fullpath -> public;
future -> argparse;
future -> importlib;
future -> unittest2;
futurist -> "python-subunit";
futurist -> testrepository;
futurist -> testscenarios;
futurist -> contextlib2;
futurist -> coverage;
futurist -> discover;
futurist -> doc8;
futurist -> eventlet;
futurist -> hacking;
futurist -> oslosphinx;
futurist -> oslotest;
futurist -> pbr;
futurist -> six;
futurist -> sphinx;
futurist -> testtools;
ga4gh -> cherrypy;
ga4gh -> coverage;
ga4gh -> flake8;
ga4gh -> flask;
ga4gh -> "flask-cors";
ga4gh -> humanize;
ga4gh -> jinja2;
ga4gh -> lxml;
ga4gh -> mock;
ga4gh -> nose;
ga4gh -> pep8;
ga4gh -> pyaml;
ga4gh -> pyopenssl;
ga4gh -> pysam;
ga4gh -> pyyaml;
ga4gh -> requests;
ga4gh -> sphinx;
gabbi -> colorama;
gabbi -> coverage;
gabbi -> hacking;
gabbi -> httplib2;
gabbi -> mock;
gabbi -> pbr;
gabbi -> pyyaml;
gabbi -> six;
gabbi -> sphinx;
gabbi -> testrepository;
gabbi -> tox;
garelay -> celery;
garelay -> "dj-database-url";
garelay -> django;
garelay -> "django-celery";
garelay -> flake8;
garelay -> mock;
garelay -> pytest;
garelay -> "pytest-cov";
garelay -> "pytest-django";
garelay -> "pytest-xdist";
garelay -> raven;
garelay -> redis;
garelay -> requests;
garelay -> responses;
garelay -> sphinx;
gbptestheat -> argparse;
gbptestheat -> babel;
gbptestheat -> coverage;
gbptestheat -> discover;
gbptestheat -> eventlet;
gbptestheat -> greenlet;
gbptestheat -> hacking;
gbptestheat -> httplib2;
gbptestheat -> iso8601;
gbptestheat -> keystonemiddleware;
gbptestheat -> kombu;
gbptestheat -> lockfile;
gbptestheat -> lxml;
gbptestheat -> mock;
gbptestheat -> mox;
gbptestheat -> "mysql-python";
gbptestheat -> netaddr;
gbptestheat -> "oslo.config";
gbptestheat -> "oslo.db";
gbptestheat -> "oslo.i18n";
gbptestheat -> "oslo.messaging";
gbptestheat -> oslosphinx;
gbptestheat -> oslotest;
gbptestheat -> pastedeploy;
gbptestheat -> pbr;
gbptestheat -> psycopg2;
gbptestheat -> pycrypto;
gbptestheat -> "python-ceilometerclient";
gbptestheat -> "python-cinderclient";
gbptestheat -> "python-glanceclient";
gbptestheat -> "python-heatclient";
gbptestheat -> "python-keystoneclient";
gbptestheat -> "python-neutronclient";
gbptestheat -> "python-novaclient";
gbptestheat -> "python-saharaclient";
gbptestheat -> "python-swiftclient";
gbptestheat -> "python-troveclient";
gbptestheat -> pyyaml;
gbptestheat -> requests;
gbptestheat -> routes;
gbptestheat -> six;
gbptestheat -> sphinx;
gbptestheat -> sqlalchemy;
gbptestheat -> "sqlalchemy-migrate";
gbptestheat -> stevedore;
gbptestheat -> testrepository;
gbptestheat -> testscenarios;
gbptestheat -> testtools;
gbptestheat -> webob;
gbptestneutron -> alembic;
gbptestneutron -> anyjson;
gbptestneutron -> argparse;
gbptestneutron -> babel;
gbptestneutron -> cliff;
gbptestneutron -> coverage;
gbptestneutron -> discover;
gbptestneutron -> eventlet;
gbptestneutron -> fixtures;
gbptestneutron -> greenlet;
gbptestneutron -> hacking;
gbptestneutron -> httplib2;
gbptestneutron -> iso8601;
gbptestneutron -> jinja2;
gbptestneutron -> jsonrpclib;
gbptestneutron -> keystonemiddleware;
gbptestneutron -> kombu;
gbptestneutron -> mock;
gbptestneutron -> netaddr;
gbptestneutron -> ordereddict;
gbptestneutron -> "oslo.config";
gbptestneutron -> "oslo.db";
gbptestneutron -> "oslo.messaging";
gbptestneutron -> "oslo.rootwrap";
gbptestneutron -> oslosphinx;
gbptestneutron -> paste;
gbptestneutron -> pastedeploy;
gbptestneutron -> pbr;
gbptestneutron -> "python-keystoneclient";
gbptestneutron -> "python-neutronclient";
gbptestneutron -> "python-novaclient";
gbptestneutron -> "python-subunit";
gbptestneutron -> requests;
gbptestneutron -> "requests-mock";
gbptestneutron -> routes;
gbptestneutron -> six;
gbptestneutron -> sphinx;
gbptestneutron -> sqlalchemy;
gbptestneutron -> stevedore;
gbptestneutron -> testrepository;
gbptestneutron -> testtools;
gbptestneutron -> webob;
gbptestneutron -> webtest;
"gce-api" -> argparse;
"gce-api" -> babel;
"gce-api" -> coverage;
"gce-api" -> discover;
"gce-api" -> eventlet;
"gce-api" -> feedparser;
"gce-api" -> fixtures;
"gce-api" -> greenlet;
"gce-api" -> hacking;
"gce-api" -> mock;
"gce-api" -> mox;
"gce-api" -> "oslo.concurrency";
"gce-api" -> "oslo.config";
"gce-api" -> "oslo.db";
"gce-api" -> "oslo.log";
"gce-api" -> "oslo.serialization";
"gce-api" -> "oslo.utils";
"gce-api" -> paramiko;
"gce-api" -> paste;
"gce-api" -> pastedeploy;
"gce-api" -> pbr;
"gce-api" -> pylint;
"gce-api" -> "python-cinderclient";
"gce-api" -> "python-glanceclient";
"gce-api" -> "python-keystoneclient";
"gce-api" -> "python-neutronclient";
"gce-api" -> "python-novaclient";
"gce-api" -> "python-subunit";
"gce-api" -> six;
"gce-api" -> sphinx;
"gce-api" -> sqlalchemy;
"gce-api" -> "sqlalchemy-migrate";
"gce-api" -> "tempest-lib";
"gce-api" -> testrepository;
"gce-api" -> testtools;
"gce-api" -> webob;
gear -> argparse;
gear -> coverage;
gear -> discover;
gear -> fixtures;
gear -> hacking;
gear -> pbr;
gear -> pyopenssl;
gear -> "python-daemon";
gear -> "python-subunit";
gear -> sphinx;
gear -> "sphinxcontrib-programoutput";
gear -> statsd;
gear -> testrepository;
gear -> testresources;
gear -> testscenarios;
gear -> testtools;
gearhorn -> babel;
gearhorn -> coverage;
gearhorn -> discover;
gearhorn -> gear;
gearhorn -> hacking;
gearhorn -> oslosphinx;
gearhorn -> oslotest;
gearhorn -> pbr;
gearhorn -> "python-subunit";
gearhorn -> sphinx;
gearhorn -> sqlalchemy;
gearhorn -> testrepository;
gearhorn -> testscenarios;
gearhorn -> testtools;
gearstore -> babel;
gearstore -> coverage;
gearstore -> discover;
gearstore -> fixtures;
gearstore -> gear;
gearstore -> hacking;
gearstore -> oslosphinx;
gearstore -> oslotest;
gearstore -> pbr;
gearstore -> pysqlite;
gearstore -> "python-subunit";
gearstore -> sphinx;
gearstore -> sqlalchemy;
gearstore -> testrepository;
gearstore -> testscenarios;
gearstore -> testtools;
gemini -> bottle;
gemini -> cython;
gemini -> gemini;
gemini -> jinja2;
gemini -> networkx;
gemini -> numexpr;
gemini -> numpy;
gemini -> openpyxl;
gemini -> pandas;
gemini -> pybedtools;
gemini -> pyparsing;
gemini -> pysam;
gemini -> pyyaml;
gemini -> scipy;
gemini -> unidecode;
geminicassandra -> blist;
geminicassandra -> bottle;
geminicassandra -> "cassandra-driver";
geminicassandra -> geminicassandra;
geminicassandra -> jinja2;
geminicassandra -> numpy;
geminicassandra -> openpyxl;
geminicassandra -> pandas;
geminicassandra -> pybedtools;
geminicassandra -> pyparsing;
geminicassandra -> pysam;
geminicassandra -> pyyaml;
geminicassandra -> scipy;
geminicassandra -> unidecode;
geminisqlite -> bottle;
geminisqlite -> geminisqlite;
geminisqlite -> jinja2;
geminisqlite -> numpy;
geminisqlite -> openpyxl;
geminisqlite -> pandas;
geminisqlite -> pybedtools;
geminisqlite -> pyparsing;
geminisqlite -> pysam;
geminisqlite -> pyyaml;
geminisqlite -> scipy;
geminisqlite -> unidecode;
genecoder -> cython;
genecoder -> docopt;
genecoder -> flake8;
genecoder -> matplotlib;
genecoder -> mccabe;
genecoder -> numpy;
genecoder -> pep8;
genecoder -> py;
genecoder -> pyflakes;
genecoder -> pyparsing;
genecoder -> pyside;
genecoder -> pytest;
genecoder -> "python-dateutil";
genecoder -> scipy;
genecoder -> six;
genecoder -> tox;
general -> argparse;
general -> babel;
general -> clize;
general -> coverage;
general -> debtcollector;
general -> fixtures;
general -> funcsigs;
general -> iso8601;
general -> jinja2;
general -> markupsafe;
general -> mock;
general -> "msgpack-python";
general -> netaddr;
general -> netifaces;
general -> "oslo.config";
general -> "oslo.context";
general -> "oslo.i18n";
general -> "oslo.log";
general -> "oslo.serialization";
general -> "oslo.utils";
general -> pbr;
general -> "python-subunit";
general -> pytz;
general -> pyyaml;
general -> sh;
general -> six;
general -> stevedore;
general -> testrepository;
general -> testscenarios;
general -> testtools;
general -> wrapt;
geokey -> django;
geokey -> "django-braces";
geokey -> "django-model-utils";
geokey -> "django-nose";
geokey -> djangorestframework;
geokey -> "easy-thumbnails";
geokey -> "factory-boy";
geokey -> gdata;
geokey -> iso8601;
geokey -> pillow;
geokey -> psycopg2;
geokey -> pytz;
geokey -> requests;
geopdf -> colorama;
geopdf -> docutils;
geopdf -> flake8;
geopdf -> jinja2;
geopdf -> markupsafe;
geopdf -> mccabe;
geopdf -> mock;
geopdf -> paver;
geopdf -> pep8;
geopdf -> py;
geopdf -> pyflakes;
geopdf -> pygments;
geopdf -> pytest;
geopdf -> sphinx;
gerritexec -> coverage;
gerritexec -> discover;
gerritexec -> docutils;
gerritexec -> fixtures;
gerritexec -> hacking;
gerritexec -> mock;
gerritexec -> nose;
gerritexec -> pbr;
gerritexec -> "python-subunit";
gerritexec -> sphinx;
gerritexec -> testrepository;
gerritexec -> testtools;
gertty -> alembic;
gertty -> gitpython;
gertty -> ordereddict;
gertty -> pbr;
gertty -> ply;
gertty -> "python-dateutil";
gertty -> pyyaml;
gertty -> requests;
gertty -> six;
gertty -> sqlalchemy;
gertty -> urwid;
gertty -> voluptuous;
gevent -> cython;
ggcq -> future;
ggcq -> ipdb;
ggcq -> ipython;
ggcq -> matplotlib;
ggcq -> numpy;
ggcq -> psutil;
ggcq -> pytest;
ggcq -> "pytest-capturelog";
ggcq -> "pytest-cov";
ggcq -> "pytest-mock";
ggcq -> scipy;
ggcq -> simpy;
ggcq -> sphinx;
ggcq -> "sphinx-rtd-theme";
ggcq -> "sphinxcontrib-bibtex";
ggcq -> "sphinxcontrib-napoleon";
"girder-worker" -> amqp;
"girder-worker" -> anyjson;
"girder-worker" -> celery;
"girder-worker" -> kombu;
"girder-worker" -> networkx;
"girder-worker" -> pillow;
"girder-worker" -> pymongo;
"girder-worker" -> pytz;
"girder-worker" -> requests;
"girder-worker" -> six;
"girder-worker" -> wsgiref;
gisht -> argcomplete;
gisht -> enum34;
gisht -> envoy;
gisht -> furl;
gisht -> mock;
gisht -> pathlib;
gisht -> pytest;
gisht -> "pytest-cov";
gisht -> requests;
gisht -> responses;
gisht -> tabulate;
github2gitlab -> coverage;
github2gitlab -> discover;
github2gitlab -> docutils;
github2gitlab -> fixtures;
github2gitlab -> gitpython;
github2gitlab -> hacking;
github2gitlab -> mock;
github2gitlab -> pbr;
github2gitlab -> pytest;
github2gitlab -> "python-subunit";
github2gitlab -> requests;
github2gitlab -> sphinx;
github2gitlab -> testrepository;
"git-review" -> argparse;
"git-review" -> discover;
"git-review" -> fixtures;
"git-review" -> hacking;
"git-review" -> mock;
"git-review" -> oslosphinx;
"git-review" -> requests;
"git-review" -> sphinx;
"git-review" -> testrepository;
"git-review" -> testtools;
giza -> argh;
giza -> boto;
giza -> docutils;
giza -> jinja2;
giza -> jira;
giza -> polib;
giza -> pyyaml;
giza -> sphinx;
giza -> "sphinxcontrib-httpdomain";
glance_store -> coverage;
glance_store -> eventlet;
glance_store -> fixtures;
glance_store -> hacking;
glance_store -> jsonschema;
glance_store -> mock;
glance_store -> "oslo.concurrency";
glance_store -> "oslo.config";
glance_store -> "oslo.i18n";
glance_store -> "oslo.serialization";
glance_store -> "oslo.utils";
glance_store -> oslosphinx;
glance_store -> oslotest;
glance_store -> "python-subunit";
glance_store -> "requests-mock";
glance_store -> six;
glance_store -> sphinx;
glance_store -> stevedore;
glance_store -> testrepository;
glance_store -> testscenarios;
glance_store -> testtools;
Glastopf -> beautifulsoup;
Glastopf -> chardet;
Glastopf -> cssselect;
Glastopf -> gevent;
Glastopf -> jinja2;
Glastopf -> lxml;
Glastopf -> "mysql-python";
Glastopf -> pymongo;
Glastopf -> pyopenssl;
Glastopf -> requests;
Glastopf -> sqlalchemy;
Glastopf -> webob;
glean -> coverage;
glean -> discover;
glean -> hacking;
glean -> mock;
glean -> oslosphinx;
glean -> oslotest;
glean -> "python-subunit";
glean -> sphinx;
glean -> testrepository;
glean -> testscenarios;
glean -> testtools;
gnocchi -> alembic;
gnocchi -> coverage;
gnocchi -> doc8;
gnocchi -> fixtures;
gnocchi -> futures;
gnocchi -> gabbi;
gnocchi -> influxdb;
gnocchi -> jinja2;
gnocchi -> keystonemiddleware;
gnocchi -> mock;
gnocchi -> "msgpack-python";
gnocchi -> numpy;
gnocchi -> "oslo.config";
gnocchi -> "oslo.db";
gnocchi -> "oslo.log";
gnocchi -> "oslo.middleware";
gnocchi -> "oslo.policy";
gnocchi -> "oslo.serialization";
gnocchi -> "oslo.utils";
gnocchi -> oslosphinx;
gnocchi -> oslotest;
gnocchi -> pandas;
gnocchi -> pastedeploy;
gnocchi -> pecan;
gnocchi -> prettytable;
gnocchi -> psycopg2;
gnocchi -> pymysql;
gnocchi -> "python-subunit";
gnocchi -> "python-swiftclient";
gnocchi -> pytz;
gnocchi -> pyyaml;
gnocchi -> requests;
gnocchi -> retrying;
gnocchi -> six;
gnocchi -> sphinx;
gnocchi -> "sphinx-bootstrap-theme";
gnocchi -> "sphinxcontrib-httpdomain";
gnocchi -> sqlalchemy;
gnocchi -> "sqlalchemy-utils";
gnocchi -> stevedore;
gnocchi -> "tempest-lib";
gnocchi -> testrepository;
gnocchi -> testscenarios;
gnocchi -> testtools;
gnocchi -> tooz;
gnocchi -> voluptuous;
gnocchi -> webob;
gnocchi -> webtest;
gnocchi -> werkzeug;
gnocchiclient -> babel;
gnocchiclient -> cliff;
gnocchiclient -> coverage;
gnocchiclient -> discover;
gnocchiclient -> futurist;
gnocchiclient -> gnocchi;
gnocchiclient -> hacking;
gnocchiclient -> keystoneauth1;
gnocchiclient -> keystonemiddleware;
gnocchiclient -> "oslo.i18n";
gnocchiclient -> "oslo.serialization";
gnocchiclient -> "oslo.utils";
gnocchiclient -> oslosphinx;
gnocchiclient -> oslotest;
gnocchiclient -> pbr;
gnocchiclient -> "python-subunit";
gnocchiclient -> six;
gnocchiclient -> sphinx;
gnocchiclient -> "tempest-lib";
gnocchiclient -> testrepository;
gnocchiclient -> testscenarios;
gnocchiclient -> testtools;
"gnowsys-studio" -> beautifulsoup;
"gnowsys-studio" -> django;
"gnowsys-studio" -> "django-grappelli";
"gnowsys-studio" -> "django-mptt";
"gnowsys-studio" -> "django-registration";
"gnowsys-studio" -> "django-reversion";
"gnowsys-studio" -> "django-tagging";
"gnowsys-studio" -> html5lib;
"gnowsys-studio" -> pil;
"gnowsys-studio" -> pyparsing;
"gnowsys-studio" -> rdflib;
"gnucash-utilities" -> colorama;
"gnucash-utilities" -> docutils;
"gnucash-utilities" -> flake8;
"gnucash-utilities" -> ipython;
"gnucash-utilities" -> jinja2;
"gnucash-utilities" -> markupsafe;
"gnucash-utilities" -> paver;
"gnucash-utilities" -> pep8;
"gnucash-utilities" -> piecash;
"gnucash-utilities" -> psycopg2;
"gnucash-utilities" -> py;
"gnucash-utilities" -> pyflakes;
"gnucash-utilities" -> pygments;
"gnucash-utilities" -> pymysql;
"gnucash-utilities" -> pytest;
"gnucash-utilities" -> requests;
"gnucash-utilities" -> sphinx;
"gnucash-utilities" -> "sphinx-rtd-theme";
"gnucash-utilities" -> "sphinxcontrib-napoleon";
"gnucash-utilities" -> tox;
googleanalytics -> click;
googleanalytics -> colorama;
googleanalytics -> "google-api-python-client";
googleanalytics -> keyring;
googleanalytics -> oauth2client;
googleanalytics -> prettytable;
googleanalytics -> "python-dateutil";
googleanalytics -> pyyaml;
googleanalytics -> werkzeug;
grab -> lxml;
grab -> pycurl;
grab -> six;
grafyaml -> coverage;
grafyaml -> discover;
grafyaml -> "dogpile.cache";
grafyaml -> hacking;
grafyaml -> mock;
grafyaml -> oslosphinx;
grafyaml -> oslotest;
grafyaml -> pbr;
grafyaml -> "python-slugify";
grafyaml -> "python-subunit";
grafyaml -> pyyaml;
grafyaml -> requests;
grafyaml -> "requests-mock";
grafyaml -> six;
grafyaml -> sphinx;
grafyaml -> testrepository;
grafyaml -> testscenarios;
grafyaml -> testtools;
grafyaml -> voluptuous;
grako -> colorama;
grako -> cython;
grako -> docutils;
grako -> flake8;
grako -> mccabe;
grako -> nose;
grako -> pep8;
grako -> pluggy;
grako -> py;
grako -> pyflakes;
grako -> pytest;
grako -> pyyaml;
grako -> tox;
grako -> virtualenv;
grako -> wheel;
grano -> blinker;
grano -> celery;
grano -> certifi;
grano -> colander;
grano -> flask;
grano -> "flask-login";
grano -> "flask-migrate";
grano -> "flask-script";
grano -> "flask-sqlalchemy";
grano -> jinja2;
grano -> lxml;
grano -> networkx;
grano -> oauth2;
grano -> psycopg2;
grano -> "python-slugify";
grano -> pyyaml;
grano -> requests;
grano -> sqlalchemy;
grano -> stevedore;
grano -> unicodecsv;
grano -> unidecode;
"graph-alchemy" -> coverage;
"graph-alchemy" -> distribute;
"graph-alchemy" -> docutils;
"graph-alchemy" -> flask;
"graph-alchemy" -> "flask-sqlalchemy";
"graph-alchemy" -> jinja2;
"graph-alchemy" -> nose;
"graph-alchemy" -> pep8;
"graph-alchemy" -> pygments;
"graph-alchemy" -> pymongo;
"graph-alchemy" -> sphinx;
"graph-alchemy" -> sqlalchemy;
"graph-alchemy" -> werkzeug;
"graph-alchemy" -> wsgiref;
graphitepager -> coverage;
graphitepager -> jinja2;
graphitepager -> markupsafe;
graphitepager -> mock;
graphitepager -> nose;
graphitepager -> "python-magic";
graphitepager -> pyyaml;
graphitepager -> redis;
graphitepager -> requests;
graphitepager -> six;
graphitepager -> sphinx;
graphitepager -> "websocket-client";
grapple -> argparse;
grapple -> "backports.ssl-match-hostname";
grapple -> numpy;
grapple -> pandas;
grapple -> psycopg2;
grapple -> pytest;
grapple -> "pytest-cov";
grapple -> "python-coveralls";
grapple -> "python-dateutil";
grapple -> pytz;
grapple -> sh;
grapple -> six;
grapple -> "websocket-client";
grequests -> gevent;
grequests -> requests;
gridjug -> future;
gridjug -> ipython;
gridjug -> pytest;
gridjug -> "pytest-capturelog";
gridjug -> "pytest-cov";
gridjug -> "pytest-mock";
gridjug -> "pytest-pep8";
gridjug -> releases;
gridjug -> sphinx;
griffin -> "check-manifest";
griffin -> coverage;
griffin -> flake8;
griffin -> jinja2;
griffin -> pytest;
griffin -> "pytest-cov";
griffin -> ramlfications;
griffin -> six;
griffin -> sphinx;
griffin -> "sphinx-rtd-theme";
griffin -> tox;
griffin -> wheel;
"grokcore.layout" -> distribute;
"grokcore.layout" -> "grokcore.component";
"grokcore.layout" -> "grokcore.security";
"grokcore.layout" -> "grokcore.view";
"grokcore.layout" -> martian;
"grokcore.layout" -> "zope.authentication";
"grokcore.layout" -> "zope.component";
"grokcore.layout" -> "zope.interface";
"grokcore.layout" -> "zope.publisher";
"group-based-policy" -> cliff;
"group-based-policy" -> coverage;
"group-based-policy" -> ddt;
"group-based-policy" -> distribute;
"group-based-policy" -> fixtures;
"group-based-policy" -> hacking;
"group-based-policy" -> httplib2;
"group-based-policy" -> mock;
"group-based-policy" -> neutron;
"group-based-policy" -> ordereddict;
"group-based-policy" -> "os-testr";
"group-based-policy" -> oslosphinx;
"group-based-policy" -> oslotest;
"group-based-policy" -> pbr;
"group-based-policy" -> pylint;
"group-based-policy" -> "python-subunit";
"group-based-policy" -> reno;
"group-based-policy" -> "requests-mock";
"group-based-policy" -> sphinx;
"group-based-policy" -> "tempest-lib";
"group-based-policy" -> testrepository;
"group-based-policy" -> testresources;
"group-based-policy" -> testscenarios;
"group-based-policy" -> testtools;
"group-based-policy" -> webtest;
"group-based-policy-automation" -> babel;
"group-based-policy-automation" -> coverage;
"group-based-policy-automation" -> hacking;
"group-based-policy-automation" -> mock;
"group-based-policy-automation" -> mox;
"group-based-policy-automation" -> mox3;
"group-based-policy-automation" -> oslosphinx;
"group-based-policy-automation" -> oslotest;
"group-based-policy-automation" -> paramiko;
"group-based-policy-automation" -> psycopg2;
"group-based-policy-automation" -> pymysql;
"group-based-policy-automation" -> reno;
"group-based-policy-automation" -> sphinx;
"group-based-policy-automation" -> testrepository;
"group-based-policy-automation" -> testresources;
"group-based-policy-automation" -> testscenarios;
"group-based-policy-automation" -> testtools;
"group-based-policy-ui" -> coverage;
"group-based-policy-ui" -> "django-nose";
"group-based-policy-ui" -> hacking;
"group-based-policy-ui" -> mock;
"group-based-policy-ui" -> mox3;
"group-based-policy-ui" -> nose;
"group-based-policy-ui" -> "nose-exclude";
"group-based-policy-ui" -> nosexcover;
"group-based-policy-ui" -> "openstack.nose-plugin";
"group-based-policy-ui" -> oslosphinx;
"group-based-policy-ui" -> reno;
"group-based-policy-ui" -> selenium;
"group-based-policy-ui" -> sphinx;
"group-based-policy-ui" -> testtools;
"group-based-policy-ui" -> xvfbwrapper;
grouper -> argparse;
grouper -> "backports.ssl-match-hostname";
grouper -> jinja2;
grouper -> markupsafe;
grouper -> networkx;
grouper -> py;
grouper -> pytest;
grouper -> pytz;
grouper -> pyyaml;
grouper -> sqlalchemy;
grouper -> tornado;
grouper -> wsgiref;
grouper -> wtforms;
GroupyAPI -> bumpversion;
GroupyAPI -> coverage;
GroupyAPI -> cryptography;
GroupyAPI -> flake8;
GroupyAPI -> nose;
GroupyAPI -> pillow;
GroupyAPI -> pyyaml;
GroupyAPI -> requests;
GroupyAPI -> responses;
GroupyAPI -> sphinx;
GroupyAPI -> tox;
GroupyAPI -> watchdog;
GroupyAPI -> wheel;
grow -> babel;
grow -> beautifulsoup4;
grow -> boto;
grow -> certifi;
grow -> click;
grow -> coverage;
grow -> dulwich;
grow -> gitpython;
grow -> "google-api-python-client";
grow -> html2text;
grow -> httplib2;
grow -> jinja2;
grow -> keyring;
grow -> markdown;
grow -> markupsafe;
grow -> nose;
grow -> oauth2client;
grow -> paramiko;
grow -> polib;
grow -> progressbar2;
grow -> pyasn1;
grow -> pycrypto;
grow -> pygments;
grow -> pytz;
grow -> pyyaml;
grow -> rednose;
grow -> requests;
grow -> "semantic-version";
grow -> twisted;
grow -> watchdog;
grow -> webob;
grow -> webreview;
grow -> werkzeug;
gruvi -> cffi;
gruvi -> coverage;
gruvi -> coveralls;
gruvi -> flake8;
gruvi -> invoke;
gruvi -> six;
gruvi -> sphinx;
gruvi -> tox;
gruvi -> twine;
gruvi -> wheel;
gthnk -> alabaster;
gthnk -> cssselect;
gthnk -> distribute;
gthnk -> "flask-cache";
gthnk -> gitpython;
gthnk -> pypdf2;
gthnk -> pyscss;
gthnk -> requests;
"gullikson-scripts" -> astropy;
"gullikson-scripts" -> configobj;
"gullikson-scripts" -> cython;
"gullikson-scripts" -> h5py;
"gullikson-scripts" -> matplotlib;
"gullikson-scripts" -> pandas;
"gullikson-scripts" -> "scikit-learn";
"gullikson-scripts" -> scipy;
"gullikson-scripts" -> seaborn;
"gullikson-scripts" -> statsmodels;
gunicorn -> pytest;
gunicorn -> "pytest-cov";
gunicorn -> sphinx;
gunicorn -> "sphinx-rtd-theme";
gwpy -> argparse;
gwpy -> astropy;
gwpy -> gitpython;
gwpy -> h5py;
gwpy -> importlib;
gwpy -> jinja2;
gwpy -> m2crypto;
gwpy -> matplotlib;
gwpy -> numpy;
gwpy -> scipy;
gwpy -> six;
gwpy -> tornado;
hackedit -> cement;
hackedit -> coverage;
hackedit -> dill;
hackedit -> distribute;
hackedit -> future;
hackedit -> pep8;
hackedit -> pip;
hackedit -> pyflakes;
hackedit -> pygments;
hackedit -> pytest;
hackedit -> "pytest-cov";
hackedit -> "pytest-pep8";
hackedit -> pyyaml;
hackedit -> sphinx;
hacking -> coverage;
hacking -> discover;
hacking -> fixtures;
hacking -> flake8;
hacking -> mccabe;
hacking -> oslosphinx;
hacking -> pbr;
hacking -> pep8;
hacking -> pyflakes;
hacking -> "python-subunit";
hacking -> six;
hacking -> sphinx;
hacking -> testrepository;
hacking -> testscenarios;
hacking -> testtools;
handroll -> argh;
handroll -> argparse;
handroll -> blinker;
handroll -> docutils;
handroll -> jinja2;
handroll -> markdown;
handroll -> markupsafe;
handroll -> mock;
handroll -> pathtools;
handroll -> pygments;
handroll -> pyyaml;
handroll -> watchdog;
handroll -> werkzeug;
handroll -> wsgiref;
hardware -> babel;
hardware -> coverage;
hardware -> discover;
hardware -> hacking;
hardware -> ipaddr;
hardware -> netaddr;
hardware -> numpy;
hardware -> oslosphinx;
hardware -> oslotest;
hardware -> pandas;
hardware -> pbr;
hardware -> pexpect;
hardware -> pylint;
hardware -> "python-subunit";
hardware -> sphinx;
hardware -> testrepository;
hardware -> testscenarios;
hardware -> testtools;
heatherr -> coveralls;
heatherr -> "dj-database-url";
heatherr -> django;
heatherr -> fabric;
heatherr -> flake8;
heatherr -> mock;
heatherr -> pytest;
heatherr -> "pytest-cov";
heatherr -> "pytest-django";
heatherr -> "pytest-xdist";
heatherr -> "python-social-auth";
heatherr -> raven;
heatherr -> requests;
heatherr -> responses;
"heat-translator" -> babel;
"heat-translator" -> cliff;
"heat-translator" -> coverage;
"heat-translator" -> discover;
"heat-translator" -> fixtures;
"heat-translator" -> hacking;
"heat-translator" -> oslosphinx;
"heat-translator" -> oslotest;
"heat-translator" -> pbr;
"heat-translator" -> "python-dateutil";
"heat-translator" -> "python-subunit";
"heat-translator" -> pyyaml;
"heat-translator" -> six;
"heat-translator" -> sphinx;
"heat-translator" -> testrepository;
"heat-translator" -> testscenarios;
"heat-translator" -> testtools;
"heat-translator" -> "tosca-parser";
helionsdk -> babel;
helionsdk -> coverage;
helionsdk -> discover;
helionsdk -> hacking;
helionsdk -> oslosphinx;
helionsdk -> oslotest;
helionsdk -> pbr;
helionsdk -> "python-openstacksdk";
helionsdk -> "python-subunit";
helionsdk -> sphinx;
helionsdk -> testrepository;
helionsdk -> testscenarios;
helionsdk -> testtools;
"helpful-site" -> argparse;
"helpful-site" -> click;
"helpful-site" -> cssmin;
"helpful-site" -> envoy;
"helpful-site" -> jinja2;
"helpful-site" -> markdown;
"helpful-site" -> markupsafe;
"helpful-site" -> ply;
"helpful-site" -> pygments;
"helpful-site" -> "python-slugify";
"helpful-site" -> pyyaml;
"helpful-site" -> slimit;
"helpful-site" -> unidecode;
"helpful-site" -> wsgiref;
hendrix -> django;
hendrix -> flask;
hendrix -> funcsigs;
hendrix -> ipdb;
hendrix -> jinja2;
hendrix -> mock;
hendrix -> pyopenssl;
hendrix -> pyramid;
hendrix -> "service-identity";
hendrix -> twisted;
hendrix -> watchdog;
hendrix -> "zope.interface";
hflossk -> click;
hflossk -> coverage;
hflossk -> dulwich;
hflossk -> feedparser;
hflossk -> flask;
hflossk -> mako;
hflossk -> nose;
hflossk -> pep8;
hflossk -> pyyaml;
hflossk -> sh;
hflossk -> six;
hflossk -> tornado;
hflossk -> tox;
holmes -> alembic;
holmes -> babel;
holmes -> cssselect;
holmes -> derpconf;
holmes -> lxml;
holmes -> "mysql-python";
holmes -> pycurl;
holmes -> pyjwt;
holmes -> raven;
holmes -> redis;
holmes -> requests;
holmes -> six;
holmes -> sqlalchemy;
holmes -> tornado;
holmes -> ujson;
"horae.auth" -> distribute;
"horae.auth" -> grok;
"horae.auth" -> "horae.core";
"horae.auth" -> "horae.layout";
"horae.core" -> distribute;
"horae.core" -> grok;
"horae.dashboard" -> distribute;
"horae.dashboard" -> fanstatic;
"horae.dashboard" -> grok;
"horae.dashboard" -> "horae.auth";
"horae.dashboard" -> "horae.core";
"horae.dashboard" -> "horae.layout";
"horae.dashboard" -> "horae.lifecycle";
"horae.dashboard" -> "horae.properties";
"horae.dashboard" -> "horae.ticketing";
"horae.layout" -> beautifulsoup;
"horae.layout" -> distribute;
"horae.layout" -> fanstatic;
"horae.layout" -> grok;
"horae.layout" -> "grokcore.chameleon";
"horae.layout" -> "horae.core";
"horae.layout" -> "js.jquery";
"horae.layout" -> "megrok.pagetemplate";
"horae.lifecycle" -> distribute;
"horae.lifecycle" -> grok;
"horae.lifecycle" -> "horae.auth";
"horae.lifecycle" -> "horae.core";
"horae.lifecycle" -> "horae.layout";
"horae.planning" -> distribute;
"horae.planning" -> fanstatic;
"horae.planning" -> grok;
"horae.planning" -> "horae.auth";
"horae.planning" -> "horae.core";
"horae.planning" -> "horae.layout";
"horae.planning" -> "horae.properties";
"horae.planning" -> "horae.resources";
"horae.planning" -> "horae.search";
"horae.planning" -> "horae.ticketing";
"horae.properties" -> distribute;
"horae.properties" -> grok;
"horae.properties" -> "horae.auth";
"horae.properties" -> "horae.core";
"horae.properties" -> "horae.layout";
"horae.properties" -> "horae.lifecycle";
"horae.resources" -> distribute;
"horae.resources" -> grok;
"horae.resources" -> "horae.auth";
"horae.resources" -> "horae.core";
"horae.resources" -> "horae.layout";
"horae.resources" -> "horae.properties";
"horae.resources" -> "horae.ticketing";
"horae.resources" -> "hurry.query";
"horae.search" -> distribute;
"horae.search" -> grok;
"horae.search" -> "horae.auth";
"horae.search" -> "horae.core";
"horae.search" -> "horae.layout";
"horae.search" -> "horae.lifecycle";
"horae.search" -> "horae.properties";
"horae.search" -> "horae.ticketing";
"horae.search" -> "hurry.query";
"horae.ticketing" -> distribute;
"horae.ticketing" -> grok;
"horae.ticketing" -> "horae.auth";
"horae.ticketing" -> "horae.core";
"horae.ticketing" -> "horae.layout";
"horae.ticketing" -> "horae.lifecycle";
"horae.ticketing" -> "horae.properties";
"horae.ticketing" -> "horae.search";
"horae.ticketing" -> "hurry.query";
"horae.workflow" -> distribute;
"horae.workflow" -> grok;
"horae.workflow" -> "horae.auth";
"horae.workflow" -> "horae.core";
"horae.workflow" -> "horae.layout";
"horae.workflow" -> "horae.properties";
"horae.workflow" -> "horae.search";
"horae.workflow" -> "horae.ticketing";
hot -> argh;
hot -> argparse;
hot -> babel;
hot -> ecdsa;
hot -> fabric;
hot -> gitpython;
hot -> iso8601;
hot -> netaddr;
hot -> "oslo.config";
hot -> "oslo.i18n";
hot -> "oslo.serialization";
hot -> "oslo.utils";
hot -> paramiko;
hot -> pbr;
hot -> prettytable;
hot -> pycrypto;
hot -> "python-heatclient";
hot -> "python-keystoneclient";
hot -> pytz;
hot -> pyyaml;
hot -> requests;
hot -> six;
hot -> stevedore;
html5lib -> flake8;
html5lib -> genshi;
html5lib -> lxml;
html5lib -> nose;
html5lib -> ordereddict;
html5lib -> six;
htpwd -> babel;
htpwd -> flask;
htpwd -> "flask-babel";
htpwd -> "flask-bootstrap";
htpwd -> "flask-script";
htpwd -> "flask-wtf";
htpwd -> itsdangerous;
htpwd -> jinja2;
htpwd -> markupsafe;
htpwd -> passlib;
htpwd -> pytz;
htpwd -> selenium;
htpwd -> speaklater;
htpwd -> werkzeug;
htpwd -> wtforms;
httmock -> requests;
httpretty -> coverage;
httpretty -> httplib2;
httpretty -> mock;
httpretty -> nose;
httpretty -> requests;
httpretty -> sure;
httpretty -> tornado;
httpretty -> urllib3;
"htwkimn.theme" -> distribute;
"htwkimn.theme" -> "ftw.upgrade";
"htwkimn.theme" -> plone;
"htwkimn.theme" -> six;
hubugs -> argparse;
hubugs -> blessings;
hubugs -> html2text;
hubugs -> httplib2;
hubugs -> jinja2;
hubugs -> mock;
hubugs -> nose2;
hubugs -> pygments;
hubugs -> sphinx;
hubward -> argh;
hubward -> bleach;
hubward -> colorama;
hubward -> docutils;
hubward -> fabric;
hubward -> functools32;
hubward -> jsonschema;
hubward -> matplotlib;
hubward -> numpy;
hubward -> pyaml;
hubward -> pybedtools;
hubward -> pycurl;
hubward -> pyyaml;
humanfriendly -> flake8;
humanfriendly -> pep257;
humanfriendly -> pep8;
humanfriendly -> pyflakes;
humfrey -> django;
humfrey -> httplib2;
humfrey -> lxml;
humfrey -> mock;
humfrey -> pil;
humfrey -> pyparsing;
humfrey -> "python-memcached";
humfrey -> pytz;
humfrey -> pyyaml;
humfrey -> rdflib;
humfrey -> redis;
humfrey -> simplejson;
humfrey -> unittest2;
Hydro -> django;
Hydro -> "mysql-connector-python";
Hydro -> "mysql-python";
Hydro -> nose;
Hydro -> numpy;
Hydro -> pandas;
Hydro -> pip;
Hydro -> "python-dateutil";
Hydro -> pytz;
Hydro -> six;
Hydro -> wsgiref;
"hyperdns-hal" -> flask;
"hyperdns-hal" -> httpretty;
"hyperdns-hal" -> nose;
"hyperdns-hal" -> pytest;
"hyperdns-hal" -> requests;
"hyperdns-hal" -> sphinx;
"hyperdns-hal" -> unidecode;
"hyperdns-hal" -> uritemplate;
IMPLib2 -> alabaster;
IMPLib2 -> babel;
IMPLib2 -> docutils;
IMPLib2 -> jinja2;
IMPLib2 -> markupsafe;
IMPLib2 -> pygments;
IMPLib2 -> pyserial;
IMPLib2 -> pytz;
IMPLib2 -> six;
IMPLib2 -> snowballstemmer;
IMPLib2 -> sphinx;
IMPLib2 -> "sphinx-rtd-theme";
IMPLib2 -> wheel;
importanize -> coverage;
importanize -> flake8;
importanize -> mock;
importanize -> nose;
importanize -> rednose;
importanize -> six;
importanize -> tox;
indico -> argparse;
indico -> babel;
indico -> bcrypt;
indico -> beautifulsoup4;
indico -> bleach;
indico -> cssmin;
indico -> flask;
indico -> hiredis;
indico -> icalendar;
indico -> jsmin;
indico -> lxml;
indico -> mako;
indico -> markdown;
indico -> markupsafe;
indico -> oauth2;
indico -> pillow;
indico -> polib;
indico -> py;
indico -> pycountry;
indico -> pypdf;
indico -> pyscss;
indico -> pytest;
indico -> "python-dateutil";
indico -> pytz;
indico -> qrcode;
indico -> redis;
indico -> reportlab;
indico -> requests;
indico -> simplejson;
indico -> termcolor;
indico -> transaction;
indico -> ujson;
indico -> webassets;
indico -> werkzeug;
indico -> wsgiref;
indico -> zconfig;
indico -> zodb3;
indico -> "zope.event";
indico -> "zope.interface";
influxdb -> mock;
influxdb -> nose;
influxdb -> "nose-cov";
influxdb -> pandas;
influxdb -> "python-dateutil";
influxdb -> pytz;
influxdb -> requests;
influxdb -> "requests-mock";
influxdb -> six;
influxdb -> sphinx;
influxdb -> "sphinx-rtd-theme";
influxdb -> twine;
influxdb -> wheel;
"infrae.rest" -> distribute;
"infrae.rest" -> "five.grok";
"infrae.rest" -> "grokcore.view";
"infrae.rest" -> martian;
"infrae.rest" -> "zope.browser";
"infrae.rest" -> "zope.component";
"infrae.rest" -> "zope.event";
"infrae.rest" -> "zope.interface";
"infrae.rest" -> "zope.location";
"infrae.rest" -> "zope.publisher";
"infrae.rest" -> "zope.traversing";
"infrae.wsgi" -> distribute;
"infrae.wsgi" -> "five.grok";
"infrae.wsgi" -> "zope.cachedescriptors";
"infrae.wsgi" -> "zope.component";
"infrae.wsgi" -> "zope.event";
"infrae.wsgi" -> "zope.interface";
"infrae.wsgi" -> "zope.processlifetime";
"infrae.wsgi" -> "zope.publisher";
"infrae.wsgi" -> "zope.security";
"infrae.wsgi" -> zope2;
invenio -> "invenio-base";
invenio -> "invenio-db";
invenio -> "invenio-records";
"invenio-base" -> flask;
"invenio-classifier" -> continue;
"invenio-classifier" -> coverage;
"invenio-classifier" -> flask;
"invenio-classifier" -> "flask-testing";
"invenio-classifier" -> pytest;
"invenio-classifier" -> "pytest-cov";
"invenio-classifier" -> "pytest-pep8";
"invenio-classifier" -> six;
"invenio-classifier" -> sphinx;
"invenio-classifier" -> "sphinx-rtd-theme";
"invenio-classifier" -> unittest2;
"invenio-collections" -> flask;
"invenio-collections" -> "flask-babelex";
"invenio-collections" -> "invenio-db";
"invenio-collections" -> "invenio-records";
"invenio-db" -> "flask-sqlalchemy";
"invenio-db" -> sqlalchemy;
"invenio-db" -> "sqlalchemy-utils";
"invenio-deposit" -> continue;
"invenio-deposit" -> coverage;
"invenio-deposit" -> flask;
"invenio-deposit" -> "flask-testing";
"invenio-deposit" -> "invenio-formatter";
"invenio-deposit" -> "invenio-knowledge";
"invenio-deposit" -> "invenio-records";
"invenio-deposit" -> "invenio-workflows";
"invenio-deposit" -> jsonschema;
"invenio-deposit" -> pytest;
"invenio-deposit" -> "pytest-cov";
"invenio-deposit" -> "pytest-pep8";
"invenio-deposit" -> six;
"invenio-deposit" -> sphinx;
"invenio-deposit" -> "sphinx-rtd-theme";
"invenio-deposit" -> unittest2;
"invenio-ext" -> celery;
"invenio-ext" -> continue;
"invenio-ext" -> coverage;
"invenio-ext" -> distribute;
"invenio-ext" -> elasticsearch;
"invenio-ext" -> flask;
"invenio-ext" -> "flask-admin";
"invenio-ext" -> "flask-assets";
"invenio-ext" -> "flask-babel";
"invenio-ext" -> "flask-cache";
"invenio-ext" -> "flask-login";
"invenio-ext" -> "flask-restful";
"invenio-ext" -> "flask-script";
"invenio-ext" -> "flask-sqlalchemy";
"invenio-ext" -> "flask-wtf";
"invenio-ext" -> httpretty;
"invenio-ext" -> "invenio-base";
"invenio-ext" -> "invenio-collections";
"invenio-ext" -> "invenio-knowledge";
"invenio-ext" -> "invenio-records";
"invenio-ext" -> "invenio-testing";
"invenio-ext" -> "invenio-utils";
"invenio-ext" -> lxml;
"invenio-ext" -> mock;
"invenio-ext" -> "mysql-python";
"invenio-ext" -> oauthlib;
"invenio-ext" -> passlib;
"invenio-ext" -> pytest;
"invenio-ext" -> "pytest-cov";
"invenio-ext" -> "pytest-pep8";
"invenio-ext" -> "python-dateutil";
"invenio-ext" -> raven;
"invenio-ext" -> redis;
"invenio-ext" -> requests;
"invenio-ext" -> six;
"invenio-ext" -> sphinx;
"invenio-ext" -> "sphinx-rtd-theme";
"invenio-ext" -> "sqlalchemy-utils";
"invenio-formatter" -> continue;
"invenio-formatter" -> coverage;
"invenio-formatter" -> flask;
"invenio-formatter" -> "flask-testing";
"invenio-formatter" -> "invenio-base";
"invenio-formatter" -> "invenio-ext";
"invenio-formatter" -> "invenio-upgrader";
"invenio-formatter" -> "invenio-utils";
"invenio-formatter" -> pytest;
"invenio-formatter" -> "pytest-cov";
"invenio-formatter" -> "pytest-pep8";
"invenio-formatter" -> pyyaml;
"invenio-formatter" -> six;
"invenio-formatter" -> sphinx;
"invenio-formatter" -> "sphinx-rtd-theme";
"invenio-formatter" -> unittest2;
"invenio-groups" -> blinker;
"invenio-groups" -> continue;
"invenio-groups" -> coverage;
"invenio-groups" -> flask;
"invenio-groups" -> "flask-login";
"invenio-groups" -> "flask-testing";
"invenio-groups" -> "invenio-upgrader";
"invenio-groups" -> mock;
"invenio-groups" -> pytest;
"invenio-groups" -> "pytest-cov";
"invenio-groups" -> "pytest-pep8";
"invenio-groups" -> six;
"invenio-groups" -> sphinx;
"invenio-groups" -> "sphinx-rtd-theme";
"invenio-groups" -> sqlalchemy;
"invenio-groups" -> "sqlalchemy-utils";
"invenio-groups" -> unittest2;
"invenio-groups" -> wtforms;
"invenio-knowledge" -> continue;
"invenio-knowledge" -> coverage;
"invenio-knowledge" -> flask;
"invenio-knowledge" -> "flask-testing";
"invenio-knowledge" -> "invenio-base";
"invenio-knowledge" -> "invenio-collections";
"invenio-knowledge" -> "invenio-ext";
"invenio-knowledge" -> "invenio-testing";
"invenio-knowledge" -> "invenio-upgrader";
"invenio-knowledge" -> "invenio-utils";
"invenio-knowledge" -> pytest;
"invenio-knowledge" -> "pytest-cov";
"invenio-knowledge" -> "pytest-pep8";
"invenio-knowledge" -> six;
"invenio-knowledge" -> sphinx;
"invenio-knowledge" -> "sphinx-rtd-theme";
"invenio-knowledge" -> unittest2;
"invenio-oauthclient" -> blinker;
"invenio-oauthclient" -> cryptography;
"invenio-oauthclient" -> flask;
"invenio-oauthclient" -> "flask-babelex";
"invenio-oauthclient" -> "invenio-db";
"invenio-oauthclient" -> oauthlib;
"invenio-oauthclient" -> six;
"invenio-oauthclient" -> "sqlalchemy-utils";
"invenio-previewer" -> continue;
"invenio-previewer" -> coverage;
"invenio-previewer" -> flask;
"invenio-previewer" -> "invenio-records";
"invenio-previewer" -> pytest;
"invenio-previewer" -> "pytest-cov";
"invenio-previewer" -> "pytest-pep8";
"invenio-previewer" -> six;
"invenio-previewer" -> sphinx;
"invenio-previewer" -> "sphinx-rtd-theme";
"invenio-records" -> blinker;
"invenio-records" -> "check-manifest";
"invenio-records" -> continue;
"invenio-records" -> coverage;
"invenio-records" -> "flask-admin";
"invenio-records" -> "invenio-db";
"invenio-records" -> isort;
"invenio-records" -> jsonpatch;
"invenio-records" -> jsonschema;
"invenio-records" -> mock;
"invenio-records" -> pytest;
"invenio-records" -> "pytest-cache";
"invenio-records" -> "pytest-cov";
"invenio-records" -> "pytest-pep8";
"invenio-records" -> sphinx;
"invenio-records" -> "sqlalchemy-utils";
"invenio-testing" -> continue;
"invenio-testing" -> coverage;
"invenio-testing" -> flask;
"invenio-testing" -> "flask-testing";
"invenio-testing" -> "invenio-base";
"invenio-testing" -> "invenio-ext";
"invenio-testing" -> pytest;
"invenio-testing" -> "pytest-cov";
"invenio-testing" -> "pytest-pep8";
"invenio-testing" -> reportlab;
"invenio-testing" -> six;
"invenio-testing" -> sphinx;
"invenio-testing" -> "sphinx-rtd-theme";
"invenio-unapi" -> continue;
"invenio-unapi" -> coverage;
"invenio-unapi" -> flask;
"invenio-unapi" -> "flask-testing";
"invenio-unapi" -> "invenio-base";
"invenio-unapi" -> "invenio-formatter";
"invenio-unapi" -> "invenio-records";
"invenio-unapi" -> "invenio-testing";
"invenio-unapi" -> pytest;
"invenio-unapi" -> "pytest-cov";
"invenio-unapi" -> "pytest-pep8";
"invenio-unapi" -> six;
"invenio-unapi" -> sphinx;
"invenio-unapi" -> "sphinx-rtd-theme";
"invenio-unapi" -> unittest2;
"invenio-upgrader" -> alembic;
"invenio-upgrader" -> continue;
"invenio-upgrader" -> coverage;
"invenio-upgrader" -> flask;
"invenio-upgrader" -> "flask-testing";
"invenio-upgrader" -> "invenio-base";
"invenio-upgrader" -> "invenio-ext";
"invenio-upgrader" -> "invenio-testing";
"invenio-upgrader" -> "invenio-utils";
"invenio-upgrader" -> pytest;
"invenio-upgrader" -> "pytest-cov";
"invenio-upgrader" -> "pytest-pep8";
"invenio-upgrader" -> six;
"invenio-upgrader" -> sphinx;
"invenio-upgrader" -> "sphinx-rtd-theme";
"invenio-upgrader" -> unittest2;
"invenio-utils" -> continue;
"invenio-utils" -> coverage;
"invenio-utils" -> flask;
"invenio-utils" -> "flask-testing";
"invenio-utils" -> httpretty;
"invenio-utils" -> "invenio-base";
"invenio-utils" -> "invenio-testing";
"invenio-utils" -> mock;
"invenio-utils" -> pytest;
"invenio-utils" -> "pytest-cov";
"invenio-utils" -> "pytest-pep8";
"invenio-utils" -> six;
"invenio-utils" -> sphinx;
"invenio-utils" -> "sphinx-rtd-theme";
"invenio-utils" -> unidecode;
"invenio-utils" -> unittest2;
"invenio-workflows" -> continue;
"invenio-workflows" -> coverage;
"invenio-workflows" -> flask;
"invenio-workflows" -> "flask-testing";
"invenio-workflows" -> "invenio-base";
"invenio-workflows" -> "invenio-ext";
"invenio-workflows" -> "invenio-testing";
"invenio-workflows" -> "invenio-upgrader";
"invenio-workflows" -> "invenio-utils";
"invenio-workflows" -> pytest;
"invenio-workflows" -> "pytest-cov";
"invenio-workflows" -> "pytest-pep8";
"invenio-workflows" -> six;
"invenio-workflows" -> sphinx;
"invenio-workflows" -> "sphinx-rtd-theme";
"invenio-workflows" -> unittest2;
invoke -> alabaster;
invoke -> flake8;
invoke -> mock;
invoke -> nose;
invoke -> releases;
invoke -> sphinx;
ipython -> distribute;
irco -> alembic;
irco -> docutils;
irco -> fabric;
irco -> flake8;
irco -> flask;
irco -> itsdangerous;
irco -> jinja2;
irco -> mako;
irco -> markupsafe;
irco -> mccabe;
irco -> networkx;
irco -> paramiko;
irco -> pep8;
irco -> pycountry;
irco -> pycrypto;
irco -> pyflakes;
irco -> pygments;
irco -> raven;
irco -> requests;
irco -> sphinx;
irco -> "sphinx-autobuild";
irco -> "sphinx-rtd-theme";
irco -> sqlalchemy;
irco -> structlog;
irco -> werkzeug;
irco -> wheel;
"ironic-discoverd" -> babel;
"ironic-discoverd" -> cliff;
"ironic-discoverd" -> coverage;
"ironic-discoverd" -> doc8;
"ironic-discoverd" -> eventlet;
"ironic-discoverd" -> flask;
"ironic-discoverd" -> hacking;
"ironic-discoverd" -> keystonemiddleware;
"ironic-discoverd" -> mock;
"ironic-discoverd" -> "oslo.config";
"ironic-discoverd" -> "oslo.i18n";
"ironic-discoverd" -> "oslo.utils";
"ironic-discoverd" -> "python-ironicclient";
"ironic-discoverd" -> "python-keystoneclient";
"ironic-discoverd" -> "python-openstackclient";
"ironic-discoverd" -> requests;
"ironic-discoverd" -> six;
"ironic-discoverd" -> stevedore;
"ironic-inspector" -> alembic;
"ironic-inspector" -> babel;
"ironic-inspector" -> coverage;
"ironic-inspector" -> doc8;
"ironic-inspector" -> eventlet;
"ironic-inspector" -> flask;
"ironic-inspector" -> hacking;
"ironic-inspector" -> jsonschema;
"ironic-inspector" -> keystonemiddleware;
"ironic-inspector" -> mock;
"ironic-inspector" -> netaddr;
"ironic-inspector" -> "oslo.concurrency";
"ironic-inspector" -> "oslo.config";
"ironic-inspector" -> "oslo.db";
"ironic-inspector" -> "oslo.i18n";
"ironic-inspector" -> "oslo.log";
"ironic-inspector" -> "oslo.rootwrap";
"ironic-inspector" -> "oslo.utils";
"ironic-inspector" -> oslosphinx;
"ironic-inspector" -> pbr;
"ironic-inspector" -> "python-ironicclient";
"ironic-inspector" -> "python-keystoneclient";
"ironic-inspector" -> "python-swiftclient";
"ironic-inspector" -> reno;
"ironic-inspector" -> six;
"ironic-inspector" -> sphinx;
"ironic-inspector" -> sqlalchemy;
"ironic-inspector" -> stevedore;
"ironic-lib" -> argparse;
"ironic-lib" -> coverage;
"ironic-lib" -> discover;
"ironic-lib" -> eventlet;
"ironic-lib" -> greenlet;
"ironic-lib" -> hacking;
"ironic-lib" -> jinja2;
"ironic-lib" -> mox3;
"ironic-lib" -> "os-testr";
"ironic-lib" -> "oslo.concurrency";
"ironic-lib" -> "oslo.config";
"ironic-lib" -> "oslo.i18n";
"ironic-lib" -> "oslo.log";
"ironic-lib" -> "oslo.middleware";
"ironic-lib" -> "oslo.serialization";
"ironic-lib" -> "oslo.service";
"ironic-lib" -> "oslo.utils";
"ironic-lib" -> oslosphinx;
"ironic-lib" -> oslotest;
"ironic-lib" -> pbr;
"ironic-lib" -> prettytable;
"ironic-lib" -> psutil;
"ironic-lib" -> pycrypto;
"ironic-lib" -> pylint;
"ironic-lib" -> requests;
"ironic-lib" -> simplejson;
"ironic-lib" -> six;
"ironic-lib" -> sphinx;
"ironic-lib" -> testscenarios;
"ironic-lib" -> testtools;
"ironic-oneview-cli" -> babel;
"ironic-oneview-cli" -> coverage;
"ironic-oneview-cli" -> discover;
"ironic-oneview-cli" -> future;
"ironic-oneview-cli" -> hacking;
"ironic-oneview-cli" -> "oslo.i18n";
"ironic-oneview-cli" -> "oslo.utils";
"ironic-oneview-cli" -> oslosphinx;
"ironic-oneview-cli" -> oslotest;
"ironic-oneview-cli" -> pbr;
"ironic-oneview-cli" -> "python-ironicclient";
"ironic-oneview-cli" -> "python-keystoneclient";
"ironic-oneview-cli" -> "python-oneviewclient";
"ironic-oneview-cli" -> "python-subunit";
"ironic-oneview-cli" -> requests;
"ironic-oneview-cli" -> sphinx;
"ironic-oneview-cli" -> testrepository;
"ironic-oneview-cli" -> testscenarios;
"ironic-oneview-cli" -> testtools;
"ironic-oneviewd" -> babel;
"ironic-oneviewd" -> bumpversion;
"ironic-oneviewd" -> coverage;
"ironic-oneviewd" -> cryptography;
"ironic-oneviewd" -> discover;
"ironic-oneviewd" -> flake8;
"ironic-oneviewd" -> future;
"ironic-oneviewd" -> "oslo.i18n";
"ironic-oneviewd" -> "oslo.log";
"ironic-oneviewd" -> "oslo.utils";
"ironic-oneviewd" -> oslosphinx;
"ironic-oneviewd" -> oslotest;
"ironic-oneviewd" -> pbr;
"ironic-oneviewd" -> "python-ironicclient";
"ironic-oneviewd" -> "python-oneviewclient";
"ironic-oneviewd" -> "python-subunit";
"ironic-oneviewd" -> pyyaml;
"ironic-oneviewd" -> requests;
"ironic-oneviewd" -> sphinx;
"ironic-oneviewd" -> testrepository;
"ironic-oneviewd" -> testscenarios;
"ironic-oneviewd" -> testtools;
"ironic-oneviewd" -> tox;
"ironic-oneviewd" -> watchdog;
"ironic-oneviewd" -> wheel;
"ironic-python-agent" -> babel;
"ironic-python-agent" -> coverage;
"ironic-python-agent" -> discover;
"ironic-python-agent" -> doc8;
"ironic-python-agent" -> eventlet;
"ironic-python-agent" -> hacking;
"ironic-python-agent" -> hardware;
"ironic-python-agent" -> iso8601;
"ironic-python-agent" -> mock;
"ironic-python-agent" -> netaddr;
"ironic-python-agent" -> netifaces;
"ironic-python-agent" -> "oslo.concurrency";
"ironic-python-agent" -> "oslo.config";
"ironic-python-agent" -> "oslo.i18n";
"ironic-python-agent" -> "oslo.log";
"ironic-python-agent" -> "oslo.serialization";
"ironic-python-agent" -> "oslo.service";
"ironic-python-agent" -> "oslo.utils";
"ironic-python-agent" -> oslosphinx;
"ironic-python-agent" -> oslotest;
"ironic-python-agent" -> pbr;
"ironic-python-agent" -> pecan;
"ironic-python-agent" -> pint;
"ironic-python-agent" -> psutil;
"ironic-python-agent" -> "python-subunit";
"ironic-python-agent" -> reno;
"ironic-python-agent" -> requests;
"ironic-python-agent" -> six;
"ironic-python-agent" -> sphinx;
"ironic-python-agent" -> "sphinxcontrib-pecanwsme";
"ironic-python-agent" -> stevedore;
"ironic-python-agent" -> testrepository;
"ironic-python-agent" -> testtools;
isbnlib -> coverage;
isbnlib -> distribute;
isbnlib -> flake8;
isbnlib -> mccabe;
isbnlib -> mock;
isbnlib -> nose;
isbnlib -> pep257;
isbnlib -> pep8;
isbnlib -> "pep8-naming";
isbnlib -> pyflakes;
isbnlib -> pylint;
isbnlib -> tox;
isbnlib -> virtualenv;
isbnlib -> wheel;
isbntools -> coverage;
isbntools -> flake8;
isbntools -> isbnlib;
isbntools -> mccabe;
isbntools -> mock;
isbntools -> nose;
isbntools -> pep257;
isbntools -> pep8;
isbntools -> "pep8-naming";
isbntools -> pyflakes;
isbntools -> pylint;
isbntools -> tox;
isbntools -> virtualenv;
iso8601 -> pytest;
iso8601 -> sphinx;
iso8601 -> tox;
iso8601 -> wheel;
"isotoma.depends.plone4_1" -> "archetypes.schemaextender";
"isotoma.depends.plone4_1" -> "collective.monkeypatcher";
"isotoma.depends.plone4_1" -> elementtree;
"isotoma.depends.plone4_1" -> feedparser;
"isotoma.depends.plone4_1" -> "five.globalrequest";
"isotoma.depends.plone4_1" -> markdown;
"isotoma.depends.plone4_1" -> plone;
"isotoma.depends.plone4_1" -> "plone.app.caching";
"isotoma.depends.plone4_1" -> "plone.app.content";
"isotoma.depends.plone4_1" -> "plone.app.contentmenu";
"isotoma.depends.plone4_1" -> "plone.app.contentrules";
"isotoma.depends.plone4_1" -> "plone.app.customerize";
"isotoma.depends.plone4_1" -> "plone.app.discussion";
"isotoma.depends.plone4_1" -> "plone.app.folder";
"isotoma.depends.plone4_1" -> "plone.app.form";
"isotoma.depends.plone4_1" -> "plone.app.imaging";
"isotoma.depends.plone4_1" -> "plone.app.iterate";
"isotoma.depends.plone4_1" -> "plone.app.jquerytools";
"isotoma.depends.plone4_1" -> "plone.app.layout";
"isotoma.depends.plone4_1" -> "plone.app.portlets";
"isotoma.depends.plone4_1" -> "plone.app.registry";
"isotoma.depends.plone4_1" -> "plone.app.upgrade";
"isotoma.depends.plone4_1" -> "plone.app.users";
"isotoma.depends.plone4_1" -> "plone.app.viewletmanager";
"isotoma.depends.plone4_1" -> "plone.app.vocabularies";
"isotoma.depends.plone4_1" -> "plone.app.workflow";
"isotoma.depends.plone4_1" -> "plone.app.z3cform";
"isotoma.depends.plone4_1" -> "plone.autoform";
"isotoma.depends.plone4_1" -> "plone.browserlayer";
"isotoma.depends.plone4_1" -> "plone.cachepurging";
"isotoma.depends.plone4_1" -> "plone.folder";
"isotoma.depends.plone4_1" -> "plone.i18n";
"isotoma.depends.plone4_1" -> "plone.indexer";
"isotoma.depends.plone4_1" -> "plone.locking";
"isotoma.depends.plone4_1" -> "plone.memoize";
"isotoma.depends.plone4_1" -> "plone.portlet.collection";
"isotoma.depends.plone4_1" -> "plone.portlets";
"isotoma.depends.plone4_1" -> "plone.protect";
"isotoma.depends.plone4_1" -> "plone.registry";
"isotoma.depends.plone4_1" -> "plone.session";
"isotoma.depends.plone4_1" -> "plone.supermodel";
"isotoma.depends.plone4_1" -> "plone.uuid";
"isotoma.depends.plone4_1" -> "plone.z3cform";
"isotoma.depends.plone4_1" -> "products.archetypes";
"isotoma.depends.plone4_1" -> "products.cmfcore";
"isotoma.depends.plone4_1" -> "products.cmfplone";
"isotoma.depends.plone4_1" -> "products.genericsetup";
"isotoma.depends.plone4_1" -> "products.pluggableauthservice";
"isotoma.depends.plone4_1" -> "products.statusmessages";
"isotoma.depends.plone4_1" -> "python-dateutil";
"isotoma.depends.plone4_1" -> "python-openid";
"isotoma.depends.plone4_1" -> unidecode;
"isotoma.depends.plone4_1" -> unittest2;
"isotoma.depends.plone4_1" -> "z3c.caching";
"isotoma.depends.plone4_1" -> "z3c.form";
"isotoma.depends.plone4_1" -> "z3c.formwidget.query";
"isotoma.depends.plone4_1" -> "zope.app.component";
"isotoma.depends.plone4_1" -> "zope.app.container";
"isotoma.depends.plone4_1" -> "zope.app.publication";
"isotoma.depends.plone4_1" -> "zope.app.publisher";
"isotoma.depends.plone4_1" -> "zope.authentication";
"isotoma.depends.plone4_1" -> "zope.cachedescriptors";
"isotoma.depends.plone4_1" -> "zope.componentvocabulary";
"isotoma.depends.plone4_1" -> "zope.datetime";
"isotoma.depends.plone4_1" -> "zope.deprecation";
"isotoma.depends.plone4_1" -> "zope.dublincore";
"isotoma.depends.plone4_1" -> "zope.formlib";
"isotoma.depends.plone4_1" -> "zope.globalrequest";
"isotoma.depends.zope2_13_8" -> accesscontrol;
"isotoma.depends.zope2_13_8" -> acquisition;
"isotoma.depends.zope2_13_8" -> argparse;
"isotoma.depends.zope2_13_8" -> datetime;
"isotoma.depends.zope2_13_8" -> docutils;
"isotoma.depends.zope2_13_8" -> mechanize;
"isotoma.depends.zope2_13_8" -> psycopg2;
"isotoma.depends.zope2_13_8" -> pytz;
"isotoma.depends.zope2_13_8" -> transaction;
"isotoma.depends.zope2_13_8" -> zconfig;
"isotoma.depends.zope2_13_8" -> zodb3;
"isotoma.depends.zope2_13_8" -> "zope.annotation";
"isotoma.depends.zope2_13_8" -> "zope.browser";
"isotoma.depends.zope2_13_8" -> "zope.browserpage";
"isotoma.depends.zope2_13_8" -> "zope.component";
"isotoma.depends.zope2_13_8" -> "zope.configuration";
"isotoma.depends.zope2_13_8" -> "zope.container";
"isotoma.depends.zope2_13_8" -> "zope.contentprovider";
"isotoma.depends.zope2_13_8" -> "zope.deferredimport";
"isotoma.depends.zope2_13_8" -> "zope.dottedname";
"isotoma.depends.zope2_13_8" -> "zope.event";
"isotoma.depends.zope2_13_8" -> "zope.i18n";
"isotoma.depends.zope2_13_8" -> "zope.i18nmessageid";
"isotoma.depends.zope2_13_8" -> "zope.interface";
"isotoma.depends.zope2_13_8" -> "zope.lifecycleevent";
"isotoma.depends.zope2_13_8" -> "zope.location";
"isotoma.depends.zope2_13_8" -> "zope.pagetemplate";
"isotoma.depends.zope2_13_8" -> "zope.processlifetime";
"isotoma.depends.zope2_13_8" -> "zope.proxy";
"isotoma.depends.zope2_13_8" -> "zope.publisher";
"isotoma.depends.zope2_13_8" -> "zope.schema";
"isotoma.depends.zope2_13_8" -> "zope.security";
"isotoma.depends.zope2_13_8" -> "zope.site";
"isotoma.depends.zope2_13_8" -> "zope.tales";
"isotoma.depends.zope2_13_8" -> "zope.testing";
"isotoma.depends.zope2_13_8" -> "zope.traversing";
"isotoma.depends.zope2_13_8" -> "zope.viewlet";
"isotoma.depends.zope2_13_8" -> zope2;
isstring -> public;
"ityou.ESI" -> distribute;
"ityou.ESI" -> hiredis;
"ityou.ESI" -> psycopg2;
"ityou.ESI" -> redis;
"ityou.ESI" -> sqlalchemy;
"izug.ticketbox" -> accesscontrol;
"izug.ticketbox" -> acquisition;
"izug.ticketbox" -> distribute;
"izug.ticketbox" -> "ftw.upgrade";
"izug.ticketbox" -> plone;
"izug.ticketbox" -> "products.archetypes";
"izug.ticketbox" -> "products.cmfcore";
"izug.ticketbox" -> "products.cmfplone";
"izug.ticketbox" -> "products.statusmessages";
"izug.ticketbox" -> xlsxwriter;
"izug.ticketbox" -> zodb3;
"izug.ticketbox" -> "zope.annotation";
"izug.ticketbox" -> "zope.app.component";
"izug.ticketbox" -> "zope.app.container";
"izug.ticketbox" -> "zope.cachedescriptors";
"izug.ticketbox" -> "zope.component";
"izug.ticketbox" -> "zope.contentprovider";
"izug.ticketbox" -> "zope.event";
"izug.ticketbox" -> "zope.i18n";
"izug.ticketbox" -> "zope.i18nmessageid";
"izug.ticketbox" -> "zope.interface";
"izug.ticketbox" -> "zope.lifecycleevent";
"izug.ticketbox" -> "zope.schema";
"izug.ticketbox" -> "zope.viewlet";
"izug.ticketbox" -> zope2;
jeb -> coverage;
jeb -> flake8;
jeb -> jinja2;
jeb -> markdown;
jeb -> mock;
jeb -> nose;
jeb -> pep8;
jeb -> pygments;
jeb -> pylint;
"jenkins-job-builder" -> coverage;
"jenkins-job-builder" -> discover;
"jenkins-job-builder" -> fixtures;
"jenkins-job-builder" -> hacking;
"jenkins-job-builder" -> mock;
"jenkins-job-builder" -> ordereddict;
"jenkins-job-builder" -> pbr;
"jenkins-job-builder" -> "python-jenkins";
"jenkins-job-builder" -> "python-subunit";
"jenkins-job-builder" -> pyyaml;
"jenkins-job-builder" -> "setuptools-git";
"jenkins-job-builder" -> six;
"jenkins-job-builder" -> sphinx;
"jenkins-job-builder" -> "sphinxcontrib-programoutput";
"jenkins-job-builder" -> testrepository;
"jenkins-job-builder" -> testscenarios;
"jenkins-job-builder" -> testtools;
"jenkins-job-builder-addons" -> argparse;
"jenkins-job-builder-addons" -> coverage;
"jenkins-job-builder-addons" -> discover;
"jenkins-job-builder-addons" -> fixtures;
"jenkins-job-builder-addons" -> hacking;
"jenkins-job-builder-addons" -> mock;
"jenkins-job-builder-addons" -> ordereddict;
"jenkins-job-builder-addons" -> pbr;
"jenkins-job-builder-addons" -> "python-jenkins";
"jenkins-job-builder-addons" -> "python-subunit";
"jenkins-job-builder-addons" -> pyyaml;
"jenkins-job-builder-addons" -> "setuptools-git";
"jenkins-job-builder-addons" -> six;
"jenkins-job-builder-addons" -> sphinx;
"jenkins-job-builder-addons" -> "sphinxcontrib-programoutput";
"jenkins-job-builder-addons" -> testrepository;
"jenkins-job-builder-addons" -> testscenarios;
"jenkins-job-builder-addons" -> testtools;
"jenkins-job-builder-addons" -> wheel;
"jenkins-job-builder-naginator" -> discover;
"jenkins-job-builder-naginator" -> fixtures;
"jenkins-job-builder-naginator" -> flake8;
"jenkins-job-builder-naginator" -> "jenkins-job-builder";
"jenkins-job-builder-naginator" -> pbr;
"jenkins-job-builder-naginator" -> "python-subunit";
"jenkins-job-builder-naginator" -> six;
"jenkins-job-builder-naginator" -> "sphinxcontrib-programoutput";
"jenkins-job-builder-naginator" -> testrepository;
"jenkins-job-builder-naginator" -> testscenarios;
"jenkins-job-builder-naginator" -> testtools;
"jenkins-job-builder-naginator" -> tox;
"jenkins-job-builder-workflow" -> discover;
"jenkins-job-builder-workflow" -> fixtures;
"jenkins-job-builder-workflow" -> flake8;
"jenkins-job-builder-workflow" -> "jenkins-job-builder";
"jenkins-job-builder-workflow" -> mock;
"jenkins-job-builder-workflow" -> pbr;
"jenkins-job-builder-workflow" -> "python-subunit";
"jenkins-job-builder-workflow" -> six;
"jenkins-job-builder-workflow" -> "sphinxcontrib-programoutput";
"jenkins-job-builder-workflow" -> testrepository;
"jenkins-job-builder-workflow" -> testscenarios;
"jenkins-job-builder-workflow" -> testtools;
"jenkins-job-builder-workflow" -> tox;
"jjb-puppetlabs" -> argparse;
"jjb-puppetlabs" -> coverage;
"jjb-puppetlabs" -> discover;
"jjb-puppetlabs" -> fixtures;
"jjb-puppetlabs" -> hacking;
"jjb-puppetlabs" -> mock;
"jjb-puppetlabs" -> ordereddict;
"jjb-puppetlabs" -> pbr;
"jjb-puppetlabs" -> "python-jenkins";
"jjb-puppetlabs" -> "python-subunit";
"jjb-puppetlabs" -> pyyaml;
"jjb-puppetlabs" -> "setuptools-git";
"jjb-puppetlabs" -> six;
"jjb-puppetlabs" -> sphinx;
"jjb-puppetlabs" -> "sphinxcontrib-programoutput";
"jjb-puppetlabs" -> testrepository;
"jjb-puppetlabs" -> testscenarios;
"jjb-puppetlabs" -> testtools;
jlle -> ipdb;
jlle -> ipython;
jlle -> pep8;
jlle -> pytest;
jlle -> "pytest-cov";
jlle -> sphinx;
jlle -> "sphinx-rtd-theme";
jlle -> "sphinxcontrib-napoleon";
jlle -> tox;
jmbo -> django;
jmbo -> "django-celery";
jmbo -> "django-pagination";
jmbo -> "django-photologue";
jmbo -> "django-tastypie";
jmbo -> pillow;
jmbo -> pytz;
jmbo -> south;
"jmbo-foundry" -> beautifulsoup;
"jmbo-foundry" -> django;
"jmbo-foundry" -> "django-compressor";
"jmbo-foundry" -> "django-pagination";
"jmbo-foundry" -> jmbo;
"jmbo-foundry" -> pyjwt;
"jmbo-foundry" -> "python-memcached";
"jmbo-foundry" -> requests;
"jmbo-foundry" -> "zope.interface";
jsonpatch -> jsonpointer;
"jsonpath-rw-ext" -> babel;
"jsonpath-rw-ext" -> coverage;
"jsonpath-rw-ext" -> discover;
"jsonpath-rw-ext" -> hacking;
"jsonpath-rw-ext" -> oslosphinx;
"jsonpath-rw-ext" -> oslotest;
"jsonpath-rw-ext" -> pbr;
"jsonpath-rw-ext" -> "python-subunit";
"jsonpath-rw-ext" -> sphinx;
"jsonpath-rw-ext" -> testrepository;
"jsonpath-rw-ext" -> testscenarios;
"jsonpath-rw-ext" -> testtools;
jsonpickle -> coverage;
jsonpickle -> enum34;
jsonpickle -> feedparser;
jsonpickle -> nose;
jsonpickle -> numpy;
jsonpickle -> pymongo;
jsonpickle -> simplejson;
jsonpickle -> ujson;
jsonrpclib -> coverage;
jsonrpclib -> nose;
jsonrpclib -> pluggy;
jsonrpclib -> py;
jsonrpclib -> six;
jsonrpclib -> tox;
jsonrpclib -> unittest2;
jsonrpclib -> virtualenv;
jsonrpclib -> wheel;
jtime -> argcomplete;
jtime -> argh;
jtime -> coverage;
jtime -> gitpython;
jtime -> httpretty;
jtime -> jira;
jtime -> mock;
jtime -> nose;
jtime -> "python-dateutil";
jtime -> unittest2;
jupyterhub -> jinja2;
jupyterhub -> notebook;
jupyterhub -> pytest;
jupyterhub -> "pytest-cov";
jupyterhub -> requests;
jupyterhub -> sqlalchemy;
jupyterhub -> tornado;
jupyterhub -> traitlets;
kafka_influxdb -> certifi;
kafka_influxdb -> funcsigs;
kafka_influxdb -> influxdb;
kafka_influxdb -> "kafka-python";
kafka_influxdb -> mock;
kafka_influxdb -> nose;
kafka_influxdb -> pbr;
kafka_influxdb -> "python-dateutil";
kafka_influxdb -> pytz;
kafka_influxdb -> pyyaml;
kafka_influxdb -> requests;
kafka_influxdb -> six;
kafka_influxdb -> virtualenv;
kafka_influxdb -> wheel;
"ka-lite" -> "-";
"ka-lite" -> "django-appconf";
"ka-lite" -> "django-dbbackup";
"ka-lite" -> docopt;
"ka-lite" -> peewee;
"ka-lite" -> ply;
"ka-lite" -> "python-dateutil";
"ka-lite" -> six;
"ka-lite" -> slimit;
"ka-lite" -> south;
"ka-lite-static" -> "-";
"ka-lite-static" -> "django-appconf";
"ka-lite-static" -> "django-dbbackup";
"ka-lite-static" -> docopt;
"ka-lite-static" -> peewee;
"ka-lite-static" -> ply;
"ka-lite-static" -> "python-dateutil";
"ka-lite-static" -> six;
"ka-lite-static" -> slimit;
"ka-lite-static" -> south;
kdb -> attrdict;
kdb -> circuits;
kdb -> feedparser;
kdb -> html2text;
kdb -> mako;
kdb -> pyenchant;
kdb -> requests;
"kemptech-openstack-lbaas" -> astroid;
"kemptech-openstack-lbaas" -> colorama;
"kemptech-openstack-lbaas" -> coverage;
"kemptech-openstack-lbaas" -> flake8;
"kemptech-openstack-lbaas" -> "lazy-object-proxy";
"kemptech-openstack-lbaas" -> mccabe;
"kemptech-openstack-lbaas" -> mock;
"kemptech-openstack-lbaas" -> nose;
"kemptech-openstack-lbaas" -> nosexcover;
"kemptech-openstack-lbaas" -> pbr;
"kemptech-openstack-lbaas" -> pep8;
"kemptech-openstack-lbaas" -> pyflakes;
"kemptech-openstack-lbaas" -> pylint;
"kemptech-openstack-lbaas" -> requests;
"kemptech-openstack-lbaas" -> wheel;
"kemptech-openstack-lbaas" -> wrapt;
kenkou -> beautifulsoup4;
kenkou -> certifi;
kenkou -> cffi;
kenkou -> cryptography;
kenkou -> dnspython;
kenkou -> enum34;
kenkou -> html5lib;
kenkou -> ipaddress;
kenkou -> "ndg-httpsclient";
kenkou -> pyasn1;
kenkou -> "pyasn1-modules";
kenkou -> pycparser;
kenkou -> pyopenssl;
kenkou -> requests;
kenkou -> six;
kerlib -> cffi;
kerlib -> cryptography;
kerlib -> django;
kerlib -> httplib2;
kerlib -> numpy;
kerlib -> oauth2client;
kerlib -> openpyxl;
kerlib -> pep8;
kerlib -> pillow;
kerlib -> pyasn1;
kerlib -> "pyasn1-modules";
kerlib -> pycparser;
kerlib -> pycrypto;
kerlib -> pyopenssl;
kerlib -> requests;
kerlib -> rsa;
kerlib -> six;
kerlib -> wheel;
keystoneauth1 -> argparse;
keystoneauth1 -> coverage;
keystoneauth1 -> discover;
keystoneauth1 -> fixtures;
keystoneauth1 -> hacking;
keystoneauth1 -> iso8601;
keystoneauth1 -> keyring;
keystoneauth1 -> mock;
keystoneauth1 -> oauthlib;
keystoneauth1 -> "os-testr";
keystoneauth1 -> "oslo.config";
keystoneauth1 -> oslosphinx;
keystoneauth1 -> oslotest;
keystoneauth1 -> pbr;
keystoneauth1 -> pycrypto;
keystoneauth1 -> reno;
keystoneauth1 -> requests;
keystoneauth1 -> "requests-mock";
keystoneauth1 -> six;
keystoneauth1 -> sphinx;
keystoneauth1 -> stevedore;
keystoneauth1 -> "tempest-lib";
keystoneauth1 -> testrepository;
keystoneauth1 -> testresources;
keystoneauth1 -> testtools;
keystoneauth1 -> webob;
keystonemiddleware -> testrepository;
keystonemiddleware -> testresources;
keystonemiddleware -> fixtures;
keystonemiddleware -> babel;
keystonemiddleware -> bandit;
keystonemiddleware -> coverage;
keystonemiddleware -> hacking;
keystonemiddleware -> keystoneauth1;
keystonemiddleware -> mock;
keystonemiddleware -> "oslo.config";
keystonemiddleware -> "oslo.context";
keystonemiddleware -> "oslo.i18n";
keystonemiddleware -> "oslo.messaging";
keystonemiddleware -> "oslo.serialization";
keystonemiddleware -> "oslo.utils";
keystonemiddleware -> oslosphinx;
keystonemiddleware -> oslotest;
keystonemiddleware -> pbr;
keystonemiddleware -> pycadf;
keystonemiddleware -> pycrypto;
keystonemiddleware -> "python-keystoneclient";
keystonemiddleware -> "python-memcached";
keystonemiddleware -> reno;
keystonemiddleware -> requests;
keystonemiddleware -> "requests-mock";
keystonemiddleware -> six;
keystonemiddleware -> sphinx;
keystonemiddleware -> stevedore;
keystonemiddleware -> testtools;
keystonemiddleware -> webob;
kglib -> astropy;
kglib -> configobj;
kglib -> cython;
kglib -> h5py;
kglib -> matplotlib;
kglib -> pandas;
kglib -> "scikit-learn";
kglib -> scipy;
kglib -> seaborn;
kglib -> statsmodels;
Khan -> babel;
Khan -> configobj;
Khan -> distribute;
Khan -> httplib2;
Khan -> paste;
Khan -> pastedeploy;
Khan -> pastescript;
Khan -> "repoze.what";
Khan -> "repoze.who";
Khan -> simplejson;
Khan -> tempita;
Khan -> webob;
Khan -> webtest;
Khan -> "zope.component";
Khan -> "zope.deprecation";
Khan -> "zope.interface";
Khan -> "zope.schema";
kii -> django;
kii -> "django-extensions";
kii -> "django-filter";
kii -> "django-guardian";
kii -> "django-mptt";
kii -> "django-polymorphic";
kii -> djangorestframework;
kii -> markdown;
kii -> six;
KloudBuster -> attrdict;
KloudBuster -> babel;
KloudBuster -> coverage;
KloudBuster -> discover;
KloudBuster -> flake8;
KloudBuster -> functools32;
KloudBuster -> "git-review";
KloudBuster -> hacking;
KloudBuster -> "oslo.log";
KloudBuster -> oslosphinx;
KloudBuster -> oslotest;
KloudBuster -> pbr;
KloudBuster -> pecan;
KloudBuster -> pep8;
KloudBuster -> pylint;
KloudBuster -> "python-openstackclient";
KloudBuster -> "python-subunit";
KloudBuster -> redis;
KloudBuster -> sphinx;
KloudBuster -> tabulate;
KloudBuster -> testrepository;
KloudBuster -> testscenarios;
KloudBuster -> testtools;
KloudBuster -> tox;
Kotti -> alembic;
Kotti -> appdirs;
Kotti -> babel;
Kotti -> beaker;
Kotti -> bleach;
Kotti -> chameleon;
Kotti -> colander;
Kotti -> deform;
Kotti -> docopt;
Kotti -> fanstatic;
Kotti -> formencode;
Kotti -> html2text;
Kotti -> html5lib;
Kotti -> iso8601;
Kotti -> "js.jquery";
Kotti -> lxml;
Kotti -> mako;
Kotti -> markupsafe;
Kotti -> pastedeploy;
Kotti -> pillow;
Kotti -> polib;
Kotti -> "py-bcrypt";
Kotti -> pygments;
Kotti -> pyramid;
Kotti -> "pyramid-beaker";
Kotti -> "pyramid-chameleon";
Kotti -> "pyramid-debugtoolbar";
Kotti -> "pyramid-tm";
Kotti -> pytz;
Kotti -> "repoze.lru";
Kotti -> six;
Kotti -> sqlalchemy;
Kotti -> "sqlalchemy-utils";
Kotti -> transaction;
Kotti -> translationstring;
Kotti -> unidecode;
Kotti -> venusian;
Kotti -> waitress;
Kotti -> webob;
Kotti -> wsgiref;
Kotti -> "zope.component";
Kotti -> "zope.configuration";
Kotti -> "zope.deprecation";
Kotti -> "zope.event";
Kotti -> "zope.i18nmessageid";
Kotti -> "zope.interface";
Kotti -> "zope.schema";
Kotti -> "zope.sqlalchemy";
"krux-stdlib" -> argparse;
"krux-stdlib" -> docutils;
"krux-stdlib" -> gitdb;
"krux-stdlib" -> gitpython;
"krux-stdlib" -> jinja2;
"krux-stdlib" -> lockfile;
"krux-stdlib" -> pygments;
"krux-stdlib" -> simplejson;
"krux-stdlib" -> sphinx;
"krux-stdlib" -> statsd;
"krux-stdlib" -> tornado;
labkit -> alabaster;
labkit -> argh;
labkit -> argparse;
labkit -> arrow;
labkit -> babel;
labkit -> beanstalkc;
labkit -> beautifulsoup4;
labkit -> biopython;
labkit -> blinker;
labkit -> click;
labkit -> clize;
labkit -> commutils;
labkit -> coverage;
labkit -> debtcollector;
labkit -> docopt;
labkit -> docutils;
labkit -> "facebook-sdk";
labkit -> fixtures;
labkit -> flask;
labkit -> "flask-cors";
labkit -> "flask-login";
labkit -> "flask-mail";
labkit -> "flask-wtf";
labkit -> funcsigs;
labkit -> general;
labkit -> gunicorn;
labkit -> httplib2;
labkit -> invoke;
labkit -> iso8601;
labkit -> isodate;
labkit -> itsdangerous;
labkit -> jinja2;
labkit -> logutils;
labkit -> lxml;
labkit -> mako;
labkit -> markdown;
labkit -> markupsafe;
labkit -> mock;
labkit -> "msgpack-python";
labkit -> netaddr;
labkit -> netifaces;
labkit -> numpy;
labkit -> oauth2client;
labkit -> oauthlib;
labkit -> "oslo.config";
labkit -> "oslo.context";
labkit -> "oslo.i18n";
labkit -> "oslo.log";
labkit -> "oslo.serialization";
labkit -> "oslo.utils";
labkit -> pandas;
labkit -> pathtools;
labkit -> pbr;
labkit -> pecan;
labkit -> pydispatcher;
labkit -> pygments;
labkit -> pyjwt;
labkit -> pymongo;
labkit -> "python-dateutil";
labkit -> "python-mimeparse";
labkit -> "python-subunit";
labkit -> pytz;
labkit -> pyyaml;
labkit -> redis;
labkit -> requests;
labkit -> rq;
labkit -> sh;
labkit -> simplegeneric;
labkit -> simplejson;
labkit -> six;
labkit -> snowballstemmer;
labkit -> sphinx;
labkit -> "sphinx-rtd-theme";
labkit -> "sphinxcontrib-httpdomain";
labkit -> stevedore;
labkit -> testrepository;
labkit -> testscenarios;
labkit -> testtools;
labkit -> unittest2;
labkit -> waitress;
labkit -> watchdog;
labkit -> webob;
labkit -> webtest;
labkit -> werkzeug;
labkit -> wrapt;
labkit -> wtforms;
lacli -> blessed;
lacli -> boto;
lacli -> cffi;
lacli -> "check-manifest";
lacli -> coverage;
lacli -> cryptography;
lacli -> docopt;
lacli -> flake8;
lacli -> logutils;
lacli -> mock;
lacli -> nose;
lacli -> progressbar;
lacli -> psutil;
lacli -> pyaml;
lacli -> pyandoc;
lacli -> pycparser;
lacli -> pycrypto;
lacli -> pyopenssl;
lacli -> "python-dateutil";
lacli -> pyyaml;
lacli -> requests;
lacli -> six;
lacli -> testtools;
lacli -> thrift;
lacli -> treq;
lacli -> twisted;
lacli -> wheel;
lacli -> "zope.interface";
lancet -> cffi;
lancet -> "check-manifest";
lancet -> click;
lancet -> fabric;
lancet -> flake8;
lancet -> "github3.py";
lancet -> gnureadline;
lancet -> jinja2;
lancet -> jira;
lancet -> keyring;
lancet -> livereload;
lancet -> markupsafe;
lancet -> mccabe;
lancet -> oauthlib;
lancet -> pep8;
lancet -> "pep8-naming";
lancet -> pycparser;
lancet -> pyflakes;
lancet -> pygit2;
lancet -> pytest;
lancet -> "pytest-cov";
lancet -> "pytest-pep8";
lancet -> "python-slugify";
lancet -> raven;
lancet -> requests;
lancet -> "requests-oauthlib";
lancet -> six;
lancet -> sphinx;
lancet -> "sphinx-autobuild";
lancet -> "sphinx-rtd-theme";
lancet -> tabulate;
lancet -> unidecode;
lancet -> wheel;
"largeblue.order" -> distribute;
"largeblue.order" -> zconfig;
"largeblue.order" -> zodb3;
"largeblue.order" -> "zope.annotation";
"largeblue.order" -> "zope.app.testing";
"largeblue.order" -> "zope.formlib";
"largeblue.order" -> "zope.i18n";
"largeblue.order" -> "zope.publisher";
"largeblue.order" -> "zope.security";
"largeblue.order" -> "zope.testing";
"largeblue.order" -> "zope.traversing";
"largeblue.pages" -> distribute;
"largeblue.pages" -> elementtree;
"largeblue.pages" -> "largeblue.order";
"largeblue.pages" -> zconfig;
"largeblue.pages" -> zodb3;
"largeblue.pages" -> "zope.annotation";
"largeblue.pages" -> "zope.app.file";
"largeblue.pages" -> "zope.app.testing";
"largeblue.pages" -> "zope.formlib";
"largeblue.pages" -> "zope.i18n";
"largeblue.pages" -> "zope.locking";
"largeblue.pages" -> "zope.publisher";
"largeblue.pages" -> "zope.security";
"largeblue.pages" -> "zope.testing";
"largeblue.pages" -> "zope.traversing";
"largeblue.tag" -> distribute;
"largeblue.tag" -> zconfig;
"largeblue.tag" -> zodb3;
"largeblue.tag" -> "zope.annotation";
"largeblue.tag" -> "zope.app.testing";
"largeblue.tag" -> "zope.formlib";
"largeblue.tag" -> "zope.i18n";
"largeblue.tag" -> "zope.publisher";
"largeblue.tag" -> "zope.security";
"largeblue.tag" -> "zope.testing";
"largeblue.tag" -> "zope.traversing";
"largeblue.util" -> distribute;
"largeblue.util" -> zconfig;
"largeblue.util" -> zodb3;
"largeblue.util" -> "zope.app.testing";
"largeblue.util" -> "zope.i18n";
"largeblue.util" -> "zope.security";
"largeblue.util" -> "zope.testing";
"launch-control" -> django;
"launch-control" -> "django-pagination";
"launch-control" -> docutils;
"launch-control" -> "python-openid";
"launch-control" -> versiontools;
"lava-dashboard" -> django;
"lava-dashboard" -> docutils;
"lava-dashboard" -> pygments;
"lava-dashboard" -> south;
"lava-dashboard" -> versiontools;
"lava-tool" -> argcomplete;
"lava-tool" -> argparse;
"lava-tool" -> keyring;
"lava-tool" -> pyxdg;
"lava-tool" -> pyyaml;
"lava-tool" -> versiontools;
"lazy-object-proxy" -> sphinx;
"lazy-object-proxy" -> "sphinx-py3doc-enhanced-theme";
"lazy-object-proxy" -> "sphinxcontrib-napoleon";
lda -> coverage;
lda -> cython;
lda -> discover;
lda -> flake8;
lda -> hacking;
lda -> nose;
lda -> numpy;
lda -> numpydoc;
lda -> oslosphinx;
lda -> oslotest;
lda -> "python-subunit";
lda -> scipy;
lda -> sphinx;
lda -> "sphinx-rtd-theme";
lda -> testrepository;
lda -> testscenarios;
lda -> testtools;
lda -> wheel;
ldapadapter -> distribute;
ldapadapter -> "python-ldap";
ldapadapter -> zodb3;
ldapadapter -> "zope.component";
ldapadapter -> "zope.componentvocabulary";
ldapadapter -> "zope.container";
ldapadapter -> "zope.i18nmessageid";
ldapadapter -> "zope.interface";
ldapadapter -> "zope.schema";
ldapadapter -> "zope.security";
ldaptor -> "check-manifest";
ldaptor -> nose;
ldaptor -> pycrypto;
ldaptor -> pyopenssl;
ldaptor -> pyparsing;
ldaptor -> pytest;
ldaptor -> "service-identity";
ldaptor -> sphinx;
ldaptor -> twisted;
ldaptor -> "zope.interface";
"ldclient-py" -> cryptography;
"ldclient-py" -> future;
"ldclient-py" -> pyopenssl;
"ldclient-py" -> pytest;
"ldclient-py" -> redis;
"ldclient-py" -> requests;
"leap.bitmask" -> argparse;
"leap.bitmask" -> coloredlogs;
"leap.bitmask" -> coverage;
"leap.bitmask" -> flake8;
"leap.bitmask" -> ipaddr;
"leap.bitmask" -> ipdb;
"leap.bitmask" -> keyring;
"leap.bitmask" -> "leap.common";
"leap.bitmask" -> "leap.keymanager";
"leap.bitmask" -> "leap.mail";
"leap.bitmask" -> "leap.soledad.client";
"leap.bitmask" -> logbook;
"leap.bitmask" -> mock;
"leap.bitmask" -> nose;
"leap.bitmask" -> "nose-exclude";
"leap.bitmask" -> oauth;
"leap.bitmask" -> pep8;
"leap.bitmask" -> psutil;
"leap.bitmask" -> pyopenssl;
"leap.bitmask" -> "python-daemon";
"leap.bitmask" -> pyzmq;
"leap.bitmask" -> requests;
"leap.bitmask" -> sphinx;
"leap.bitmask" -> tox;
"leap.bitmask" -> twisted;
"leap.bitmask" -> unittest2;
"leap.bitmask" -> wheel;
"leap.bitmask" -> "zope.proxy";
"leap.common" -> jsonschema;
"leap.common" -> mock;
"leap.common" -> pep8;
"leap.common" -> pyopenssl;
"leap.common" -> "python-dateutil";
"leap.common" -> pyzmq;
"leap.keymanager" -> "leap.common";
"leap.keymanager" -> "leap.soledad.client";
"leap.keymanager" -> "leap.soledad.common";
"leap.keymanager" -> mock;
"leap.keymanager" -> pep8;
"leap.keymanager" -> requests;
"leap.keymanager" -> simplejson;
"leap.mail" -> coverage;
"leap.mail" -> "leap.common";
"leap.mail" -> "leap.keymanager";
"leap.mail" -> "leap.soledad.client";
"leap.mail" -> "leap.soledad.common";
"leap.mail" -> mock;
"leap.mail" -> nose;
"leap.mail" -> pep8;
"leap.mail" -> rednose;
"leap.mail" -> "service-identity";
"leap.mail" -> twisted;
"leap.mail" -> "zope.interface";
"leap.mail" -> "zope.proxy";
"leap.soledad.client" -> "leap.common";
"leap.soledad.client" -> "leap.soledad.common";
"leap.soledad.client" -> oauth;
"leap.soledad.client" -> pep8;
"leap.soledad.client" -> scrypt;
"leap.soledad.client" -> twisted;
"leap.soledad.client" -> "zope.proxy";
"leap.soledad.common" -> "leap.common";
"leap.soledad.common" -> mock;
"leap.soledad.common" -> oauth;
"leap.soledad.common" -> pep8;
"leap.soledad.common" -> testscenarios;
"leap.soledad.server" -> configparser;
"leap.soledad.server" -> couchdb;
"leap.soledad.server" -> "leap.soledad.common";
"leap.soledad.server" -> oauth;
"leap.soledad.server" -> pyopenssl;
"leap.soledad.server" -> routes;
"leap.soledad.server" -> twisted;
"ledgerx-python" -> docutils;
"ledgerx-python" -> jinja2;
"ledgerx-python" -> markupsafe;
"ledgerx-python" -> "msgpack-python";
"ledgerx-python" -> pygments;
"ledgerx-python" -> pyzmq;
"ledgerx-python" -> requests;
"ledgerx-python" -> "semantic-version";
"ledgerx-python" -> simplejson;
"ledgerx-python" -> sphinx;
Lektor -> babel;
Lektor -> click;
Lektor -> distribute;
Lektor -> exifread;
Lektor -> flask;
Lektor -> jinja2;
Lektor -> mistune;
Lektor -> pip;
Lektor -> requests;
Lektor -> watchdog;
leonardo_horizon -> babel;
leonardo_horizon -> coverage;
leonardo_horizon -> django;
leonardo_horizon -> "django-compressor";
leonardo_horizon -> "django-nose";
leonardo_horizon -> hacking;
leonardo_horizon -> httplib2;
leonardo_horizon -> iso8601;
leonardo_horizon -> mock;
leonardo_horizon -> mox3;
leonardo_horizon -> netaddr;
leonardo_horizon -> nose;
leonardo_horizon -> "nose-exclude";
leonardo_horizon -> nosexcover;
leonardo_horizon -> "openstack.nose-plugin";
leonardo_horizon -> "oslo.concurrency";
leonardo_horizon -> "oslo.config";
leonardo_horizon -> "oslo.i18n";
leonardo_horizon -> "oslo.serialization";
leonardo_horizon -> "oslo.utils";
leonardo_horizon -> oslosphinx;
leonardo_horizon -> pbr;
leonardo_horizon -> pint;
leonardo_horizon -> pyscss;
leonardo_horizon -> pytz;
leonardo_horizon -> pyyaml;
leonardo_horizon -> selenium;
leonardo_horizon -> six;
leonardo_horizon -> sphinx;
leonardo_horizon -> testtools;
leonardo_horizon -> xvfbwrapper;
libacr -> babel;
libacr -> beautifulsoup;
libacr -> feedparser;
libacr -> pil;
libacr -> sqlalchemy;
libacr -> "zope.sqlalchemy";
linketurbidity -> coveralls;
linketurbidity -> flake8;
linketurbidity -> gdal;
linketurbidity -> ipdb;
linketurbidity -> ipython;
linketurbidity -> isort;
linketurbidity -> netcdf;
linketurbidity -> numpy;
linketurbidity -> pep8;
linketurbidity -> progressbar;
linketurbidity -> pyandoc;
linketurbidity -> pyflakes;
linketurbidity -> "vim-debug";
"lino-welfare" -> babel;
"lino-welfare" -> django;
"lino-welfare" -> docutils;
"lino-welfare" -> jinja2;
"lino-welfare" -> "python-dateutil";
"lino-welfare" -> pytz;
"lino-welfare" -> suds;
"lino-welfare" -> wsgiref;
"lisa-server" -> django;
"lisa-server" -> "django-tastypie";
"lisa-server" -> mongoengine;
"lisa-server" -> pymongo;
"lisa-server" -> pyopenssl;
"lisa-server" -> pytz;
"lisa-server" -> requests;
"lisa-server" -> "service-identity";
"lisa-server" -> sphinx;
"lisa-server" -> twisted;
listdir -> fullpath;
listdir -> isstring;
listdir -> public;
listdir -> tolist;
LitReview -> biopython;
LitReview -> distribute;
LitReview -> flask;
LitReview -> "flask-login";
LitReview -> jinja2;
LitReview -> jsonpickle;
LitReview -> numpy;
LitReview -> sqlalchemy;
LitReview -> werkzeug;
LitReview -> wtforms;
localshop -> celery;
localshop -> django;
localshop -> "django-celery";
localshop -> "django-configurations";
localshop -> "django-model-utils";
localshop -> docutils;
localshop -> gunicorn;
localshop -> kombu;
localshop -> netaddr;
localshop -> pillow;
localshop -> requests;
lockfile -> nose;
lockfile -> sphinx;
logtool -> six;
logtool -> wrapt;
"lovely.memcached" -> distribute;
"lovely.memcached" -> "python-memcached";
"lovely.memcached" -> "zope.event";
"lovely.memcached" -> "zope.interface";
"lovely.memcached" -> "zope.intid";
"lovely.memcached" -> "zope.lifecycleevent";
"lovely.memcached" -> "zope.schema";
"lovely.memcached" -> "zope.security";
"lovely.memcached" -> "zope.site";
LumberMill -> boto3;
LumberMill -> coverage;
LumberMill -> dnspython;
LumberMill -> elasticsearch;
LumberMill -> importlib;
LumberMill -> "kafka-python";
LumberMill -> lxml;
LumberMill -> mock;
LumberMill -> "msgpack-python";
LumberMill -> pygeoip;
LumberMill -> pygments;
LumberMill -> pyyaml;
LumberMill -> pyzmq;
LumberMill -> redis;
LumberMill -> tornado;
LumberMill -> unittest2;
lxml -> cython;
mad2 -> arrow;
mad2 -> colorlog;
mad2 -> humanize;
mad2 -> iso8601;
mad2 -> jinja2;
mad2 -> lockfile;
mad2 -> pymongo;
mad2 -> "python-dateutil";
mad2 -> termcolor;
madrona -> beautifulsoup;
madrona -> boto;
madrona -> django;
madrona -> "django-celery";
madrona -> "django-picklefield";
madrona -> "django-registration";
madrona -> docutils;
madrona -> elementtree;
madrona -> networkx;
madrona -> numpy;
madrona -> psycopg2;
madrona -> "python-openid";
madrona -> south;
madrona -> sphinx;
madrona -> wsgiref;
madrona -> xlwt;
magellan -> alembic;
magellan -> argparse;
magellan -> "django-debug-toolbar";
magellan -> fabric;
magellan -> flask;
magellan -> "flask-script";
magellan -> gdal;
magellan -> gnureadline;
magellan -> ipdb;
magellan -> ipython;
magellan -> itsdangerous;
magellan -> jinja2;
magellan -> mako;
magellan -> markupsafe;
magellan -> progressbar;
magellan -> psycopg2;
magellan -> redis;
magellan -> sphinx;
magellan -> sqlalchemy;
magellan -> sqlparse;
magellan -> terminaltables;
magellan -> virtualenv;
magellan -> werkzeug;
magellan -> wsgiref;
magnetodb -> babel;
magnetodb -> blist;
magnetodb -> boto;
magnetodb -> "cassandra-driver";
magnetodb -> discover;
magnetodb -> eventlet;
magnetodb -> gunicorn;
magnetodb -> hacking;
magnetodb -> httplib2;
magnetodb -> iso8601;
magnetodb -> jsonschema;
magnetodb -> keystonemiddleware;
magnetodb -> kombu;
magnetodb -> mock;
magnetodb -> mox;
magnetodb -> nose;
magnetodb -> "oslo.config";
magnetodb -> "oslo.context";
magnetodb -> "oslo.i18n";
magnetodb -> "oslo.messaging";
magnetodb -> "oslo.serialization";
magnetodb -> "oslo.utils";
magnetodb -> oslosphinx;
magnetodb -> paste;
magnetodb -> pastedeploy;
magnetodb -> pbr;
magnetodb -> pecan;
magnetodb -> "python-keystoneclient";
magnetodb -> six;
magnetodb -> sphinx;
magnetodb -> "sphinxcontrib-httpdomain";
magnetodb -> testrepository;
magnetodb -> testresources;
magnetodb -> testtools;
magnetodb -> webob;
maidenhair -> bunch;
maidenhair -> coverage;
maidenhair -> coveralls;
maidenhair -> mock;
maidenhair -> natsort;
maidenhair -> nose;
maidenhair -> numpy;
maidenhair -> numpydoc;
maidenhair -> ordereddict;
maidenhair -> sphinx;
maidenhair -> tox;
maildump -> beautifulsoup4;
maildump -> cssmin;
maildump -> cssutils;
maildump -> flask;
maildump -> "flask-assets";
maildump -> gevent;
maildump -> "gevent-socketio";
maildump -> "gevent-websocket";
maildump -> html5lib;
maildump -> lockfile;
maildump -> logbook;
maildump -> passlib;
maildump -> pyscss;
maildump -> "python-daemon";
maildump -> pytz;
make_gtfs -> certifi;
make_gtfs -> docutils;
make_gtfs -> gnureadline;
make_gtfs -> ipython;
make_gtfs -> jinja2;
make_gtfs -> jsonschema;
make_gtfs -> markupsafe;
make_gtfs -> mistune;
make_gtfs -> nose;
make_gtfs -> numpy;
make_gtfs -> pandas;
make_gtfs -> pkginfo;
make_gtfs -> pygments;
make_gtfs -> "python-dateutil";
make_gtfs -> pytz;
make_gtfs -> pyzmq;
make_gtfs -> requests;
make_gtfs -> shapely;
make_gtfs -> six;
make_gtfs -> sphinx;
make_gtfs -> tornado;
malleefowl -> lxml;
malleefowl -> netcdf4;
malleefowl -> nose;
malleefowl -> "python-magic";
malleefowl -> "python-swiftclient";
malleefowl -> pyyaml;
managesf -> mock;
managesf -> nose;
managesf -> passlib;
managesf -> pecan;
managesf -> pycrypto;
managesf -> pygerrit;
managesf -> "python-ldap";
managesf -> requests;
managesf -> sphinx;
managesf -> sqlalchemy;
managesf -> urllib3;
"manila-ui" -> babel;
"manila-ui" -> coverage;
"manila-ui" -> ddt;
"manila-ui" -> discover;
"manila-ui" -> django;
"manila-ui" -> "django-compressor";
"manila-ui" -> "django-nose";
"manila-ui" -> hacking;
"manila-ui" -> iso8601;
"manila-ui" -> mock;
"manila-ui" -> mox3;
"manila-ui" -> oslosphinx;
"manila-ui" -> pbr;
"manila-ui" -> "python-keystoneclient";
"manila-ui" -> "python-manilaclient";
"manila-ui" -> "python-subunit";
"manila-ui" -> sphinx;
"manila-ui" -> testrepository;
"manila-ui" -> testscenarios;
"manila-ui" -> testtools;
MapProxy -> beautifulsoup4;
MapProxy -> coverage;
MapProxy -> lxml;
MapProxy -> nose;
MapProxy -> pillow;
MapProxy -> pyyaml;
MapProxy -> requests;
MapProxy -> shapely;
MapProxy -> six;
MapProxy -> waitress;
MapProxy -> webob;
MapProxy -> webtest;
mapreduce -> flask;
mapreduce -> fs;
mapreduce -> gevent;
mapreduce -> greenlet;
mapreduce -> gunicorn;
mapreduce -> itsdangerous;
mapreduce -> jinja2;
mapreduce -> markdown;
mapreduce -> markupsafe;
mapreduce -> pytz;
mapreduce -> redis;
mapreduce -> requests;
mapreduce -> six;
mapreduce -> werkzeug;
mapreduce -> wsgiref;
marionette_client -> mozdevice;
marionette_client -> mozinfo;
marionette_client -> mozlog;
marionette_client -> mozrunner;
"marionette_client-mozilla-b2g34_v2_1" -> mozdevice;
"marionette_client-mozilla-b2g34_v2_1" -> mozinfo;
"marionette_client-mozilla-b2g34_v2_1" -> mozlog;
"marionette_client-mozilla-b2g34_v2_1" -> mozrunner;
marshmallow -> sphinx;
"megrok.layout" -> distribute;
"megrok.layout" -> "grokcore.component";
"megrok.layout" -> "grokcore.security";
"megrok.layout" -> "grokcore.view";
"megrok.layout" -> martian;
"megrok.layout" -> "zope.component";
"megrok.layout" -> "zope.interface";
"megrok.layout" -> "zope.publisher";
"megrok.pagetemplate" -> distribute;
"megrok.pagetemplate" -> "grokcore.component";
"megrok.pagetemplate" -> "grokcore.view";
"megrok.pagetemplate" -> martian;
"megrok.pagetemplate" -> "zope.component";
"megrok.pagetemplate" -> "zope.pagetemplate";
"megrok.pagetemplate" -> "zope.publisher";
"megrok.z3cform.base" -> distribute;
"megrok.z3cform.base" -> "grokcore.component";
"megrok.z3cform.base" -> "grokcore.view";
"megrok.z3cform.base" -> "grokcore.viewlet";
"megrok.z3cform.base" -> "megrok.pagetemplate";
"megrok.z3cform.base" -> "z3c.form";
"menhir.contenttype.document" -> distribute;
"menhir.contenttype.document" -> "dolmen.app.content";
"menhir.contenttype.document" -> "dolmen.app.layout";
"menhir.contenttype.document" -> "dolmen.content";
"menhir.contenttype.document" -> "dolmen.forms.crud";
"menhir.contenttype.document" -> grok;
"menhir.contenttype.document" -> html2text;
"menhir.contenttype.document" -> "zope.i18nmessageid";
"menhir.contenttype.document" -> "zope.interface";
"menhir.contenttype.document" -> "zope.schema";
"menhir.contenttype.folder" -> distribute;
"menhir.contenttype.folder" -> "dolmen.app.container";
"menhir.contenttype.folder" -> "dolmen.app.content";
"menhir.contenttype.folder" -> "dolmen.app.layout";
"menhir.contenttype.folder" -> "dolmen.app.viewselector";
"menhir.contenttype.folder" -> "dolmen.content";
"menhir.contenttype.folder" -> "dolmen.menu";
"menhir.contenttype.folder" -> "grokcore.view";
"menhir.contenttype.folder" -> "megrok.layout";
"menhir.contenttype.folder" -> "zope.component";
"menhir.contenttype.folder" -> "zope.container";
"menhir.contenttype.folder" -> "zope.i18n";
"menhir.contenttype.folder" -> "zope.i18nmessageid";
"menhir.contenttype.folder" -> "zope.interface";
"menhir.contenttype.folder" -> "zope.publisher";
"menhir.contenttype.image" -> distribute;
"menhir.contenttype.image" -> "dolmen.app.content";
"menhir.contenttype.image" -> "dolmen.app.layout";
"menhir.contenttype.image" -> "dolmen.blob";
"menhir.contenttype.image" -> "dolmen.content";
"menhir.contenttype.image" -> "dolmen.file";
"menhir.contenttype.image" -> "dolmen.thumbnailer";
"menhir.contenttype.image" -> fanstatic;
"menhir.contenttype.image" -> "grokcore.view";
"menhir.contenttype.image" -> "zope.i18nmessageid";
"menhir.contenttype.photoalbum" -> distribute;
"menhir.contenttype.photoalbum" -> "dolmen.app.content";
"menhir.contenttype.photoalbum" -> "dolmen.app.layout";
"menhir.contenttype.photoalbum" -> "dolmen.app.viewselector";
"menhir.contenttype.photoalbum" -> "dolmen.content";
"menhir.contenttype.photoalbum" -> "dolmen.menu";
"menhir.contenttype.photoalbum" -> fanstatic;
"menhir.contenttype.photoalbum" -> "grokcore.component";
"menhir.contenttype.photoalbum" -> "menhir.contenttype.image";
"menhir.contenttype.photoalbum" -> "zope.component";
"menhir.contenttype.photoalbum" -> "zope.container";
"menhir.contenttype.photoalbum" -> "zope.i18n";
"menhir.contenttype.photoalbum" -> "zope.i18nmessageid";
"menhir.contenttype.photoalbum" -> "zope.interface";
"menhir.contenttype.photoalbum" -> "zope.intid";
merengue -> beautifulsoup;
merengue -> cssutils;
merengue -> django;
merengue -> "django-classy-tags";
merengue -> "django-compressor";
merengue -> "django-debug-toolbar";
merengue -> "django-extensions";
merengue -> "django-mptt";
merengue -> "django-pagination";
merengue -> "django-tagging";
merengue -> feedparser;
merengue -> pil;
merengue -> "python-twitter";
merengue -> "sorl-thumbnail";
merengue -> south;
messytables -> chardet;
messytables -> html5lib;
messytables -> lxml;
messytables -> "python-dateutil";
messytables -> "python-magic";
messytables -> requests;
messytables -> xlrd;
metaopt -> bumpversion;
metaopt -> coverage;
metaopt -> coveralls;
metaopt -> distribute;
metaopt -> flake8;
metaopt -> matplotlib;
metaopt -> mock;
metaopt -> nose;
metaopt -> numpy;
metaopt -> ordereddict;
metaopt -> "pep8-naming";
metaopt -> "scikit-learn";
metaopt -> scipy;
metaopt -> sphinx;
metaopt -> tox;
metaopt -> wheel;
metarace -> pygtk;
metarace -> xlwt;
metaseq -> biopython;
metaseq -> cython;
metaseq -> matplotlib;
metaseq -> numpy;
metaseq -> pandas;
metaseq -> pybedtools;
metaseq -> pysam;
metaseq -> pyyaml;
metaseq -> "scikit-learn";
metaseq -> scipy;
mETL -> gdata;
mETL -> nltk;
mETL -> "python-dateutil";
mETL -> pyyaml;
mETL -> sqlalchemy;
mETL -> xlrd;
mETL -> xlwt;
metrohash -> coverage;
metrohash -> cython;
metrohash -> distribute;
metrohash -> ipdb;
metrohash -> ipython;
metrohash -> mock;
metrohash -> nose;
metrohash -> nosexcover;
metrohash -> pytest;
metrohash -> virtualenv;
metrohash -> wheel;
meza -> beautifulsoup4;
meza -> chardet;
meza -> coverage;
meza -> distribute;
meza -> docutils;
meza -> flake8;
meza -> future;
meza -> mccabe;
meza -> nose;
meza -> numpy;
meza -> pandas;
meza -> pep8;
meza -> pkutils;
meza -> pyflakes;
meza -> pygments;
meza -> pylint;
meza -> "python-dateutil";
meza -> "python-slugify";
meza -> pyyaml;
meza -> requests;
meza -> responses;
meza -> six;
meza -> tox;
meza -> twine;
meza -> virtualenv;
meza -> wheel;
meza -> wrapt;
meza -> xlrd;
mgmtsystem -> boto;
mgmtsystem -> coveralls;
mgmtsystem -> lxml;
mgmtsystem -> pytest;
mgmtsystem -> "pytest-cov";
mgmtsystem -> "python-cinderclient";
mgmtsystem -> "python-heatclient";
mgmtsystem -> "python-keystoneclient";
mgmtsystem -> "python-novaclient";
mgmtsystem -> requests;
mgmtsystem -> suds;
mgmtsystem -> tzlocal;
MicroPipe -> numpy;
MicroPipe -> pandas;
MicroPipe -> pillow;
MicroPipe -> poster;
MicroPipe -> redis;
MicroPipe -> requests;
MicroPipe -> sqlalchemy;
"micropython-email.internal" -> "micropython-email.utils";
"micropython-email.internal" -> "micropython-re-pcre";
"micropython-email.utils" -> "micropython-os";
"micropython-email.utils" -> "micropython-re-pcre";
mirage -> "github3.py";
mirage -> ipdb;
mirage -> ipython;
mirage -> mock;
mirage -> py;
mirage -> pytest;
mirage -> requests;
mirage -> six;
mirage -> terminaltables;
Misago -> django;
Misago -> "django-debug-toolbar";
Misago -> "django-haystack";
Misago -> "django-mptt";
Misago -> jinja2;
Misago -> markdown;
Misago -> "path.py";
Misago -> pillow;
Misago -> pytz;
Misago -> south;
Misago -> unidecode;
Misago -> whoosh;
"mission-control2" -> celery;
"mission-control2" -> "dj-database-url";
"mission-control2" -> django;
"mission-control2" -> "django-compressor";
"mission-control2" -> "django-debug-toolbar";
"mission-control2" -> "django-grappelli";
"mission-control2" -> "django-nose";
"mission-control2" -> "django-polymorphic";
"mission-control2" -> "elastic-git";
"mission-control2" -> flake8;
"mission-control2" -> "google-api-python-client";
"mission-control2" -> gunicorn;
"mission-control2" -> httplib2;
"mission-control2" -> nose;
"mission-control2" -> pep8;
"mission-control2" -> psycopg2;
"mission-control2" -> pycountry;
"mission-control2" -> pyflakes;
"mission-control2" -> pytest;
"mission-control2" -> "pytest-cov";
"mission-control2" -> "pytest-django";
"mission-control2" -> "pytest-xdist";
"mission-control2" -> "python-memcached";
"mission-control2" -> "python-social-auth";
"mission-control2" -> raven;
"mission-control2" -> redis;
"mission-control2" -> responses;
"mission-control2" -> "unicore-cms";
"mission-control2" -> uwsgi;
mixer -> django;
mixer -> "fake-factory";
mixer -> "flask-sqlalchemy";
mixer -> mongoengine;
mixer -> peewee;
mixer -> pytest;
mixer -> sqlalchemy;
mltsp -> "scikit-learn";
mltsp -> beautifulsoup4;
mltsp -> celery;
mltsp -> colorlog;
mltsp -> "docker-py";
mltsp -> flask;
mltsp -> matplotlib;
mltsp -> nose;
mltsp -> "nose-exclude";
mltsp -> numpy;
mltsp -> pandas;
mltsp -> psutil;
mltsp -> pyyaml;
mltsp -> requests;
mltsp -> rethinkdb;
mltsp -> scipy;
mltsp -> simplejson;
mltsp -> toolz;
mltsp -> waitress;
mneme -> flask;
mneme -> "flask-script";
mneme -> "flask-wtf";
mneme -> gunicorn;
mneme -> itsdangerous;
mneme -> jinja2;
mneme -> markupsafe;
mneme -> mongoengine;
mneme -> pymongo;
mneme -> werkzeug;
mneme -> wsgiref;
mneme -> wtforms;
mock -> pbr;
mock -> six;
modoboa -> argparse;
modoboa -> "dj-database-url";
modoboa -> django;
modoboa -> "django-reversion";
modoboa -> djangorestframework;
modoboa -> "factory-boy";
modoboa -> passlib;
modoboa -> progressbar;
modoboa -> pycrypto;
modoboa -> requests;
molecule -> colorama;
molecule -> docopt;
molecule -> flake8;
molecule -> jinja2;
molecule -> mock;
molecule -> paramiko;
molecule -> pbr;
molecule -> pexpect;
molecule -> prettytable;
molecule -> pyyaml;
molecule -> sh;
molecule -> sphinx;
molecule -> "sphinx-bootstrap-theme";
molecule -> testrepository;
molecule -> testtools;
molecule -> tox;
molecule -> wheel;
molly -> celery;
molly -> django;
molly -> "django-celery";
molly -> "django-pipeline";
molly -> feedparser;
molly -> icalendar;
molly -> lxml;
molly -> oauth;
molly -> pil;
molly -> psycopg2;
molly -> "python-dateutil";
molly -> "python-ldap";
molly -> "python-levenshtein";
molly -> pyyaml;
molly -> rdflib;
molly -> simplejson;
molly -> south;
molly -> suds;
"molo.core" -> certifi;
"molo.core" -> "dj-database-url";
"molo.core" -> django;
"molo.core" -> "django-mptt";
"molo.core" -> flake8;
"molo.core" -> markdown;
"molo.core" -> pytest;
"molo.core" -> "pytest-cov";
"molo.core" -> "pytest-django";
"molo.core" -> "pytest-xdist";
"molo.core" -> raven;
"molo.core" -> wagtail;
"monasca-agent" -> flake8;
"monasca-agent" -> hacking;
"monasca-agent" -> httplib2;
"monasca-agent" -> mock;
"monasca-agent" -> netaddr;
"monasca-agent" -> nose;
"monasca-agent" -> "oslo.concurrency";
"monasca-agent" -> "oslo.config";
"monasca-agent" -> "oslo.i18n";
"monasca-agent" -> "oslo.log";
"monasca-agent" -> "oslo.middleware";
"monasca-agent" -> "oslo.serialization";
"monasca-agent" -> "oslo.utils";
"monasca-agent" -> pymongo;
"monasca-agent" -> "python-memcached";
"monasca-agent" -> "python-monascaclient";
"monasca-agent" -> pyyaml;
"monasca-agent" -> redis;
"monasca-agent" -> requests;
"monasca-agent" -> simplejson;
"monasca-agent" -> supervisor;
"monasca-agent" -> tornado;
"monasca-api" -> babel;
"monasca-api" -> coverage;
"monasca-api" -> discover;
"monasca-api" -> eventlet;
"monasca-api" -> falcon;
"monasca-api" -> fixtures;
"monasca-api" -> flake8;
"monasca-api" -> funcsigs;
"monasca-api" -> gunicorn;
"monasca-api" -> hacking;
"monasca-api" -> httplib2;
"monasca-api" -> influxdb;
"monasca-api" -> "kafka-python";
"monasca-api" -> keystonemiddleware;
"monasca-api" -> mock;
"monasca-api" -> "monasca-common";
"monasca-api" -> mox;
"monasca-api" -> nose;
"monasca-api" -> "oslo.config";
"monasca-api" -> "oslo.log";
"monasca-api" -> "oslo.middleware";
"monasca-api" -> "oslo.serialization";
"monasca-api" -> "oslo.utils";
"monasca-api" -> oslosphinx;
"monasca-api" -> oslotest;
"monasca-api" -> pastedeploy;
"monasca-api" -> pbr;
"monasca-api" -> pep8;
"monasca-api" -> pyparsing;
"monasca-api" -> "python-dateutil";
"monasca-api" -> "python-keystoneclient";
"monasca-api" -> "python-subunit";
"monasca-api" -> simplejson;
"monasca-api" -> six;
"monasca-api" -> sphinx;
"monasca-api" -> "sphinxcontrib-httpdomain";
"monasca-api" -> "sphinxcontrib-pecanwsme";
"monasca-api" -> testrepository;
"monasca-api" -> testscenarios;
"monasca-api" -> testtools;
"monasca-api" -> ujson;
"monasca-api" -> voluptuous;
"monasca-common" -> babel;
"monasca-common" -> coverage;
"monasca-common" -> discover;
"monasca-common" -> fixtures;
"monasca-common" -> flake8;
"monasca-common" -> hacking;
"monasca-common" -> httplib2;
"monasca-common" -> iso8601;
"monasca-common" -> "kafka-python";
"monasca-common" -> kazoo;
"monasca-common" -> mock;
"monasca-common" -> mox;
"monasca-common" -> nose;
"monasca-common" -> "oslo.config";
"monasca-common" -> oslosphinx;
"monasca-common" -> oslotest;
"monasca-common" -> pbr;
"monasca-common" -> pep8;
"monasca-common" -> pymysql;
"monasca-common" -> "python-subunit";
"monasca-common" -> six;
"monasca-common" -> sphinx;
"monasca-common" -> "sphinxcontrib-httpdomain";
"monasca-common" -> "sphinxcontrib-pecanwsme";
"monasca-common" -> testrepository;
"monasca-common" -> testscenarios;
"monasca-common" -> testtools;
"monasca-common" -> ujson;
"monasca-events-api" -> babel;
"monasca-events-api" -> coverage;
"monasca-events-api" -> discover;
"monasca-events-api" -> eventlet;
"monasca-events-api" -> falcon;
"monasca-events-api" -> fixtures;
"monasca-events-api" -> flake8;
"monasca-events-api" -> greenlet;
"monasca-events-api" -> gunicorn;
"monasca-events-api" -> hacking;
"monasca-events-api" -> httplib2;
"monasca-events-api" -> "kafka-python";
"monasca-events-api" -> keystonemiddleware;
"monasca-events-api" -> mock;
"monasca-events-api" -> mox;
"monasca-events-api" -> "mysql-python";
"monasca-events-api" -> nose;
"monasca-events-api" -> "oslo.config";
"monasca-events-api" -> "oslo.log";
"monasca-events-api" -> "oslo.middleware";
"monasca-events-api" -> "oslo.serialization";
"monasca-events-api" -> "oslo.utils";
"monasca-events-api" -> oslosphinx;
"monasca-events-api" -> oslotest;
"monasca-events-api" -> pastedeploy;
"monasca-events-api" -> pbr;
"monasca-events-api" -> pep8;
"monasca-events-api" -> pyparsing;
"monasca-events-api" -> "python-dateutil";
"monasca-events-api" -> "python-subunit";
"monasca-events-api" -> requests;
"monasca-events-api" -> six;
"monasca-events-api" -> sphinx;
"monasca-events-api" -> "sphinxcontrib-httpdomain";
"monasca-events-api" -> "sphinxcontrib-pecanwsme";
"monasca-events-api" -> testrepository;
"monasca-events-api" -> testscenarios;
"monasca-events-api" -> testtools;
"monasca-events-api" -> ujson;
"monasca-events-api" -> voluptuous;
"monasca-events-engine" -> babel;
"monasca-events-engine" -> coverage;
"monasca-events-engine" -> discover;
"monasca-events-engine" -> fixtures;
"monasca-events-engine" -> flake8;
"monasca-events-engine" -> hacking;
"monasca-events-engine" -> httplib2;
"monasca-events-engine" -> iso8601;
"monasca-events-engine" -> "kafka-python";
"monasca-events-engine" -> mock;
"monasca-events-engine" -> mox;
"monasca-events-engine" -> "mysql-python";
"monasca-events-engine" -> nose;
"monasca-events-engine" -> "oslo.config";
"monasca-events-engine" -> "oslo.log";
"monasca-events-engine" -> "oslo.utils";
"monasca-events-engine" -> oslosphinx;
"monasca-events-engine" -> oslotest;
"monasca-events-engine" -> pbr;
"monasca-events-engine" -> pep8;
"monasca-events-engine" -> "python-subunit";
"monasca-events-engine" -> pyyaml;
"monasca-events-engine" -> sphinx;
"monasca-events-engine" -> "sphinxcontrib-httpdomain";
"monasca-events-engine" -> "sphinxcontrib-pecanwsme";
"monasca-events-engine" -> testrepository;
"monasca-events-engine" -> testscenarios;
"monasca-events-engine" -> testtools;
"monasca-events-engine" -> winchester;
"monasca-notification" -> funcsigs;
"monasca-notification" -> hacking;
"monasca-notification" -> "kafka-python";
"monasca-notification" -> kazoo;
"monasca-notification" -> mock;
"monasca-notification" -> "monasca-common";
"monasca-notification" -> nose;
"monasca-notification" -> nosexcover;
"monasca-notification" -> pbr;
"monasca-notification" -> pyflakes;
"monasca-notification" -> pyyaml;
"monasca-notification" -> requests;
"monasca-notification" -> six;
"monasca-notification" -> sqlalchemy;
"monasca-persister" -> babel;
"monasca-persister" -> "cassandra-driver";
"monasca-persister" -> eventlet;
"monasca-persister" -> hacking;
"monasca-persister" -> influxdb;
"monasca-persister" -> iso8601;
"monasca-persister" -> mock;
"monasca-persister" -> "monasca-common";
"monasca-persister" -> nose;
"monasca-persister" -> "oslo.config";
"monasca-persister" -> "oslo.log";
"monasca-persister" -> "oslo.service";
"monasca-persister" -> six;
"monasca-ui" -> cffi;
"monasca-ui" -> coverage;
"monasca-ui" -> django;
"monasca-ui" -> "django-nose";
"monasca-ui" -> funcsigs;
"monasca-ui" -> hacking;
"monasca-ui" -> mock;
"monasca-ui" -> mox3;
"monasca-ui" -> nose;
"monasca-ui" -> "nose-exclude";
"monasca-ui" -> nosexcover;
"monasca-ui" -> "openstack.nose-plugin";
"monasca-ui" -> "oslo.i18n";
"monasca-ui" -> "oslo.serialization";
"monasca-ui" -> "oslo.utils";
"monasca-ui" -> oslosphinx;
"monasca-ui" -> "python-monascaclient";
"monasca-ui" -> selenium;
"monasca-ui" -> sphinx;
"monitoring-for-openstack" -> discover;
"monitoring-for-openstack" -> psutil;
"monitoring-for-openstack" -> "python-ceilometerclient";
"monitoring-for-openstack" -> "python-cinderclient";
"monitoring-for-openstack" -> "python-glanceclient";
"monitoring-for-openstack" -> "python-keystoneclient";
"monitoring-for-openstack" -> "python-neutronclient";
"monitoring-for-openstack" -> "python-novaclient";
"monitoring-for-openstack" -> six;
"monitoring-for-openstack" -> sphinx;
"monitoring-for-openstack" -> testrepository;
"monitoring-plugin" -> coverage;
"monitoring-plugin" -> django;
"monitoring-plugin" -> "django-compressor";
"monitoring-plugin" -> "django-nose";
"monitoring-plugin" -> docutils;
"monitoring-plugin" -> eventlet;
"monitoring-plugin" -> hacking;
"monitoring-plugin" -> iso8601;
"monitoring-plugin" -> kombu;
"monitoring-plugin" -> lockfile;
"monitoring-plugin" -> mock;
"monitoring-plugin" -> mox;
"monitoring-plugin" -> netaddr;
"monitoring-plugin" -> nose;
"monitoring-plugin" -> "nose-exclude";
"monitoring-plugin" -> nosexcover;
"monitoring-plugin" -> "openstack.nose-plugin";
"monitoring-plugin" -> oslosphinx;
"monitoring-plugin" -> pbr;
"monitoring-plugin" -> pytz;
"monitoring-plugin" -> selenium;
"monitoring-plugin" -> sphinx;
Mopidy -> "check-manifest";
Mopidy -> flake8;
Mopidy -> invoke;
Mopidy -> mock;
Mopidy -> pygraphviz;
Mopidy -> pytest;
Mopidy -> "pytest-capturelog";
Mopidy -> "pytest-cov";
Mopidy -> "pytest-xdist";
Mopidy -> responses;
Mopidy -> sphinx;
Mopidy -> tox;
Mopidy -> twine;
Mopidy -> wheel;
morepath -> distribute;
morepath -> webob;
moto -> boto;
moto -> flask;
moto -> httpretty;
moto -> jinja2;
moto -> requests;
moto -> six;
moto -> werkzeug;
moto -> xmltodict;
motor -> "-";
motor -> requirements;
mox3 -> coverage;
mox3 -> discover;
mox3 -> fixtures;
mox3 -> flake8;
mox3 -> oslosphinx;
mox3 -> pbr;
mox3 -> pep8;
mox3 -> pyflakes;
mox3 -> "python-subunit";
mox3 -> six;
mox3 -> sphinx;
mox3 -> testrepository;
mox3 -> testtools;
moya -> babel;
moya -> beautifulsoup4;
moya -> bleach;
moya -> colorama;
moya -> fs;
moya -> iso8601;
moya -> lxml;
moya -> passlib;
moya -> pillow;
moya -> polib;
moya -> pygments;
moya -> pymysql;
moya -> pyparsing;
moya -> pytz;
moya -> requests;
moya -> sqlalchemy;
moya -> watchdog;
moya -> webob;
mozdef_client -> boto3;
mozdef_client -> botocore;
mozdef_client -> docutils;
mozdef_client -> futures;
mozdef_client -> jmespath;
mozdef_client -> "python-dateutil";
mozdef_client -> pytz;
mozdef_client -> requests;
mozdef_client -> "requests-futures";
mozdef_client -> six;
mozdef_client -> wheel;
mozdevice -> mozlog;
mozlog -> blessings;
mozrunner -> mozdevice;
mozrunner -> mozinfo;
mozrunner -> mozlog;
mozsvc -> gevent;
mozsvc -> gunicorn;
mozsvc -> pyramid;
mozsvc -> "pyramid-debugtoolbar";
mozsvc -> simplejson;
mozsvc -> unittest2;
mozsvc -> webtest;
mpcontribs -> flask;
mpcontribs -> ipython;
mpcontribs -> matplotlib;
mpcontribs -> numpy;
mpcontribs -> pandas;
mpcontribs -> pymongo;
mpcontribs -> pyyaml;
mpcontribs -> six;
mrq -> argparse;
mrq -> flask;
mrq -> gevent;
mrq -> hiredis;
mrq -> mistune;
mrq -> psutil;
mrq -> pylint;
mrq -> pymongo;
mrq -> pytest;
mrq -> "pytest-cov";
mrq -> redis;
mrq -> requests;
mrq -> subprocess32;
mrq -> supervisor;
mrq -> termcolor;
mrq -> ujson;
mrq -> uwsgi;
mrwolfe -> chardet;
mrwolfe -> django;
mrwolfe -> "django-compressor";
mrwolfe -> "django-haystack";
mrwolfe -> html2text;
mrwolfe -> markdown;
mrwolfe -> whoosh;
multigtfs -> "check-manifest";
multigtfs -> coverage;
multigtfs -> django;
multigtfs -> "django-nose";
multigtfs -> flake8;
multigtfs -> ipdb;
multigtfs -> ipython;
multigtfs -> jinja2;
multigtfs -> jsonfield;
multigtfs -> markupsafe;
multigtfs -> nose;
multigtfs -> py;
multigtfs -> pygments;
multigtfs -> pyroma;
multigtfs -> south;
multigtfs -> sphinx;
multigtfs -> tox;
multigtfs -> virtualenv;
multigtfs -> wheel;
"murano-common" -> anyjson;
"murano-common" -> coverage;
"murano-common" -> discover;
"murano-common" -> eventlet;
"murano-common" -> fixtures;
"murano-common" -> flake8;
"murano-common" -> hacking;
"murano-common" -> keyring;
"murano-common" -> mock;
"murano-common" -> nose;
"murano-common" -> pbr;
"murano-common" -> pep8;
"murano-common" -> pyflakes;
"murano-common" -> sphinx;
"murano-common" -> testrepository;
"murano-common" -> testtools;
"murano-common" -> unittest2;
"murano-metadataclient" -> anyjson;
"murano-metadataclient" -> argparse;
"murano-metadataclient" -> babel;
"murano-metadataclient" -> httplib2;
"murano-metadataclient" -> httpretty;
"murano-metadataclient" -> iso8601;
"murano-metadataclient" -> mock;
"murano-metadataclient" -> mox;
"murano-metadataclient" -> nose;
"murano-metadataclient" -> "nose-exclude";
"murano-metadataclient" -> nosexcover;
"murano-metadataclient" -> "openstack.nose-plugin";
"murano-metadataclient" -> pbr;
"murano-metadataclient" -> pep8;
"murano-metadataclient" -> prettytable;
"murano-metadataclient" -> pyopenssl;
"murano-metadataclient" -> "python-keystoneclient";
"murano-metadataclient" -> six;
"murano-metadataclient" -> sphinx;
"murano-metadataclient" -> unittest2;
"murano-repository" -> babel;
"murano-repository" -> docutils;
"murano-repository" -> eventlet;
"murano-repository" -> fixtures;
"murano-repository" -> flake8;
"murano-repository" -> flask;
"murano-repository" -> "flask-testing";
"murano-repository" -> iso8601;
"murano-repository" -> kombu;
"murano-repository" -> mock;
"murano-repository" -> "oslo.config";
"murano-repository" -> pbr;
"murano-repository" -> pep8;
"murano-repository" -> pyflakes;
"murano-repository" -> pylint;
"murano-repository" -> "python-keystoneclient";
"murano-repository" -> pyyaml;
"murano-repository" -> unittest2;
my_beacon_manager -> "backports.ssl-match-hostname";
my_beacon_manager -> certifi;
my_beacon_manager -> "check-manifest";
my_beacon_manager -> coverage;
my_beacon_manager -> coveralls;
my_beacon_manager -> cssselect;
my_beacon_manager -> docopt;
my_beacon_manager -> flake8;
my_beacon_manager -> flask;
my_beacon_manager -> "google-api-python-client";
my_beacon_manager -> httplib2;
my_beacon_manager -> itsdangerous;
my_beacon_manager -> jinja2;
my_beacon_manager -> lxml;
my_beacon_manager -> markupsafe;
my_beacon_manager -> mccabe;
my_beacon_manager -> nose;
my_beacon_manager -> oauth2client;
my_beacon_manager -> pep8;
my_beacon_manager -> pluggy;
my_beacon_manager -> py;
my_beacon_manager -> pyasn1;
my_beacon_manager -> "pyasn1-modules";
my_beacon_manager -> pyflakes;
my_beacon_manager -> "python-dateutil";
my_beacon_manager -> "python-mimeparse";
my_beacon_manager -> requests;
my_beacon_manager -> rsa;
my_beacon_manager -> simplejson;
my_beacon_manager -> six;
my_beacon_manager -> tornado;
my_beacon_manager -> tox;
my_beacon_manager -> uritemplate;
my_beacon_manager -> urllib3;
my_beacon_manager -> virtualenv;
my_beacon_manager -> werkzeug;
my_beacon_manager -> wheel;
nagios_graphite -> colorama;
nagios_graphite -> docutils;
nagios_graphite -> flake8;
nagios_graphite -> jinja2;
nagios_graphite -> markupsafe;
nagios_graphite -> mccabe;
nagios_graphite -> mock;
nagios_graphite -> paver;
nagios_graphite -> pep8;
nagios_graphite -> py;
nagios_graphite -> pyflakes;
nagios_graphite -> pygments;
nagios_graphite -> pytest;
nagios_graphite -> "pytest-cov";
nagios_graphite -> requests;
nagios_graphite -> responses;
nagios_graphite -> sphinx;
nap -> colorama;
nap -> "cov-core";
nap -> coverage;
nap -> docopt;
nap -> egtest;
nap -> flake8;
nap -> mccabe;
nap -> mock;
nap -> pep8;
nap -> py;
nap -> pyflakes;
nap -> pytest;
nap -> "pytest-cov";
nap -> requests;
nap -> six;
nap -> tox;
nap -> virtualenv;
nap -> wheel;
ncryptify -> beaker;
ncryptify -> bottle;
ncryptify -> cryptography;
ncryptify -> jinja2;
ncryptify -> pyjwt;
ncryptify -> "python-slugify";
ncryptify -> requests;
ncryptify -> uuid;
nefertari -> blinker;
nefertari -> elasticsearch;
nefertari -> pyramid;
nefertari -> requests;
nefertari -> simplejson;
nefertari -> six;
nefertari -> tempita;
nefertari -> "zope.dottedname";
nefertari_sqla -> elasticsearch;
nefertari_sqla -> mongoengine;
nefertari_sqla -> nefertari;
nefertari_sqla -> psycopg2;
nefertari_sqla -> pymongo;
nefertari_sqla -> "pyramid-tm";
nefertari_sqla -> "python-dateutil";
nefertari_sqla -> six;
nefertari_sqla -> sqlalchemy;
nefertari_sqla -> "sqlalchemy-utils";
nefertari_sqla -> "zope.dottedname";
nengo -> importlib;
nengo -> ipython;
nengo -> jinja2;
nengo -> matplotlib;
nengo -> numpy;
nengo -> numpydoc;
nengo -> ordereddict;
nengo -> pygments;
nengo -> pytest;
nengo -> "pytest-xdist";
nengo -> scipy;
nengo -> sphinx;
nengo -> "sphinx-rtd-theme";
netcdf -> coveralls;
netcdf -> flake8;
netcdf -> h5py;
netcdf -> ipdb;
netcdf -> ipython;
netcdf -> isort;
netcdf -> netcdf4;
netcdf -> numpy;
netcdf -> pep8;
netcdf -> progressbar;
netcdf -> pyandoc;
netcdf -> pyflakes;
netcdf -> "vim-debug";
netman -> "fake-switches";
netman -> flask;
netman -> flexmock;
netman -> futures;
netman -> gunicorn;
netman -> mock;
netman -> netaddr;
netman -> nose;
netman -> paramiko;
netman -> pyhamcrest;
netman -> requests;
netman -> sphinx;
netman -> "sphinxcontrib-httpdomain";
"networking-ale-omniswitch" -> babel;
"networking-ale-omniswitch" -> coverage;
"networking-ale-omniswitch" -> discover;
"networking-ale-omniswitch" -> eventlet;
"networking-ale-omniswitch" -> hacking;
"networking-ale-omniswitch" -> mock;
"networking-ale-omniswitch" -> "oslo.config";
"networking-ale-omniswitch" -> oslosphinx;
"networking-ale-omniswitch" -> oslotest;
"networking-ale-omniswitch" -> pbr;
"networking-ale-omniswitch" -> "python-subunit";
"networking-ale-omniswitch" -> sphinx;
"networking-ale-omniswitch" -> testrepository;
"networking-ale-omniswitch" -> testscenarios;
"networking-ale-omniswitch" -> testtools;
networking_arista -> babel;
networking_arista -> coverage;
networking_arista -> hacking;
networking_arista -> jsonrpclib;
networking_arista -> mock;
networking_arista -> neutron;
networking_arista -> "oslo.log";
networking_arista -> oslosphinx;
networking_arista -> oslotest;
networking_arista -> pbr;
networking_arista -> "python-subunit";
networking_arista -> sphinx;
networking_arista -> testrepository;
networking_arista -> testscenarios;
networking_arista -> testtools;
"networking-bgpvpn" -> babel;
"networking-bgpvpn" -> coverage;
"networking-bgpvpn" -> discover;
"networking-bgpvpn" -> hacking;
"networking-bgpvpn" -> "networking-odl";
"networking-bgpvpn" -> "oslo.config";
"networking-bgpvpn" -> "oslo.db";
"networking-bgpvpn" -> "oslo.log";
"networking-bgpvpn" -> "oslo.utils";
"networking-bgpvpn" -> oslosphinx;
"networking-bgpvpn" -> oslotest;
"networking-bgpvpn" -> pbr;
"networking-bgpvpn" -> "python-neutronclient";
"networking-bgpvpn" -> "python-subunit";
"networking-bgpvpn" -> sphinx;
"networking-bgpvpn" -> testrepository;
"networking-bgpvpn" -> testscenarios;
"networking-bgpvpn" -> testtools;
"networking-bgpvpn" -> webob;
"networking-bgpvpn" -> webtest;
"networking-brocade" -> alembic;
"networking-brocade" -> cliff;
"networking-brocade" -> coverage;
"networking-brocade" -> discover;
"networking-brocade" -> eventlet;
"networking-brocade" -> fixtures;
"networking-brocade" -> hacking;
"networking-brocade" -> httplib2;
"networking-brocade" -> mock;
"networking-brocade" -> netaddr;
"networking-brocade" -> "oslo.concurrency";
"networking-brocade" -> "oslo.config";
"networking-brocade" -> "oslo.db";
"networking-brocade" -> "oslo.messaging";
"networking-brocade" -> "oslo.serialization";
"networking-brocade" -> "oslo.utils";
"networking-brocade" -> oslosphinx;
"networking-brocade" -> oslotest;
"networking-brocade" -> pbr;
"networking-brocade" -> "python-subunit";
"networking-brocade" -> "requests-mock";
"networking-brocade" -> six;
"networking-brocade" -> sphinx;
"networking-brocade" -> sqlalchemy;
"networking-brocade" -> testrepository;
"networking-brocade" -> testscenarios;
"networking-brocade" -> testtools;
"networking-brocade" -> webob;
"networking-brocade" -> webtest;
"networking-calico" -> babel;
"networking-calico" -> coverage;
"networking-calico" -> hacking;
"networking-calico" -> oslosphinx;
"networking-calico" -> oslotest;
"networking-calico" -> pbr;
"networking-calico" -> "python-subunit";
"networking-calico" -> sphinx;
"networking-calico" -> testrepository;
"networking-calico" -> testscenarios;
"networking-calico" -> testtools;
"networking-cisco" -> babel;
"networking-cisco" -> coverage;
"networking-cisco" -> discover;
"networking-cisco" -> hacking;
"networking-cisco" -> lxml;
"networking-cisco" -> mock;
"networking-cisco" -> "os-testr";
"networking-cisco" -> oslosphinx;
"networking-cisco" -> oslotest;
"networking-cisco" -> pbr;
"networking-cisco" -> pymysql;
"networking-cisco" -> "python-subunit";
"networking-cisco" -> "requests-mock";
"networking-cisco" -> sphinx;
"networking-cisco" -> "tempest-lib";
"networking-cisco" -> testresources;
"networking-cisco" -> testscenarios;
"networking-cisco" -> testtools;
"networking-cisco" -> webtest;
"networking-fortinet" -> coverage;
"networking-fortinet" -> discover;
"networking-fortinet" -> hacking;
"networking-fortinet" -> jinja2;
"networking-fortinet" -> mock;
"networking-fortinet" -> netifaces;
"networking-fortinet" -> oslosphinx;
"networking-fortinet" -> pbr;
"networking-fortinet" -> "python-subunit";
"networking-fortinet" -> sphinx;
"networking-fortinet" -> testrepository;
"networking-fortinet" -> testtools;
"networking-fortinet" -> urllib3;
"networking-fujitsu" -> babel;
"networking-fujitsu" -> coverage;
"networking-fujitsu" -> discover;
"networking-fujitsu" -> hacking;
"networking-fujitsu" -> oslosphinx;
"networking-fujitsu" -> oslotest;
"networking-fujitsu" -> pbr;
"networking-fujitsu" -> "python-subunit";
"networking-fujitsu" -> sphinx;
"networking-fujitsu" -> testrepository;
"networking-fujitsu" -> testscenarios;
"networking-fujitsu" -> testtools;
"networking-fujitsu" -> webtest;
"networking-hyperv" -> babel;
"networking-hyperv" -> coverage;
"networking-hyperv" -> discover;
"networking-hyperv" -> eventlet;
"networking-hyperv" -> fixtures;
"networking-hyperv" -> hacking;
"networking-hyperv" -> mock;
"networking-hyperv" -> "oslo.config";
"networking-hyperv" -> "oslo.i18n";
"networking-hyperv" -> "oslo.log";
"networking-hyperv" -> "oslo.serialization";
"networking-hyperv" -> "oslo.utils";
"networking-hyperv" -> oslosphinx;
"networking-hyperv" -> oslotest;
"networking-hyperv" -> pbr;
"networking-hyperv" -> "python-subunit";
"networking-hyperv" -> sphinx;
"networking-hyperv" -> testrepository;
"networking-hyperv" -> testscenarios;
"networking-hyperv" -> testtools;
"networking-infoblox" -> babel;
"networking-infoblox" -> coverage;
"networking-infoblox" -> discover;
"networking-infoblox" -> hacking;
"networking-infoblox" -> oslosphinx;
"networking-infoblox" -> oslotest;
"networking-infoblox" -> "python-subunit";
"networking-infoblox" -> sphinx;
"networking-infoblox" -> testrepository;
"networking-infoblox" -> testscenarios;
"networking-infoblox" -> testtools;
"networking-l2gw" -> babel;
"networking-l2gw" -> coverage;
"networking-l2gw" -> discover;
"networking-l2gw" -> hacking;
"networking-l2gw" -> oslosphinx;
"networking-l2gw" -> oslotest;
"networking-l2gw" -> pbr;
"networking-l2gw" -> "python-neutronclient";
"networking-l2gw" -> "python-subunit";
"networking-l2gw" -> sphinx;
"networking-l2gw" -> "tempest-lib";
"networking-l2gw" -> testrepository;
"networking-l2gw" -> testscenarios;
"networking-l2gw" -> testtools;
"networking-midonet" -> babel;
"networking-midonet" -> cliff;
"networking-midonet" -> coverage;
"networking-midonet" -> discover;
"networking-midonet" -> fixtures;
"networking-midonet" -> hacking;
"networking-midonet" -> mock;
"networking-midonet" -> neutron;
"networking-midonet" -> ordereddict;
"networking-midonet" -> "oslo.config";
"networking-midonet" -> "oslo.i18n";
"networking-midonet" -> "oslo.log";
"networking-midonet" -> "oslo.serialization";
"networking-midonet" -> "oslo.utils";
"networking-midonet" -> oslosphinx;
"networking-midonet" -> pbr;
"networking-midonet" -> "python-subunit";
"networking-midonet" -> sphinx;
"networking-midonet" -> testrepository;
"networking-midonet" -> testtools;
"networking-midonet" -> webtest;
"networking-nec" -> astroid;
"networking-nec" -> babel;
"networking-nec" -> coverage;
"networking-nec" -> discover;
"networking-nec" -> eventlet;
"networking-nec" -> fixtures;
"networking-nec" -> hacking;
"networking-nec" -> mock;
"networking-nec" -> netaddr;
"networking-nec" -> "oslo.config";
"networking-nec" -> "oslo.i18n";
"networking-nec" -> "oslo.log";
"networking-nec" -> "oslo.messaging";
"networking-nec" -> "oslo.serialization";
"networking-nec" -> "oslo.service";
"networking-nec" -> "oslo.utils";
"networking-nec" -> oslosphinx;
"networking-nec" -> oslotest;
"networking-nec" -> pbr;
"networking-nec" -> pylint;
"networking-nec" -> "python-subunit";
"networking-nec" -> requests;
"networking-nec" -> "requests-mock";
"networking-nec" -> six;
"networking-nec" -> sphinx;
"networking-nec" -> sqlalchemy;
"networking-nec" -> "tempest-lib";
"networking-nec" -> testrepository;
"networking-nec" -> testscenarios;
"networking-nec" -> testtools;
"networking-nec" -> webob;
"networking-nec" -> webtest;
"networking-odl" -> babel;
"networking-odl" -> coverage;
"networking-odl" -> discover;
"networking-odl" -> hacking;
"networking-odl" -> oslosphinx;
"networking-odl" -> oslotest;
"networking-odl" -> pbr;
"networking-odl" -> "python-subunit";
"networking-odl" -> sphinx;
"networking-odl" -> testrepository;
"networking-odl" -> testscenarios;
"networking-odl" -> testtools;
"networking-odl" -> webtest;
"networking-ofagent" -> babel;
"networking-ofagent" -> coverage;
"networking-ofagent" -> hacking;
"networking-ofagent" -> mock;
"networking-ofagent" -> "oslo.config";
"networking-ofagent" -> "oslo.i18n";
"networking-ofagent" -> "oslo.log";
"networking-ofagent" -> "oslo.messaging";
"networking-ofagent" -> "oslo.service";
"networking-ofagent" -> "oslo.utils";
"networking-ofagent" -> oslosphinx;
"networking-ofagent" -> oslotest;
"networking-ofagent" -> pbr;
"networking-ofagent" -> "python-subunit";
"networking-ofagent" -> "requests-mock";
"networking-ofagent" -> six;
"networking-ofagent" -> sphinx;
"networking-ofagent" -> stevedore;
"networking-ofagent" -> "tempest-lib";
"networking-ofagent" -> testtools;
"networking-onos" -> babel;
"networking-onos" -> coverage;
"networking-onos" -> hacking;
"networking-onos" -> neutron;
"networking-onos" -> oslosphinx;
"networking-onos" -> oslotest;
"networking-onos" -> pbr;
"networking-onos" -> "python-subunit";
"networking-onos" -> sphinx;
"networking-onos" -> testrepository;
"networking-onos" -> testscenarios;
"networking-onos" -> testtools;
"networking-onos" -> webtest;
"networking-ovs-dpdk" -> babel;
"networking-ovs-dpdk" -> coverage;
"networking-ovs-dpdk" -> discover;
"networking-ovs-dpdk" -> flake8;
"networking-ovs-dpdk" -> hacking;
"networking-ovs-dpdk" -> netaddr;
"networking-ovs-dpdk" -> neutron;
"networking-ovs-dpdk" -> oslosphinx;
"networking-ovs-dpdk" -> oslotest;
"networking-ovs-dpdk" -> pbr;
"networking-ovs-dpdk" -> "python-subunit";
"networking-ovs-dpdk" -> six;
"networking-ovs-dpdk" -> sphinx;
"networking-ovs-dpdk" -> "tempest-lib";
"networking-ovs-dpdk" -> testrepository;
"networking-ovs-dpdk" -> testscenarios;
"networking-ovs-dpdk" -> testtools;
networking_plumgrid -> babel;
networking_plumgrid -> cliff;
networking_plumgrid -> coverage;
networking_plumgrid -> fixtures;
networking_plumgrid -> hacking;
networking_plumgrid -> mock;
networking_plumgrid -> mox3;
networking_plumgrid -> neutron;
networking_plumgrid -> ordereddict;
networking_plumgrid -> "os-testr";
networking_plumgrid -> oslosphinx;
networking_plumgrid -> oslotest;
networking_plumgrid -> pbr;
networking_plumgrid -> "python-neutronclient";
networking_plumgrid -> "python-subunit";
networking_plumgrid -> sphinx;
networking_plumgrid -> "tempest-lib";
networking_plumgrid -> testrepository;
networking_plumgrid -> testtools;
networking_plumgrid -> webtest;
"networking-powervm" -> coverage;
"networking-powervm" -> discover;
"networking-powervm" -> eventlet;
"networking-powervm" -> fixtures;
"networking-powervm" -> greenlet;
"networking-powervm" -> hacking;
"networking-powervm" -> mock;
"networking-powervm" -> "oslo.config";
"networking-powervm" -> "oslo.log";
"networking-powervm" -> "oslo.serialization";
"networking-powervm" -> "oslo.service";
"networking-powervm" -> "oslo.utils";
"networking-powervm" -> oslosphinx;
"networking-powervm" -> oslotest;
"networking-powervm" -> pbr;
"networking-powervm" -> "python-subunit";
"networking-powervm" -> routes;
"networking-powervm" -> six;
"networking-powervm" -> sphinx;
"networking-powervm" -> testrepository;
"networking-powervm" -> testscenarios;
"networking-powervm" -> testtools;
"networking-sfc" -> alembic;
"networking-sfc" -> cliff;
"networking-sfc" -> coverage;
"networking-sfc" -> ddt;
"networking-sfc" -> debtcollector;
"networking-sfc" -> eventlet;
"networking-sfc" -> fixtures;
"networking-sfc" -> greenlet;
"networking-sfc" -> hacking;
"networking-sfc" -> httplib2;
"networking-sfc" -> jinja2;
"networking-sfc" -> keystonemiddleware;
"networking-sfc" -> mock;
"networking-sfc" -> netaddr;
"networking-sfc" -> "os-testr";
"networking-sfc" -> "oslo.concurrency";
"networking-sfc" -> "oslo.config";
"networking-sfc" -> "oslo.context";
"networking-sfc" -> "oslo.db";
"networking-sfc" -> "oslo.i18n";
"networking-sfc" -> "oslo.log";
"networking-sfc" -> "oslo.messaging";
"networking-sfc" -> "oslo.middleware";
"networking-sfc" -> "oslo.policy";
"networking-sfc" -> "oslo.rootwrap";
"networking-sfc" -> "oslo.serialization";
"networking-sfc" -> "oslo.service";
"networking-sfc" -> "oslo.utils";
"networking-sfc" -> "oslo.versionedobjects";
"networking-sfc" -> oslosphinx;
"networking-sfc" -> oslotest;
"networking-sfc" -> paste;
"networking-sfc" -> pastedeploy;
"networking-sfc" -> pbr;
"networking-sfc" -> pecan;
"networking-sfc" -> pylint;
"networking-sfc" -> "python-keystoneclient";
"networking-sfc" -> "python-neutronclient";
"networking-sfc" -> "python-novaclient";
"networking-sfc" -> "python-subunit";
"networking-sfc" -> requests;
"networking-sfc" -> "requests-mock";
"networking-sfc" -> retrying;
"networking-sfc" -> six;
"networking-sfc" -> sphinx;
"networking-sfc" -> sqlalchemy;
"networking-sfc" -> stevedore;
"networking-sfc" -> "tempest-lib";
"networking-sfc" -> testrepository;
"networking-sfc" -> testscenarios;
"networking-sfc" -> testtools;
"networking-sfc" -> webob;
"networking-sfc" -> webtest;
"networking-vsphere" -> babel;
"networking-vsphere" -> coverage;
"networking-vsphere" -> hacking;
"networking-vsphere" -> mock;
"networking-vsphere" -> "oslo.vmware";
"networking-vsphere" -> oslosphinx;
"networking-vsphere" -> oslotest;
"networking-vsphere" -> pbr;
"networking-vsphere" -> "python-subunit";
"networking-vsphere" -> sphinx;
"networking-vsphere" -> testrepository;
"networking-vsphere" -> testresources;
"networking-vsphere" -> testscenarios;
"networking-vsphere" -> testtools;
networkx -> ipython;
networkx -> matplotlib;
networkx -> numpy;
networkx -> pandas;
networkx -> "sphinx-rtd-theme";
networkx -> "sphinxcontrib-bibtex";
neurom -> astroid;
neurom -> coverage;
neurom -> enum34;
neurom -> mock;
neurom -> nose;
neurom -> nosexcover;
neurom -> pep8;
neurom -> pylint;
neurom -> pyyaml;
neurom -> sphinx;
neurom -> "sphinx-rtd-theme";
neurom -> "sphinxcontrib-napoleon";
neuronvisio -> alabaster;
neuronvisio -> argparse;
neuronvisio -> babel;
neuronvisio -> docutils;
neuronvisio -> jinja2;
neuronvisio -> markupsafe;
neuronvisio -> pygments;
neuronvisio -> pytz;
neuronvisio -> six;
neuronvisio -> snowballstemmer;
neuronvisio -> sphinx;
neuronvisio -> "sphinx-rtd-theme";
neuronvisio -> wsgiref;
"neutron-lib" -> babel;
"neutron-lib" -> coverage;
"neutron-lib" -> discover;
"neutron-lib" -> hacking;
"neutron-lib" -> "os-testr";
"neutron-lib" -> "oslo.i18n";
"neutron-lib" -> "oslo.log";
"neutron-lib" -> "oslo.utils";
"neutron-lib" -> oslosphinx;
"neutron-lib" -> oslotest;
"neutron-lib" -> pbr;
"neutron-lib" -> "python-subunit";
"neutron-lib" -> sphinx;
"neutron-lib" -> testrepository;
"neutron-lib" -> testscenarios;
"neutron-lib" -> testtools;
"neutron-ml2-driver-apic" -> cliff;
"neutron-ml2-driver-apic" -> coverage;
"neutron-ml2-driver-apic" -> discover;
"neutron-ml2-driver-apic" -> fixtures;
"neutron-ml2-driver-apic" -> hacking;
"neutron-ml2-driver-apic" -> mock;
"neutron-ml2-driver-apic" -> neutron;
"neutron-ml2-driver-apic" -> ordereddict;
"neutron-ml2-driver-apic" -> "oslo.concurrency";
"neutron-ml2-driver-apic" -> oslosphinx;
"neutron-ml2-driver-apic" -> pyopenssl;
"neutron-ml2-driver-apic" -> "python-subunit";
"neutron-ml2-driver-apic" -> "requests-mock";
"neutron-ml2-driver-apic" -> sphinx;
"neutron-ml2-driver-apic" -> testrepository;
"neutron-ml2-driver-apic" -> testtools;
"neutron-ml2-driver-apic" -> webtest;
newslynx -> alembic;
newslynx -> beautifulsoup4;
newslynx -> click;
newslynx -> colorlog;
newslynx -> decorator;
newslynx -> docopt;
newslynx -> flask;
newslynx -> "flask-migrate";
newslynx -> "flask-script";
newslynx -> "flask-sqlalchemy";
newslynx -> functools32;
newslynx -> gevent;
newslynx -> gitpython;
newslynx -> "google-api-python-client";
newslynx -> googleanalytics;
newslynx -> greenlet;
newslynx -> gunicorn;
newslynx -> hiredis;
newslynx -> httplib2;
newslynx -> iso8601;
newslynx -> itsdangerous;
newslynx -> jinja2;
newslynx -> jsonschema;
newslynx -> keyring;
newslynx -> lxml;
newslynx -> mako;
newslynx -> markupsafe;
newslynx -> nose;
newslynx -> numpy;
newslynx -> oauth2client;
newslynx -> pillow;
newslynx -> prettytable;
newslynx -> psycopg2;
newslynx -> pyasn1;
newslynx -> "pyasn1-modules";
newslynx -> pyparsing;
newslynx -> "python-dateutil";
newslynx -> pytz;
newslynx -> pyyaml;
newslynx -> rauth;
newslynx -> redis;
newslynx -> requests;
newslynx -> "requests-toolbelt";
newslynx -> rq;
newslynx -> rsa;
newslynx -> simplejson;
newslynx -> six;
newslynx -> sqlalchemy;
newslynx -> "sqlalchemy-utils";
newslynx -> tldextract;
newslynx -> unidecode;
newslynx -> uritemplate;
newslynx -> werkzeug;
newslynx -> wsgiref;
newspaper -> beautifulsoup4;
newspaper -> cssselect;
newspaper -> feedparser;
newspaper -> lxml;
newspaper -> nltk;
newspaper -> pillow;
newspaper -> "python-dateutil";
newspaper -> pyyaml;
newspaper -> requests;
newspaper -> six;
newspaper -> tldextract;
newspaper3k -> beautifulsoup4;
newspaper3k -> cssselect;
newspaper3k -> feedparser;
newspaper3k -> lxml;
newspaper3k -> nltk;
newspaper3k -> pillow;
newspaper3k -> "python-dateutil";
newspaper3k -> pyyaml;
newspaper3k -> requests;
newspaper3k -> six;
newspaper3k -> tldextract;
nibabel -> numpy;
nidaba -> beautifulsoup4;
nidaba -> celery;
nidaba -> click;
nidaba -> flask;
nidaba -> "flask-restful";
nidaba -> gunicorn;
nidaba -> lxml;
nidaba -> numpy;
nidaba -> pillow;
nidaba -> pyyaml;
nidaba -> redis;
nidaba -> regex;
nidaba -> "requests-toolbelt";
nidaba -> stevedore;
"nidaba-client" -> beautifulsoup4;
"nidaba-client" -> celery;
"nidaba-client" -> click;
"nidaba-client" -> flask;
"nidaba-client" -> "flask-restful";
"nidaba-client" -> gunicorn;
"nidaba-client" -> lxml;
"nidaba-client" -> numpy;
"nidaba-client" -> pillow;
"nidaba-client" -> pyyaml;
"nidaba-client" -> redis;
"nidaba-client" -> regex;
"nidaba-client" -> "requests-toolbelt";
"nidaba-client" -> stevedore;
Nikola -> blinker;
Nikola -> colorama;
Nikola -> coverage;
Nikola -> distribute;
Nikola -> docutils;
Nikola -> doit;
Nikola -> freezegun;
Nikola -> jinja2;
Nikola -> logbook;
Nikola -> lxml;
Nikola -> mako;
Nikola -> markdown;
Nikola -> mock;
Nikola -> natsort;
Nikola -> notebook;
Nikola -> pillow;
Nikola -> pygal;
Nikola -> pygments;
Nikola -> pytest;
Nikola -> "pytest-cov";
Nikola -> "python-coveralls";
Nikola -> "python-dateutil";
Nikola -> requests;
Nikola -> unidecode;
Nikola -> watchdog;
Nikola -> webassets;
Nikola -> ws4py;
noaaclass -> beautifulsoup4;
noaaclass -> coveralls;
noaaclass -> futures;
noaaclass -> ipdb;
noaaclass -> ipython;
noaaclass -> isort;
noaaclass -> pytz;
noaaclass -> requests;
noaaclass -> urllib3;
noaaclass -> "vim-debug";
noaadem -> coveralls;
noaadem -> flake8;
noaadem -> ipdb;
noaadem -> ipython;
noaadem -> isort;
noaadem -> netcdf;
noaadem -> numpy;
noaadem -> pep8;
noaadem -> pyflakes;
noaadem -> "vim-debug";
node -> distribute;
node -> "zope.component";
node -> "zope.deprecation";
node -> "zope.lifecycleevent";
nodepool -> apscheduler;
nodepool -> coverage;
nodepool -> discover;
nodepool -> "diskimage-builder";
nodepool -> fixtures;
nodepool -> gear;
nodepool -> hacking;
nodepool -> mock;
nodepool -> "os-client-config";
nodepool -> paramiko;
nodepool -> pbr;
nodepool -> prettytable;
nodepool -> pymysql;
nodepool -> "python-daemon";
nodepool -> "python-glanceclient";
nodepool -> "python-jenkins";
nodepool -> "python-keystoneclient";
nodepool -> "python-novaclient";
nodepool -> "python-subunit";
nodepool -> pyyaml;
nodepool -> pyzmq;
nodepool -> shade;
nodepool -> six;
nodepool -> sphinx;
nodepool -> "sphinxcontrib-programoutput";
nodepool -> sqlalchemy;
nodepool -> statsd;
nodepool -> testrepository;
nodepool -> testresources;
nodepool -> testscenarios;
nodepool -> testtools;
nodepool -> voluptuous;
nomadic -> click;
nomadic -> colorama;
nomadic -> flask;
nomadic -> jinja2;
nomadic -> lxml;
nomadic -> pdfminer;
nomadic -> "python-daemon";
nomadic -> pyyaml;
nomadic -> watchdog;
nomadic -> whoosh;
nonobvious -> coverage;
nonobvious -> coveralls;
nonobvious -> ipython;
nonobvious -> mock;
nonobvious -> nose;
nonobvious -> paver;
nonobvious -> pinocchio;
nonobvious -> pytz;
nonobvious -> tox;
nose -> sphinx;
nose2 -> argparse;
nose2 -> "cov-core";
nose2 -> six;
nose2 -> sphinx;
nose2 -> unittest2;
notebook -> ipython;
notebook -> jinja2;
notebook -> "sphinx-rtd-theme";
notebook -> tornado;
notebook -> traitlets;
"nova-lxd" -> babel;
"nova-lxd" -> coverage;
"nova-lxd" -> ddt;
"nova-lxd" -> discover;
"nova-lxd" -> hacking;
"nova-lxd" -> "os-testr";
"nova-lxd" -> "oslo.concurrency";
"nova-lxd" -> "oslo.config";
"nova-lxd" -> "oslo.i18n";
"nova-lxd" -> "oslo.log";
"nova-lxd" -> "oslo.utils";
"nova-lxd" -> oslosphinx;
"nova-lxd" -> oslotest;
"nova-lxd" -> pbr;
"nova-lxd" -> pylxd;
"nova-lxd" -> "python-subunit";
"nova-lxd" -> requests;
"nova-lxd" -> sphinx;
"nova-lxd" -> testrepository;
"nova-lxd" -> testscenarios;
"nova-lxd" -> testtools;
"nova-powervm" -> babel;
"nova-powervm" -> coverage;
"nova-powervm" -> discover;
"nova-powervm" -> fixtures;
"nova-powervm" -> hacking;
"nova-powervm" -> mock;
"nova-powervm" -> mox;
"nova-powervm" -> "oslo.config";
"nova-powervm" -> "oslo.log";
"nova-powervm" -> "oslo.serialization";
"nova-powervm" -> "oslo.utils";
"nova-powervm" -> oslosphinx;
"nova-powervm" -> oslotest;
"nova-powervm" -> pbr;
"nova-powervm" -> "python-subunit";
"nova-powervm" -> six;
"nova-powervm" -> sphinx;
"nova-powervm" -> taskflow;
"nova-powervm" -> testrepository;
"nova-powervm" -> testscenarios;
"nova-powervm" -> testtools;
nsot -> argh;
nsot -> "backports.ssl-match-hostname";
nsot -> certifi;
nsot -> cffi;
nsot -> cryptography;
nsot -> django;
nsot -> "django-extensions";
nsot -> "django-filter";
nsot -> djangorestframework;
nsot -> docutils;
nsot -> enum34;
nsot -> gevent;
nsot -> greenlet;
nsot -> gunicorn;
nsot -> ipaddress;
nsot -> ipython;
nsot -> jinja2;
nsot -> livereload;
nsot -> markupsafe;
nsot -> netaddr;
nsot -> pathtools;
nsot -> py;
nsot -> pyasn1;
nsot -> pycparser;
nsot -> pygments;
nsot -> pytest;
nsot -> "pytest-django";
nsot -> pyyaml;
nsot -> requests;
nsot -> six;
nsot -> sphinx;
nsot -> "sphinx-autobuild";
nsot -> "sphinx-rtd-theme";
nsot -> tornado;
nsot -> watchdog;
ntorque -> alembic;
ntorque -> coverage;
ntorque -> gevent;
ntorque -> gunicorn;
ntorque -> mock;
ntorque -> nose;
ntorque -> "nose-exclude";
ntorque -> psycopg2;
ntorque -> pyramid;
ntorque -> "pyramid-tm";
ntorque -> redis;
ntorque -> requests;
ntorque -> sqlalchemy;
ntorque -> webtest;
ntorque -> "zope.sqlalchemy";
numexpr -> numpy;
nupic -> coverage;
nupic -> mock;
nupic -> numpy;
nupic -> ordereddict;
nupic -> prettytable;
nupic -> psutil;
nupic -> pymysql;
nupic -> pyproj;
nupic -> pytest;
nupic -> "pytest-cov";
nupic -> "pytest-xdist";
nupic -> "python-dateutil";
nupic -> pyyaml;
nupic -> unittest2;
nupic -> validictory;
"nva.stormcontainer" -> distribute;
"nva.stormcontainer" -> pysqlite;
"nva.stormcontainer" -> storm;
"nva.stormcontainer" -> zodb3;
"nva.stormcontainer" -> "zope.app.component";
"nva.stormcontainer" -> "zope.app.container";
"nva.stormcontainer" -> "zope.app.testing";
"nva.stormcontainer" -> "zope.component";
"nva.stormcontainer" -> "zope.interface";
"nva.stormcontainer" -> "zope.schema";
o2w_cms -> cssmin;
o2w_cms -> django;
o2w_cms -> "django-annoying";
o2w_cms -> "django-debug-toolbar";
o2w_cms -> "django-extensions";
o2w_cms -> "django-modeltranslation";
o2w_cms -> "django-pipeline";
o2w_cms -> "easy-thumbnails";
o2w_cms -> raven;
o2w_cms -> slimit;
o2w_cms -> south;
o2w_web -> cssmin;
o2w_web -> django;
o2w_web -> "django-annoying";
o2w_web -> "django-extensions";
o2w_web -> "django-grappelli";
o2w_web -> "django-modeltranslation";
o2w_web -> "django-pipeline";
o2w_web -> "easy-thumbnails";
o2w_web -> raven;
o2w_web -> slimit;
object_storage -> babel;
object_storage -> boto3;
object_storage -> botocore;
object_storage -> docutils;
object_storage -> futures;
object_storage -> iso8601;
object_storage -> jmespath;
object_storage -> keyring;
object_storage -> mock;
object_storage -> nose;
object_storage -> pbr;
object_storage -> prettytable;
object_storage -> pyrax;
object_storage -> "python-dateutil";
object_storage -> "python-novaclient";
object_storage -> pytz;
object_storage -> requests;
object_storage -> simplejson;
object_storage -> six;
object_storage -> wsgiref;
octavia -> babel;
octavia -> bashate;
octavia -> blockdiag;
octavia -> doc8;
octavia -> docutils;
octavia -> oslosphinx;
octavia -> pygments;
octavia -> pyyaml;
octavia -> six;
octavia -> sphinx;
octogrid -> decorator;
octogrid -> docopt;
octogrid -> "github3.py";
octogrid -> ipython;
octogrid -> octogrid;
octogrid -> "path.py";
octogrid -> pexpect;
octogrid -> pytz;
octogrid -> requests;
octogrid -> simplegeneric;
octogrid -> six;
octogrid -> traitlets;
octogrid -> wheel;
odo -> boto;
odo -> h5py;
odo -> networkx;
odo -> numpy;
odo -> pandas;
odo -> paramiko;
odo -> pymongo;
odo -> sqlalchemy;
odo -> toolz;
oe_utils -> flake8;
oe_utils -> mccabe;
oe_utils -> mock;
oe_utils -> pep8;
oe_utils -> psycopg2;
oe_utils -> py;
oe_utils -> pyflakes;
oe_utils -> pyramid;
oe_utils -> "pyramid-debugtoolbar";
oe_utils -> pytest;
oe_utils -> "pytest-cov";
oe_utils -> requests;
oe_utils -> responses;
oe_utils -> sphinx;
oe_utils -> "sphinxcontrib-httpdomain";
oe_utils -> sqlalchemy;
oe_utils -> transaction;
oe_utils -> waitress;
oe_utils -> webtest;
oe_utils -> "zope.sqlalchemy";
ofcourse -> click;
ofcourse -> coverage;
ofcourse -> dulwich;
ofcourse -> feedparser;
ofcourse -> flask;
ofcourse -> mako;
ofcourse -> nose;
ofcourse -> pep8;
ofcourse -> pyyaml;
ofcourse -> six;
ofcourse -> tornado;
ofcourse -> tox;
oiopy -> cliff;
oiopy -> coverage;
oiopy -> eventlet;
oiopy -> flake8;
oiopy -> mock;
oiopy -> nose;
oiopy -> requests;
oiopy -> testtools;
olhoneles -> beautifulsoup;
olhoneles -> chardet;
olhoneles -> derpconf;
olhoneles -> django;
olhoneles -> "easy-thumbnails";
olhoneles -> pandas;
olhoneles -> pillow;
olhoneles -> raven;
olhoneles -> requests;
olhoneles -> south;
omitempty -> alabaster;
omitempty -> babel;
omitempty -> coverage;
omitempty -> docutils;
omitempty -> jinja2;
omitempty -> markupsafe;
omitempty -> pep8;
omitempty -> pluggy;
omitempty -> py;
omitempty -> pygments;
omitempty -> pytz;
omitempty -> six;
omitempty -> snowballstemmer;
omitempty -> sphinx;
omitempty -> "sphinx-rtd-theme";
omitempty -> tox;
omitempty -> virtualenv;
"onegov.election_day" -> alembic;
"onegov.election_day" -> argh;
"onegov.election_day" -> arrow;
"onegov.election_day" -> babel;
"onegov.election_day" -> bcrypt;
"onegov.election_day" -> beautifulsoup4;
"onegov.election_day" -> bleach;
"onegov.election_day" -> blinker;
"onegov.election_day" -> "cached-property";
"onegov.election_day" -> certifi;
"onegov.election_day" -> cffi;
"onegov.election_day" -> chameleon;
"onegov.election_day" -> click;
"onegov.election_day" -> coverage;
"onegov.election_day" -> cssmin;
"onegov.election_day" -> cssselect;
"onegov.election_day" -> decorator;
"onegov.election_day" -> "dogpile.cache";
"onegov.election_day" -> elasticsearch;
"onegov.election_day" -> fs;
"onegov.election_day" -> html2text;
"onegov.election_day" -> html5lib;
"onegov.election_day" -> humanize;
"onegov.election_day" -> isodate;
"onegov.election_day" -> itsdangerous;
"onegov.election_day" -> jsonpickle;
"onegov.election_day" -> "lazy-object-proxy";
"onegov.election_day" -> lxml;
"onegov.election_day" -> mako;
"onegov.election_day" -> markupsafe;
"onegov.election_day" -> morepath;
"onegov.election_day" -> networkx;
"onegov.election_day" -> passlib;
"onegov.election_day" -> pathtools;
"onegov.election_day" -> pillow;
"onegov.election_day" -> polib;
"onegov.election_day" -> psycopg2;
"onegov.election_day" -> py;
"onegov.election_day" -> pycparser;
"onegov.election_day" -> pycurl;
"onegov.election_day" -> pyexecjs;
"onegov.election_day" -> pyparsing;
"onegov.election_day" -> pyquery;
"onegov.election_day" -> pyscss;
"onegov.election_day" -> pytest;
"onegov.election_day" -> "python-dateutil";
"onegov.election_day" -> "python-magic";
"onegov.election_day" -> "python-memcached";
"onegov.election_day" -> pytz;
"onegov.election_day" -> pyyaml;
"onegov.election_day" -> "repoze.lru";
"onegov.election_day" -> requests;
"onegov.election_day" -> six;
"onegov.election_day" -> sqlalchemy;
"onegov.election_day" -> "sqlalchemy-utils";
"onegov.election_day" -> sqlparse;
"onegov.election_day" -> transaction;
"onegov.election_day" -> translationstring;
"onegov.election_day" -> unidecode;
"onegov.election_day" -> urllib3;
"onegov.election_day" -> waitress;
"onegov.election_day" -> watchdog;
"onegov.election_day" -> webassets;
"onegov.election_day" -> webob;
"onegov.election_day" -> webtest;
"onegov.election_day" -> wheel;
"onegov.election_day" -> wtforms;
"onegov.election_day" -> xlrd;
"onegov.election_day" -> xlsxwriter;
"onegov.election_day" -> "zope.interface";
"onegov.election_day" -> "zope.sqlalchemy";
"onegov.municipality" -> distribute;
"onegov.municipality" -> "ftw.file";
"onegov.municipality" -> "ftw.lawgiver";
"onegov.municipality" -> "ftw.upgrade";
"onegov.municipality" -> plone;
"onegov.municipality" -> "plone.api";
"onegov.municipality" -> "products.ploneformgen";
"onegov.municipality" -> "seantis.dir.base";
"onegov.onboarding" -> alembic;
"onegov.onboarding" -> argh;
"onegov.onboarding" -> arrow;
"onegov.onboarding" -> babel;
"onegov.onboarding" -> bcrypt;
"onegov.onboarding" -> beautifulsoup4;
"onegov.onboarding" -> bleach;
"onegov.onboarding" -> blinker;
"onegov.onboarding" -> "cached-property";
"onegov.onboarding" -> certifi;
"onegov.onboarding" -> cffi;
"onegov.onboarding" -> chameleon;
"onegov.onboarding" -> click;
"onegov.onboarding" -> coverage;
"onegov.onboarding" -> cssmin;
"onegov.onboarding" -> cssselect;
"onegov.onboarding" -> decorator;
"onegov.onboarding" -> "dogpile.cache";
"onegov.onboarding" -> elasticsearch;
"onegov.onboarding" -> fs;
"onegov.onboarding" -> html2text;
"onegov.onboarding" -> html5lib;
"onegov.onboarding" -> humanize;
"onegov.onboarding" -> icalendar;
"onegov.onboarding" -> isodate;
"onegov.onboarding" -> itsdangerous;
"onegov.onboarding" -> jsonpickle;
"onegov.onboarding" -> "lazy-object-proxy";
"onegov.onboarding" -> lxml;
"onegov.onboarding" -> mako;
"onegov.onboarding" -> markupsafe;
"onegov.onboarding" -> mistune;
"onegov.onboarding" -> morepath;
"onegov.onboarding" -> networkx;
"onegov.onboarding" -> "onegov.onboarding";
"onegov.onboarding" -> "onegov.town";
"onegov.onboarding" -> passlib;
"onegov.onboarding" -> pathtools;
"onegov.onboarding" -> pillow;
"onegov.onboarding" -> polib;
"onegov.onboarding" -> psycopg2;
"onegov.onboarding" -> py;
"onegov.onboarding" -> pycparser;
"onegov.onboarding" -> pycurl;
"onegov.onboarding" -> pyexecjs;
"onegov.onboarding" -> pyparsing;
"onegov.onboarding" -> pyquery;
"onegov.onboarding" -> pyscss;
"onegov.onboarding" -> pytest;
"onegov.onboarding" -> "python-dateutil";
"onegov.onboarding" -> "python-magic";
"onegov.onboarding" -> "python-memcached";
"onegov.onboarding" -> pytz;
"onegov.onboarding" -> pyyaml;
"onegov.onboarding" -> "repoze.lru";
"onegov.onboarding" -> requests;
"onegov.onboarding" -> six;
"onegov.onboarding" -> sqlalchemy;
"onegov.onboarding" -> "sqlalchemy-utils";
"onegov.onboarding" -> sqlparse;
"onegov.onboarding" -> transaction;
"onegov.onboarding" -> translationstring;
"onegov.onboarding" -> unidecode;
"onegov.onboarding" -> urllib3;
"onegov.onboarding" -> waitress;
"onegov.onboarding" -> watchdog;
"onegov.onboarding" -> webassets;
"onegov.onboarding" -> webob;
"onegov.onboarding" -> webtest;
"onegov.onboarding" -> werkzeug;
"onegov.onboarding" -> wheel;
"onegov.onboarding" -> wtforms;
"onegov.onboarding" -> xlrd;
"onegov.onboarding" -> xlsxwriter;
"onegov.onboarding" -> "zope.interface";
"onegov.onboarding" -> "zope.sqlalchemy";
"onegov.town" -> alembic;
"onegov.town" -> argh;
"onegov.town" -> arrow;
"onegov.town" -> babel;
"onegov.town" -> bcrypt;
"onegov.town" -> beautifulsoup4;
"onegov.town" -> bleach;
"onegov.town" -> blinker;
"onegov.town" -> "cached-property";
"onegov.town" -> certifi;
"onegov.town" -> cffi;
"onegov.town" -> chameleon;
"onegov.town" -> click;
"onegov.town" -> coverage;
"onegov.town" -> cssmin;
"onegov.town" -> cssselect;
"onegov.town" -> decorator;
"onegov.town" -> "dogpile.cache";
"onegov.town" -> elasticsearch;
"onegov.town" -> freezegun;
"onegov.town" -> fs;
"onegov.town" -> html2text;
"onegov.town" -> html5lib;
"onegov.town" -> humanize;
"onegov.town" -> icalendar;
"onegov.town" -> isodate;
"onegov.town" -> itsdangerous;
"onegov.town" -> jsonpickle;
"onegov.town" -> "lazy-object-proxy";
"onegov.town" -> lxml;
"onegov.town" -> mako;
"onegov.town" -> markupsafe;
"onegov.town" -> mistune;
"onegov.town" -> morepath;
"onegov.town" -> networkx;
"onegov.town" -> "onegov.town";
"onegov.town" -> passlib;
"onegov.town" -> pathtools;
"onegov.town" -> pillow;
"onegov.town" -> polib;
"onegov.town" -> psycopg2;
"onegov.town" -> py;
"onegov.town" -> pycparser;
"onegov.town" -> pycurl;
"onegov.town" -> pyexecjs;
"onegov.town" -> pyparsing;
"onegov.town" -> pyquery;
"onegov.town" -> pyscss;
"onegov.town" -> pytest;
"onegov.town" -> "python-dateutil";
"onegov.town" -> "python-magic";
"onegov.town" -> "python-memcached";
"onegov.town" -> pytz;
"onegov.town" -> pyyaml;
"onegov.town" -> "repoze.lru";
"onegov.town" -> requests;
"onegov.town" -> six;
"onegov.town" -> sqlalchemy;
"onegov.town" -> "sqlalchemy-utils";
"onegov.town" -> sqlparse;
"onegov.town" -> transaction;
"onegov.town" -> translationstring;
"onegov.town" -> unidecode;
"onegov.town" -> urllib3;
"onegov.town" -> waitress;
"onegov.town" -> watchdog;
"onegov.town" -> webassets;
"onegov.town" -> webob;
"onegov.town" -> webtest;
"onegov.town" -> werkzeug;
"onegov.town" -> wheel;
"onegov.town" -> wtforms;
"onegov.town" -> xlrd;
"onegov.town" -> xlsxwriter;
"onegov.town" -> "zope.interface";
"onegov.town" -> "zope.sqlalchemy";
ongeza -> coverage;
ongeza -> flake8;
ongeza -> future;
ongeza -> mccabe;
ongeza -> nose;
ongeza -> pep8;
ongeza -> pkutils;
ongeza -> pyflakes;
ongeza -> pygogo;
ongeza -> pylint;
ongeza -> tox;
ongeza -> twine;
ongeza -> virtualenv;
ongeza -> wheel;
ooi -> coverage;
ooi -> discover;
ooi -> fixtures;
ooi -> hacking;
ooi -> mock;
ooi -> "oslo.config";
ooi -> "oslo.log";
ooi -> pbr;
ooi -> "python-subunit";
ooi -> routes;
ooi -> sphinx;
ooi -> testrepository;
ooi -> testscenarios;
ooi -> testtools;
ooi -> webob;
oonibackend -> ipaddr;
oonibackend -> pygeoip;
oonibackend -> pyopenssl;
oonibackend -> pysqlite;
oonibackend -> pyyaml;
oonibackend -> "service-identity";
oonibackend -> transaction;
oonibackend -> twisted;
oonibackend -> txtorcon;
oonibackend -> "zope.component";
oonibackend -> "zope.event";
oonibackend -> "zope.interface";
ooniprobe -> cryptography;
ooniprobe -> ipaddr;
ooniprobe -> pyasn1;
ooniprobe -> "pyasn1-modules";
ooniprobe -> pyopenssl;
ooniprobe -> pyyaml;
ooniprobe -> "service-identity";
ooniprobe -> twisted;
ooniprobe -> txtorcon;
ooniprobe -> "zope.interface";
openbiblio -> genshi;
openbiblio -> "python-openid";
openbiblio -> rdflib;
openbiblio -> "repoze.who";
"opencanary-correlator" -> cffi;
"opencanary-correlator" -> docopt;
"opencanary-correlator" -> httplib2;
"opencanary-correlator" -> pycparser;
"opencanary-correlator" -> pytz;
"opencanary-correlator" -> redis;
"opencanary-correlator" -> requests;
"opencanary-correlator" -> simplejson;
"opencanary-correlator" -> six;
"opencanary-correlator" -> twilio;
"opencanary-correlator" -> twisted;
"opencanary-correlator" -> wheel;
"opencanary-correlator" -> "zope.interface";
opengrid -> coverage;
opengrid -> geopy;
opengrid -> jsonpickle;
opengrid -> matplotlib;
opengrid -> numpy;
opengrid -> oauth2client;
opengrid -> pandas;
opengrid -> pint;
opengrid -> "python-coveralls";
opengrid -> requests;
opengrid -> "requests-futures";
opengrid -> scipy;
"open-helpdesk" -> coverage;
"open-helpdesk" -> coveralls;
"open-helpdesk" -> cssselect;
"open-helpdesk" -> django;
"open-helpdesk" -> "django-braces";
"open-helpdesk" -> "django-debug-toolbar";
"open-helpdesk" -> "django-model-utils";
"open-helpdesk" -> "factory-boy";
"open-helpdesk" -> flake8;
"open-helpdesk" -> lxml;
"open-helpdesk" -> mezzanine;
"open-helpdesk" -> mock;
"open-helpdesk" -> psycopg2;
"open-helpdesk" -> pytest;
"open-helpdesk" -> "pytest-cov";
"open-helpdesk" -> "pytest-django";
"open-helpdesk" -> selenium;
"open-helpdesk" -> south;
"open-helpdesk" -> webtest;
"open-helpdesk" -> wheel;
openre -> appdirs;
openre -> argparse;
openre -> decorator;
openre -> docutils;
openre -> jinja2;
openre -> lockfile;
openre -> markupsafe;
openre -> numpy;
openre -> py;
openre -> pytest;
openre -> "python-daemon";
openre -> pyzmq;
openre -> six;
openre -> wsgiref;
OpenREM -> argparse;
OpenREM -> celery;
OpenREM -> django;
OpenREM -> "django-crispy-forms";
OpenREM -> "django-filter";
OpenREM -> "django-pagination";
OpenREM -> humanize;
OpenREM -> "python-dateutil";
OpenREM -> pytz;
OpenREM -> xlsxwriter;
openross -> boto;
openross -> pyopenssl;
openross -> raven;
openross -> twisted;
openross -> ujson;
openross -> "zope.interface";
openslides -> argparse;
openslides -> beautifulsoup4;
openslides -> bleach;
openslides -> distribute;
openslides -> django;
openslides -> "django-haystack";
openslides -> "django-mptt";
openslides -> jsonfield;
openslides -> natsort;
openslides -> reportlab;
openslides -> tornado;
openslides -> whoosh;
"openstack-doc-tools" -> babel;
"openstack-doc-tools" -> bashate;
"openstack-doc-tools" -> doc8;
"openstack-doc-tools" -> hacking;
"openstack-doc-tools" -> iso8601;
"openstack-doc-tools" -> lxml;
"openstack-doc-tools" -> "oslo.config";
"openstack-doc-tools" -> oslosphinx;
"openstack-doc-tools" -> pbr;
"openstack-doc-tools" -> pylint;
"openstack-doc-tools" -> pyyaml;
"openstack-doc-tools" -> reno;
"openstack-doc-tools" -> sphinx;
openstacksdk -> "python-subunit";
openstacksdk -> testrepository;
openstacksdk -> fixtures;
openstacksdk -> testscenarios;
openstacksdk -> coverage;
openstacksdk -> discover;
openstacksdk -> hacking;
openstacksdk -> iso8601;
openstacksdk -> keystoneauth1;
openstacksdk -> mock;
openstacksdk -> "os-client-config";
openstacksdk -> "os-testr";
openstacksdk -> "oslo.utils";
openstacksdk -> pbr;
openstacksdk -> requests;
openstacksdk -> "requests-mock";
openstacksdk -> six;
openstacksdk -> sphinx;
openstacksdk -> stevedore;
openstacksdk -> testtools;
"openstacksdk-plugin" -> babel;
"openstacksdk-plugin" -> coverage;
"openstacksdk-plugin" -> discover;
"openstacksdk-plugin" -> hacking;
"openstacksdk-plugin" -> oslosphinx;
"openstacksdk-plugin" -> oslotest;
"openstacksdk-plugin" -> pbr;
"openstacksdk-plugin" -> "python-openstacksdk";
"openstacksdk-plugin" -> "python-subunit";
"openstacksdk-plugin" -> sphinx;
"openstacksdk-plugin" -> testrepository;
"openstacksdk-plugin" -> testscenarios;
"openstacksdk-plugin" -> testtools;
opps -> django;
opps -> "django-appconf";
opps -> "django-celery";
opps -> "django-endless-pagination";
opps -> "django-grappelli";
opps -> "django-haystack";
opps -> "django-mptt";
opps -> "django-polymorphic";
opps -> feedparser;
opps -> mimeparse;
opps -> pillow;
opps -> redis;
opps -> south;
"os-apply-config" -> anyjson;
"os-apply-config" -> argparse;
"os-apply-config" -> coverage;
"os-apply-config" -> discover;
"os-apply-config" -> fixtures;
"os-apply-config" -> hacking;
"os-apply-config" -> mock;
"os-apply-config" -> pbr;
"os-apply-config" -> pystache;
"os-apply-config" -> "python-subunit";
"os-apply-config" -> pyyaml;
"os-apply-config" -> six;
"os-apply-config" -> sphinx;
"os-apply-config" -> testrepository;
"os-apply-config" -> testscenarios;
"os-apply-config" -> testtools;
"os-brick" -> babel;
"os-brick" -> coverage;
"os-brick" -> eventlet;
"os-brick" -> hacking;
"os-brick" -> "os-testr";
"os-brick" -> "oslo.concurrency";
"os-brick" -> "oslo.i18n";
"os-brick" -> "oslo.log";
"os-brick" -> "oslo.serialization";
"os-brick" -> "oslo.service";
"os-brick" -> "oslo.utils";
"os-brick" -> oslosphinx;
"os-brick" -> oslotest;
"os-brick" -> pbr;
"os-brick" -> "python-subunit";
"os-brick" -> requests;
"os-brick" -> retrying;
"os-brick" -> six;
"os-brick" -> sphinx;
"os-brick" -> testrepository;
"os-brick" -> testscenarios;
"os-brick" -> testtools;
"os-client-config" -> appdirs;
"os-client-config" -> coverage;
"os-client-config" -> discover;
"os-client-config" -> fixtures;
"os-client-config" -> hacking;
"os-client-config" -> jsonschema;
"os-client-config" -> keystoneauth1;
"os-client-config" -> mock;
"os-client-config" -> oslosphinx;
"os-client-config" -> oslotest;
"os-client-config" -> "python-glanceclient";
"os-client-config" -> "python-keystoneclient";
"os-client-config" -> "python-subunit";
"os-client-config" -> pyyaml;
"os-client-config" -> reno;
"os-client-config" -> sphinx;
"os-client-config" -> testrepository;
"os-client-config" -> testscenarios;
"os-client-config" -> testtools;
"os-cloud-config" -> argparse;
"os-cloud-config" -> babel;
"os-cloud-config" -> coverage;
"os-cloud-config" -> discover;
"os-cloud-config" -> fixtures;
"os-cloud-config" -> hacking;
"os-cloud-config" -> mock;
"os-cloud-config" -> "oslo.config";
"os-cloud-config" -> "oslo.i18n";
"os-cloud-config" -> oslosphinx;
"os-cloud-config" -> pbr;
"os-cloud-config" -> pyopenssl;
"os-cloud-config" -> "python-glanceclient";
"os-cloud-config" -> "python-ironicclient";
"os-cloud-config" -> "python-keystoneclient";
"os-cloud-config" -> "python-neutronclient";
"os-cloud-config" -> "python-novaclient";
"os-cloud-config" -> "python-subunit";
"os-cloud-config" -> six;
"os-cloud-config" -> sphinx;
"os-cloud-config" -> testrepository;
"os-cloud-config" -> testscenarios;
"os-cloud-config" -> testtools;
"os-collect-config" -> anyjson;
"os-collect-config" -> argparse;
"os-collect-config" -> coverage;
"os-collect-config" -> discover;
"os-collect-config" -> "dogpile.cache";
"os-collect-config" -> eventlet;
"os-collect-config" -> fixtures;
"os-collect-config" -> hacking;
"os-collect-config" -> iso8601;
"os-collect-config" -> lxml;
"os-collect-config" -> mock;
"os-collect-config" -> "oslo.config";
"os-collect-config" -> pbr;
"os-collect-config" -> "python-heatclient";
"os-collect-config" -> "python-keystoneclient";
"os-collect-config" -> "python-subunit";
"os-collect-config" -> "python-zaqarclient";
"os-collect-config" -> requests;
"os-collect-config" -> six;
"os-collect-config" -> sphinx;
"os-collect-config" -> testrepository;
"os-collect-config" -> testscenarios;
"os-collect-config" -> testtools;
"oslo.cache" -> babel;
"oslo.cache" -> "dogpile.cache";
"oslo.cache" -> hacking;
"oslo.cache" -> mock;
"oslo.cache" -> "oslo.config";
"oslo.cache" -> "oslo.i18n";
"oslo.cache" -> "oslo.log";
"oslo.cache" -> "oslo.utils";
"oslo.cache" -> oslosphinx;
"oslo.cache" -> oslotest;
"oslo.cache" -> six;
"oslo.cache" -> sphinx;
"oslo.concurrency" -> fixtures;
"oslo.concurrency" -> babel;
"oslo.concurrency" -> coverage;
"oslo.concurrency" -> eventlet;
"oslo.concurrency" -> hacking;
"oslo.concurrency" -> iso8601;
"oslo.concurrency" -> "oslo.config";
"oslo.concurrency" -> "oslo.i18n";
"oslo.concurrency" -> "oslo.utils";
"oslo.concurrency" -> oslosphinx;
"oslo.concurrency" -> oslotest;
"oslo.concurrency" -> pbr;
"oslo.concurrency" -> retrying;
"oslo.concurrency" -> six;
"oslo.concurrency" -> sphinx;
"oslo.config" -> "python-subunit";
"oslo.config" -> testrepository;
"oslo.config" -> fixtures;
"oslo.config" -> testscenarios;
"oslo.config" -> bandit;
"oslo.config" -> coverage;
"oslo.config" -> discover;
"oslo.config" -> hacking;
"oslo.config" -> mock;
"oslo.config" -> netaddr;
"oslo.config" -> "oslo.i18n";
"oslo.config" -> oslosphinx;
"oslo.config" -> oslotest;
"oslo.config" -> six;
"oslo.config" -> sphinx;
"oslo.config" -> stevedore;
"oslo.config" -> testtools;
"oslo.context" -> babel;
"oslo.context" -> coverage;
"oslo.context" -> hacking;
"oslo.context" -> oslosphinx;
"oslo.context" -> oslotest;
"oslo.context" -> pbr;
"oslo.context" -> sphinx;
"oslo.db" -> alembic;
"oslo.db" -> babel;
"oslo.db" -> "oslo.config";
"oslo.db" -> "oslo.context";
"oslo.db" -> "oslo.i18n";
"oslo.db" -> "oslo.utils";
"oslo.db" -> pbr;
"oslo.db" -> six;
"oslo.db" -> sqlalchemy;
"oslo.db" -> "sqlalchemy-migrate";
"oslo.db" -> stevedore;
"oslo.i18n" -> babel;
"oslo.i18n" -> coverage;
"oslo.i18n" -> hacking;
"oslo.i18n" -> mock;
"oslo.i18n" -> "oslo.config";
"oslo.i18n" -> oslosphinx;
"oslo.i18n" -> oslotest;
"oslo.i18n" -> pbr;
"oslo.i18n" -> six;
"oslo.i18n" -> sphinx;
"oslo.log" -> babel;
"oslo.log" -> bandit;
"oslo.log" -> coverage;
"oslo.log" -> debtcollector;
"oslo.log" -> discover;
"oslo.log" -> hacking;
"oslo.log" -> mock;
"oslo.log" -> "oslo.config";
"oslo.log" -> "oslo.context";
"oslo.log" -> "oslo.i18n";
"oslo.log" -> "oslo.serialization";
"oslo.log" -> "oslo.utils";
"oslo.log" -> oslosphinx;
"oslo.log" -> oslotest;
"oslo.log" -> pbr;
"oslo.log" -> "python-dateutil";
"oslo.log" -> "python-subunit";
"oslo.log" -> six;
"oslo.log" -> sphinx;
"oslo.log" -> testrepository;
"oslo.log" -> testscenarios;
"oslo.log" -> testtools;
"oslo.messaging" -> "python-subunit";
"oslo.messaging" -> testrepository;
"oslo.messaging" -> testscenarios;
"oslo.messaging" -> fixtures;
"oslo.messaging" -> amqp;
"oslo.messaging" -> bandit;
"oslo.messaging" -> coverage;
"oslo.messaging" -> debtcollector;
"oslo.messaging" -> discover;
"oslo.messaging" -> eventlet;
"oslo.messaging" -> futurist;
"oslo.messaging" -> greenlet;
"oslo.messaging" -> hacking;
"oslo.messaging" -> "kafka-python";
"oslo.messaging" -> kombu;
"oslo.messaging" -> mock;
"oslo.messaging" -> mox3;
"oslo.messaging" -> "oslo.config";
"oslo.messaging" -> "oslo.context";
"oslo.messaging" -> "oslo.i18n";
"oslo.messaging" -> "oslo.log";
"oslo.messaging" -> "oslo.middleware";
"oslo.messaging" -> "oslo.serialization";
"oslo.messaging" -> "oslo.service";
"oslo.messaging" -> "oslo.utils";
"oslo.messaging" -> oslosphinx;
"oslo.messaging" -> oslotest;
"oslo.messaging" -> pbr;
"oslo.messaging" -> pika;
"oslo.messaging" -> pyyaml;
"oslo.messaging" -> pyzmq;
"oslo.messaging" -> redis;
"oslo.messaging" -> retrying;
"oslo.messaging" -> six;
"oslo.messaging" -> sphinx;
"oslo.messaging" -> stevedore;
"oslo.messaging" -> testtools;
"oslo.messaging" -> webob;
"oslo.middleware" -> babel;
"oslo.middleware" -> coverage;
"oslo.middleware" -> debtcollector;
"oslo.middleware" -> fixtures;
"oslo.middleware" -> hacking;
"oslo.middleware" -> jinja2;
"oslo.middleware" -> mock;
"oslo.middleware" -> ordereddict;
"oslo.middleware" -> "oslo.config";
"oslo.middleware" -> "oslo.context";
"oslo.middleware" -> "oslo.i18n";
"oslo.middleware" -> "oslo.utils";
"oslo.middleware" -> oslosphinx;
"oslo.middleware" -> oslotest;
"oslo.middleware" -> pbr;
"oslo.middleware" -> six;
"oslo.middleware" -> sphinx;
"oslo.middleware" -> stevedore;
"oslo.middleware" -> testtools;
"oslo.middleware" -> webob;
"oslo.policy" -> coverage;
"oslo.policy" -> hacking;
"oslo.policy" -> "oslo.config";
"oslo.policy" -> "oslo.i18n";
"oslo.policy" -> "oslo.serialization";
"oslo.policy" -> "oslo.utils";
"oslo.policy" -> oslosphinx;
"oslo.policy" -> oslotest;
"oslo.policy" -> requests;
"oslo.policy" -> "requests-mock";
"oslo.policy" -> six;
"oslo.policy" -> sphinx;
"oslo.privsep" -> babel;
"oslo.privsep" -> cffi;
"oslo.privsep" -> fixtures;
"oslo.privsep" -> hacking;
"oslo.privsep" -> mock;
"oslo.privsep" -> "oslo.config";
"oslo.privsep" -> "oslo.i18n";
"oslo.privsep" -> "oslo.log";
"oslo.privsep" -> "oslo.utils";
"oslo.privsep" -> oslosphinx;
"oslo.privsep" -> oslotest;
"oslo.privsep" -> sphinx;
"oslo.reports" -> babel;
"oslo.reports" -> coverage;
"oslo.reports" -> eventlet;
"oslo.reports" -> greenlet;
"oslo.reports" -> hacking;
"oslo.reports" -> jinja2;
"oslo.reports" -> "oslo.config";
"oslo.reports" -> "oslo.i18n";
"oslo.reports" -> "oslo.serialization";
"oslo.reports" -> "oslo.utils";
"oslo.reports" -> oslosphinx;
"oslo.reports" -> oslotest;
"oslo.reports" -> pbr;
"oslo.reports" -> psutil;
"oslo.reports" -> six;
"oslo.reports" -> sphinx;
"oslo.rootwrap" -> discover;
"oslo.rootwrap" -> eventlet;
"oslo.rootwrap" -> fixtures;
"oslo.rootwrap" -> hacking;
"oslo.rootwrap" -> mock;
"oslo.rootwrap" -> oslosphinx;
"oslo.rootwrap" -> oslotest;
"oslo.rootwrap" -> "python-subunit";
"oslo.rootwrap" -> six;
"oslo.rootwrap" -> sphinx;
"oslo.rootwrap" -> testrepository;
"oslo.rootwrap" -> testscenarios;
"oslo.rootwrap" -> testtools;
"oslo.serialization" -> babel;
"oslo.serialization" -> coverage;
"oslo.serialization" -> hacking;
"oslo.serialization" -> mock;
"oslo.serialization" -> "msgpack-python";
"oslo.serialization" -> netaddr;
"oslo.serialization" -> "oslo.i18n";
"oslo.serialization" -> "oslo.utils";
"oslo.serialization" -> oslosphinx;
"oslo.serialization" -> oslotest;
"oslo.serialization" -> pbr;
"oslo.serialization" -> pytz;
"oslo.serialization" -> simplejson;
"oslo.serialization" -> six;
"oslo.serialization" -> sphinx;
"oslo.service" -> babel;
"oslo.service" -> bandit;
"oslo.service" -> coverage;
"oslo.service" -> doc8;
"oslo.service" -> eventlet;
"oslo.service" -> fixtures;
"oslo.service" -> greenlet;
"oslo.service" -> hacking;
"oslo.service" -> mock;
"oslo.service" -> "oslo.concurrency";
"oslo.service" -> "oslo.config";
"oslo.service" -> "oslo.i18n";
"oslo.service" -> "oslo.log";
"oslo.service" -> "oslo.utils";
"oslo.service" -> oslosphinx;
"oslo.service" -> oslotest;
"oslo.service" -> paste;
"oslo.service" -> pastedeploy;
"oslo.service" -> six;
"oslo.service" -> sphinx;
"oslo.service" -> webob;
oslosphinx -> hacking;
oslosphinx -> pbr;
oslosphinx -> requests;
oslosphinx -> six;
oslosphinx -> sphinx;
oslotest -> coverage;
oslotest -> debtcollector;
oslotest -> fixtures;
oslotest -> hacking;
oslotest -> mock;
oslotest -> mox3;
oslotest -> "os-client-config";
oslotest -> "oslo.config";
oslotest -> oslosphinx;
oslotest -> "python-subunit";
oslotest -> six;
oslotest -> sphinx;
oslotest -> testrepository;
oslotest -> testscenarios;
oslotest -> testtools;
"oslo.utils" -> bandit;
"oslo.utils" -> coverage;
"oslo.utils" -> debtcollector;
"oslo.utils" -> discover;
"oslo.utils" -> fixtures;
"oslo.utils" -> hacking;
"oslo.utils" -> iso8601;
"oslo.utils" -> mock;
"oslo.utils" -> netaddr;
"oslo.utils" -> netifaces;
"oslo.utils" -> "oslo.config";
"oslo.utils" -> "oslo.i18n";
"oslo.utils" -> oslosphinx;
"oslo.utils" -> oslotest;
"oslo.utils" -> pbr;
"oslo.utils" -> "python-subunit";
"oslo.utils" -> pytz;
"oslo.utils" -> six;
"oslo.utils" -> sphinx;
"oslo.utils" -> testrepository;
"oslo.utils" -> testscenarios;
"oslo.utils" -> testtools;
"oslo.versionedobjects" -> babel;
"oslo.versionedobjects" -> coverage;
"oslo.versionedobjects" -> hacking;
"oslo.versionedobjects" -> iso8601;
"oslo.versionedobjects" -> netaddr;
"oslo.versionedobjects" -> "oslo.concurrency";
"oslo.versionedobjects" -> "oslo.config";
"oslo.versionedobjects" -> "oslo.context";
"oslo.versionedobjects" -> "oslo.i18n";
"oslo.versionedobjects" -> "oslo.log";
"oslo.versionedobjects" -> "oslo.messaging";
"oslo.versionedobjects" -> "oslo.serialization";
"oslo.versionedobjects" -> "oslo.utils";
"oslo.versionedobjects" -> oslosphinx;
"oslo.versionedobjects" -> oslotest;
"oslo.versionedobjects" -> six;
"oslo.versionedobjects" -> sphinx;
"oslo.versionedobjects" -> testtools;
"oslo.versionedobjects" -> webob;
"oslo.vmware" -> bandit;
"oslo.vmware" -> coverage;
"oslo.vmware" -> discover;
"oslo.vmware" -> eventlet;
"oslo.vmware" -> fixtures;
"oslo.vmware" -> hacking;
"oslo.vmware" -> mock;
"oslo.vmware" -> mox3;
"oslo.vmware" -> netaddr;
"oslo.vmware" -> "oslo.concurrency";
"oslo.vmware" -> "oslo.i18n";
"oslo.vmware" -> "oslo.utils";
"oslo.vmware" -> oslosphinx;
"oslo.vmware" -> pbr;
"oslo.vmware" -> "python-subunit";
"oslo.vmware" -> pyyaml;
"oslo.vmware" -> requests;
"oslo.vmware" -> six;
"oslo.vmware" -> sphinx;
"oslo.vmware" -> stevedore;
"oslo.vmware" -> "suds-jurko";
"oslo.vmware" -> testrepository;
"oslo.vmware" -> testscenarios;
"oslo.vmware" -> testtools;
"oslo.vmware" -> urllib3;
"os-net-config" -> anyjson;
"os-net-config" -> babel;
"os-net-config" -> coverage;
"os-net-config" -> discover;
"os-net-config" -> eventlet;
"os-net-config" -> fixtures;
"os-net-config" -> hacking;
"os-net-config" -> iso8601;
"os-net-config" -> mock;
"os-net-config" -> mox;
"os-net-config" -> netaddr;
"os-net-config" -> "oslo.concurrency";
"os-net-config" -> "oslo.utils";
"os-net-config" -> oslosphinx;
"os-net-config" -> pbr;
"os-net-config" -> "python-subunit";
"os-net-config" -> pyyaml;
"os-net-config" -> six;
"os-net-config" -> sphinx;
"os-net-config" -> testrepository;
"os-net-config" -> testscenarios;
"os-net-config" -> testtools;
"os-performance-tools" -> coverage;
"os-performance-tools" -> discover;
"os-performance-tools" -> hacking;
"os-performance-tools" -> mock;
"os-performance-tools" -> "oslo.config";
"os-performance-tools" -> oslosphinx;
"os-performance-tools" -> oslotest;
"os-performance-tools" -> pbr;
"os-performance-tools" -> pymysql;
"os-performance-tools" -> "python-subunit";
"os-performance-tools" -> sphinx;
"os-performance-tools" -> statsd;
"os-performance-tools" -> testrepository;
"os-performance-tools" -> testscenarios;
"os-performance-tools" -> testtools;
osprofiler -> coverage;
osprofiler -> discover;
osprofiler -> hacking;
osprofiler -> mock;
osprofiler -> "oslo.utils";
osprofiler -> oslosphinx;
osprofiler -> "python-subunit";
osprofiler -> six;
osprofiler -> sphinx;
osprofiler -> testrepository;
osprofiler -> testtools;
osprofiler -> webob;
ospurge -> hacking;
ospurge -> httpretty;
ospurge -> nose;
ospurge -> "python-ceilometerclient";
ospurge -> "python-cinderclient";
ospurge -> "python-glanceclient";
ospurge -> "python-heatclient";
ospurge -> "python-keystoneclient";
ospurge -> "python-neutronclient";
ospurge -> "python-novaclient";
ospurge -> "python-swiftclient";
ospurge -> requests;
ospurge -> testrepository;
ospurge -> testtools;
"os-refresh-config" -> argparse;
"os-refresh-config" -> babel;
"os-refresh-config" -> coverage;
"os-refresh-config" -> discover;
"os-refresh-config" -> fixtures;
"os-refresh-config" -> hacking;
"os-refresh-config" -> mock;
"os-refresh-config" -> pbr;
"os-refresh-config" -> "python-subunit";
"os-refresh-config" -> sphinx;
"os-refresh-config" -> testrepository;
"os-refresh-config" -> testscenarios;
"os-refresh-config" -> testtools;
"os-testr" -> babel;
"os-testr" -> coverage;
"os-testr" -> ddt;
"os-testr" -> discover;
"os-testr" -> hacking;
"os-testr" -> oslosphinx;
"os-testr" -> oslotest;
"os-testr" -> pbr;
"os-testr" -> "python-subunit";
"os-testr" -> six;
"os-testr" -> sphinx;
"os-testr" -> testrepository;
"os-testr" -> testscenarios;
"os-testr" -> testtools;
"paasta-tools" -> argcomplete;
"paasta-tools" -> argparse;
"paasta-tools" -> distribute;
"paasta-tools" -> "docker-py";
"paasta-tools" -> dulwich;
"paasta-tools" -> httplib2;
"paasta-tools" -> humanize;
"paasta-tools" -> isodate;
"paasta-tools" -> jsonschema;
"paasta-tools" -> kazoo;
"paasta-tools" -> ordereddict;
"paasta-tools" -> "path.py";
"paasta-tools" -> "python-dateutil";
"paasta-tools" -> requests;
"paasta-tools" -> "requests-cache";
Pacific -> beaker;
Pacific -> docopt;
Pacific -> jinja2;
Pacific -> jsonschema;
Pacific -> mako;
Pacific -> psycopg2;
Pacific -> pyramid;
Pacific -> "pyramid-beaker";
Pacific -> "pyramid-chameleon";
Pacific -> "pyramid-debugtoolbar";
Pacific -> pyscss;
Pacific -> pyyaml;
Pacific -> redis;
Pacific -> sphinx;
Pacific -> sqlalchemy;
Pacific -> uwsgi;
Pacific -> venusian;
Pacific -> waitress;
pagarmepy -> coverage;
pagarmepy -> flake8;
pagarmepy -> gnureadline;
pagarmepy -> ipython;
pagarmepy -> mccabe;
pagarmepy -> nose;
pagarmepy -> pep8;
pagarmepy -> pyasn1;
pagarmepy -> pyflakes;
pagarmepy -> requests;
pagarmepy -> rsa;
pagarmepy -> six;
pageit -> argcomplete;
pageit -> argh;
pageit -> coverage;
pageit -> mako;
pageit -> nose;
pageit -> paver;
pageit -> pep8;
pageit -> pylint;
pageit -> pyyaml;
pageit -> sphinx;
pageit -> "sphinx-rtd-theme";
pageit -> "sphinxcontrib-napoleon";
pageit -> watchdog;
palladium -> "cov-core";
palladium -> coverage;
palladium -> docopt;
palladium -> flask;
palladium -> itsdangerous;
palladium -> jinja2;
palladium -> joblib;
palladium -> markupsafe;
palladium -> numpy;
palladium -> pandas;
palladium -> psutil;
palladium -> pytest;
palladium -> "pytest-cov";
palladium -> "python-dateutil";
palladium -> pytz;
palladium -> "scikit-learn";
palladium -> scipy;
palladium -> six;
palladium -> sphinx;
palladium -> "sphinx-rtd-theme";
palladium -> sqlalchemy;
palladium -> ujson;
palladium -> werkzeug;
panoramix -> alembic;
panoramix -> cryptography;
panoramix -> flask;
panoramix -> "flask-login";
panoramix -> "flask-migrate";
panoramix -> "flask-script";
panoramix -> "flask-sqlalchemy";
panoramix -> "flask-testing";
panoramix -> gunicorn;
panoramix -> markdown;
panoramix -> numpy;
panoramix -> pandas;
panoramix -> parsedatetime;
panoramix -> "python-dateutil";
panoramix -> requests;
panoramix -> sqlalchemy;
panoramix -> "sqlalchemy-utils";
panoramix -> sqlparse;
panoramix -> werkzeug;
panya -> "django-photologue";
panya -> pil;
papaye -> colander;
papaye -> cssmin;
papaye -> docutils;
papaye -> jsmin;
papaye -> pyramid;
papaye -> "pyramid-beaker";
papaye -> "pyramid-debugtoolbar";
papaye -> "pyramid-jinja2";
papaye -> "pyramid-tm";
papaye -> pytz;
papaye -> pyzmq;
papaye -> requests;
papaye -> termcolor;
papaye -> transaction;
papaye -> waitress;
paperwork -> cython;
paperwork -> joblib;
paperwork -> numpy;
paperwork -> pillow;
paperwork -> pycountry;
paperwork -> pyenchant;
paperwork -> "python-levenshtein";
paperwork -> "scikit-image";
paperwork -> "scikit-learn";
paperwork -> scipy;
paperwork -> termcolor;
paperwork -> whoosh;
pappyproxy -> beautifulsoup4;
pappyproxy -> jinja2;
pappyproxy -> pygments;
pappyproxy -> pytest;
pappyproxy -> "pytest-cov";
pappyproxy -> "pytest-mock";
pappyproxy -> "service-identity";
pappyproxy -> twisted;
patacrep -> argparse;
patacrep -> chardet;
patacrep -> jinja2;
patacrep -> json;
patacrep -> logging;
patacrep -> ply;
patacrep -> unidecode;
Pathomx -> ipython;
Pathomx -> jinja2;
Pathomx -> jsonpointer;
Pathomx -> jsonschema;
Pathomx -> markupsafe;
Pathomx -> matplotlib;
Pathomx -> mistune;
Pathomx -> numpy;
Pathomx -> pandas;
Pathomx -> pydot;
Pathomx -> pygments;
Pathomx -> pyparsing;
Pathomx -> requests;
Pathomx -> "scikit-learn";
Pathomx -> scipy;
Pathomx -> six;
patroni -> boto;
patroni -> click;
patroni -> dnspython;
patroni -> kazoo;
patroni -> mock;
patroni -> prettytable;
patroni -> psycopg2;
patroni -> pyyaml;
patroni -> requests;
patroni -> six;
pbr -> coverage;
pbr -> discover;
pbr -> fixtures;
pbr -> hacking;
pbr -> mock;
pbr -> pip;
pbr -> "python-subunit";
pbr -> sphinx;
pbr -> testrepository;
pbr -> testresources;
pbr -> testscenarios;
pbr -> testtools;
"pbr-samstav" -> coverage;
"pbr-samstav" -> discover;
"pbr-samstav" -> fixtures;
"pbr-samstav" -> flake8;
"pbr-samstav" -> mock;
"pbr-samstav" -> pip;
"pbr-samstav" -> "python-subunit";
"pbr-samstav" -> sphinx;
"pbr-samstav" -> testrepository;
"pbr-samstav" -> testresources;
"pbr-samstav" -> testscenarios;
"pbr-samstav" -> testtools;
"pd-sprintstats" -> httplib2;
"pd-sprintstats" -> jinja2;
"pd-sprintstats" -> jira;
"pd-sprintstats" -> markupsafe;
"pd-sprintstats" -> numpy;
"pd-sprintstats" -> oauth2;
"pd-sprintstats" -> oauthlib;
"pd-sprintstats" -> ordereddict;
"pd-sprintstats" -> "python-dateutil";
"pd-sprintstats" -> requests;
"pd-sprintstats" -> "requests-oauthlib";
"pd-sprintstats" -> "requests-toolbelt";
"pd-sprintstats" -> six;
pdtools -> autobahn;
pdtools -> bcrypt;
pdtools -> cffi;
pdtools -> colorama;
pdtools -> docopt;
pdtools -> enum34;
pdtools -> pyyaml;
pdtools -> requests;
pdtools -> "service-identity";
pdtools -> twisted;
pecan -> logutils;
pecan -> mako;
pecan -> six;
pecan -> webob;
pecan -> webtest;
peewee -> flask;
peewee -> peewee;
pelican -> blinker;
pelican -> docutils;
pelican -> jinja2;
pelican -> pygments;
pelican -> "python-dateutil";
pelican -> pytz;
pelican -> six;
pelican -> unidecode;
"pelican-provisioner" -> beautifulsoup4;
"pelican-provisioner" -> blinker;
"pelican-provisioner" -> cssmin;
"pelican-provisioner" -> docutils;
"pelican-provisioner" -> ecdsa;
"pelican-provisioner" -> fabric;
"pelican-provisioner" -> html5lib;
"pelican-provisioner" -> jinja2;
"pelican-provisioner" -> jsmin;
"pelican-provisioner" -> lxml;
"pelican-provisioner" -> markdown;
"pelican-provisioner" -> paramiko;
"pelican-provisioner" -> pelican;
"pelican-provisioner" -> pycrypto;
"pelican-provisioner" -> pygments;
"pelican-provisioner" -> pyscss;
"pelican-provisioner" -> "python-dateutil";
"pelican-provisioner" -> pytz;
"pelican-provisioner" -> unidecode;
"pelican-provisioner" -> webassets;
"pelican-provisioner" -> wheel;
"penelope.core" -> babel;
"penelope.core" -> beaker;
"penelope.core" -> bleach;
"penelope.core" -> deform;
"penelope.core" -> distribute;
"penelope.core" -> feedparser;
"penelope.core" -> gdata;
"penelope.core" -> "gevent-socketio";
"penelope.core" -> lxml;
"penelope.core" -> paste;
"penelope.core" -> pastescript;
"penelope.core" -> "plone.i18n";
"penelope.core" -> psycopg2;
"penelope.core" -> pyramid;
"penelope.core" -> "pyramid-beaker";
"penelope.core" -> "pyramid-debugtoolbar";
"penelope.core" -> "python-dateutil";
"penelope.core" -> "python-openid";
"penelope.core" -> raven;
"penelope.core" -> redis;
"penelope.core" -> "repoze.who";
"penelope.core" -> sqlalchemy;
"penelope.core" -> trac;
"penelope.core" -> transaction;
"penelope.core" -> unittest2;
"penelope.core" -> weberror;
"penelope.core" -> webtest;
"penelope.core" -> xlwt;
"penelope.core" -> "zope.interface";
"penelope.core" -> "zope.sqlalchemy";
percolate -> doit;
percolate -> future;
percolate -> hypothesis;
percolate -> ipdb;
percolate -> ipython;
percolate -> matplotlib;
percolate -> networkx;
percolate -> numpy;
percolate -> psutil;
percolate -> pytest;
percolate -> "pytest-capturelog";
percolate -> "pytest-cov";
percolate -> "pytest-mock";
percolate -> "pytest-pep8";
percolate -> releases;
percolate -> scipy;
percolate -> simoa;
percolate -> sphinx;
percolate -> "sphinxcontrib-bibtex";
percolate -> wheel;
"performanceplatform-client" -> coverage;
"performanceplatform-client" -> coveralls;
"performanceplatform-client" -> mock;
"performanceplatform-client" -> "ndg-httpsclient";
"performanceplatform-client" -> nose;
"performanceplatform-client" -> pep8;
"performanceplatform-client" -> pyasn1;
"performanceplatform-client" -> pyhamcrest;
"performanceplatform-client" -> pyopenssl;
"performanceplatform-client" -> pytz;
"performanceplatform-client" -> requests;
"performanceplatform-collector" -> argparse;
"performanceplatform-collector" -> coverage;
"performanceplatform-collector" -> freezegun;
"performanceplatform-collector" -> lxml;
"performanceplatform-collector" -> mock;
"performanceplatform-collector" -> nose;
"performanceplatform-collector" -> pep8;
"performanceplatform-collector" -> "performanceplatform-client";
"performanceplatform-collector" -> pyhamcrest;
"performanceplatform-collector" -> "python-dateutil";
"performanceplatform-collector" -> pytz;
"performanceplatform-collector" -> requests;
"performanceplatform-collector" -> statsd;
"performanceplatform-collector" -> unicodecsv;
petl -> cython;
petl -> lxml;
petl -> nose;
petl -> numexpr;
petl -> numpy;
petl -> openpyxl;
petl -> pandas;
petl -> psycopg2;
petl -> pymysql;
petl -> sqlalchemy;
petl -> tables;
petl -> tox;
petl -> whoosh;
petl -> xlrd;
pex -> continue;
pex -> sphinx;
pex -> "sphinx-rtd-theme";
pgcontents -> alembic;
pgcontents -> "backports.ssl-match-hostname";
pgcontents -> certifi;
pgcontents -> click;
pgcontents -> ipython;
pgcontents -> jinja2;
pgcontents -> jsonschema;
pgcontents -> mako;
pgcontents -> markupsafe;
pgcontents -> mistune;
pgcontents -> psycopg2;
pgcontents -> pygments;
pgcontents -> pyzmq;
pgcontents -> requests;
pgcontents -> six;
pgcontents -> sqlalchemy;
pgcontents -> tornado;
piecash -> ipython;
piecash -> pandas;
piecash -> paver;
piecash -> psycopg2;
piecash -> py;
piecash -> pymysql;
piecash -> pytest;
piecash -> "pytest-cov";
piecash -> pytz;
piecash -> requests;
piecash -> six;
piecash -> sphinx;
piecash -> "sphinxcontrib-napoleon";
piecash -> sqlalchemy;
piecash -> "sqlalchemy-utils";
piecash -> tox;
piecash -> tzlocal;
PieCrust -> colorama;
PieCrust -> "cov-core";
PieCrust -> coverage;
PieCrust -> jinja2;
PieCrust -> markdown;
PieCrust -> markupsafe;
PieCrust -> mock;
PieCrust -> pygments;
PieCrust -> pystache;
PieCrust -> pytest;
PieCrust -> "pytest-cov";
PieCrust -> "pytest-mock";
PieCrust -> "python-dateutil";
PieCrust -> pyyaml;
PieCrust -> "repoze.lru";
PieCrust -> unidecode;
PieCrust -> werkzeug;
piksi_tools -> "cov-core";
piksi_tools -> coverage;
piksi_tools -> flake8;
piksi_tools -> futures;
piksi_tools -> pep8;
piksi_tools -> pytest;
piksi_tools -> "pytest-cov";
piksi_tools -> sbp;
piksi_tools -> tox;
piksi_tools -> virtualenv;
pillowtop -> "dimagi-utils";
pillowtop -> django;
pillowtop -> elasticsearch;
pillowtop -> gevent;
pillowtop -> greenlet;
pillowtop -> psycopg2;
pillowtop -> requests;
pillowtop -> restkit;
pillowtop -> simplejson;
"Pilot-Lib" -> flask;
"Pilot-Lib" -> "flask-assets";
"Pilot-Lib" -> "flask-login";
"Pilot-Lib" -> humanize;
"Pilot-Lib" -> passlib;
"Pilot-Lib" -> "python-slugify";
"Pilot-Lib" -> redis;
"Pilot-Lib" -> requests;
pinball -> argparse;
pinball -> boto;
pinball -> django;
pinball -> mock;
pinball -> "mysql-python";
pinball -> oauth2client;
pinball -> pycrypto;
pinball -> pydot;
pinball -> "python-dateutil";
pinball -> pytz;
pinball -> pyyaml;
pinball -> thrift;
pinball -> tox;
pinocchio -> colorama;
"pip-accel" -> boto;
"pip-accel" -> "cached-property";
"pip-accel" -> coloredlogs;
"pip-accel" -> distribute;
"pip-accel" -> flake8;
"pip-accel" -> humanfriendly;
"pip-accel" -> pep257;
"pip-accel" -> pep8;
"pip-accel" -> pip;
"pip-accel" -> pyflakes;
"pip-accel" -> pytest;
"pip-accel" -> "pytest-cov";
"pip-accel" -> six;
pipewelder -> boto;
pipewelder -> colorama;
pipewelder -> docutils;
pipewelder -> flake8;
pipewelder -> jinja2;
pipewelder -> markupsafe;
pipewelder -> mccabe;
pipewelder -> mock;
pipewelder -> paver;
pipewelder -> pep8;
pipewelder -> py;
pipewelder -> pyflakes;
pipewelder -> pygments;
pipewelder -> pytest;
pipewelder -> six;
pipewelder -> sphinx;
pipewelder -> tox;
pipreqs -> beautifulsoup4;
pipreqs -> boto;
pipreqs -> docopt;
pipreqs -> flask;
pipreqs -> ipython;
pipreqs -> nose;
pipreqs -> peewee;
pipreqs -> pyflakes;
pipreqs -> requests;
pipreqs -> sqlalchemy;
pipreqs -> ujson;
pkutils -> coverage;
pkutils -> flake8;
pkutils -> mccabe;
pkutils -> nose;
pkutils -> pep8;
pkutils -> pyflakes;
pkutils -> pylint;
pkutils -> tox;
pkutils -> twine;
pkutils -> virtualenv;
pkutils -> wheel;
"plone.app.blocks" -> accesscontrol;
"plone.app.blocks" -> acquisition;
"plone.app.blocks" -> distribute;
"plone.app.blocks" -> lxml;
"plone.app.blocks" -> "plone.app.layout";
"plone.app.blocks" -> "plone.app.registry";
"plone.app.blocks" -> "plone.autoform";
"plone.app.blocks" -> "plone.behavior";
"plone.app.blocks" -> "plone.dexterity";
"plone.app.blocks" -> "plone.memoize";
"plone.app.blocks" -> "plone.registry";
"plone.app.blocks" -> "plone.supermodel";
"plone.app.blocks" -> "plone.tiles";
"plone.app.blocks" -> "plone.uuid";
"plone.app.blocks" -> "products.cmfcore";
"plone.app.blocks" -> "products.cmfplone";
"plone.app.blocks" -> "z3c.form";
"plone.app.blocks" -> "zope.annotation";
"plone.app.blocks" -> "zope.component";
"plone.app.blocks" -> "zope.globalrequest";
"plone.app.blocks" -> "zope.i18nmessageid";
"plone.app.blocks" -> "zope.interface";
"plone.app.blocks" -> "zope.publisher";
"plone.app.blocks" -> "zope.schema";
"plone.app.blocks" -> "zope.security";
"plone.app.blocks" -> "zope.site";
"plone.app.blocks" -> "zope.traversing";
"plone.app.blocks" -> zope2;
"plone.app.caching" -> acquisition;
"plone.app.caching" -> distribute;
"plone.app.caching" -> "plone.app.registry";
"plone.app.caching" -> "plone.app.z3cform";
"plone.app.caching" -> "plone.cachepurging";
"plone.app.caching" -> "plone.memoize";
"plone.app.caching" -> "plone.protect";
"plone.app.caching" -> "plone.registry";
"plone.app.caching" -> "products.cmfcore";
"plone.app.caching" -> "products.genericsetup";
"plone.app.caching" -> "products.statusmessages";
"plone.app.caching" -> "python-dateutil";
"plone.app.caching" -> "z3c.form";
"plone.app.caching" -> "zope.component";
"plone.app.caching" -> "zope.interface";
"plone.app.caching" -> "zope.pagetemplate";
"plone.app.caching" -> "zope.publisher";
"plone.app.caching" -> zope2;
"plone.app.collection" -> distribute;
"plone.app.collection" -> "plone.app.form";
"plone.app.collection" -> "plone.app.portlets";
"plone.app.collection" -> "plone.app.vocabularies";
"plone.app.collection" -> "plone.portlet.collection";
"plone.app.collection" -> "plone.portlets";
"plone.app.collection" -> "products.archetypes";
"plone.app.collection" -> "products.cmfcore";
"plone.app.collection" -> "products.cmfplone";
"plone.app.collection" -> transaction;
"plone.app.collection" -> "zope.component";
"plone.app.collection" -> "zope.configuration";
"plone.app.collection" -> "zope.formlib";
"plone.app.collection" -> "zope.i18nmessageid";
"plone.app.collection" -> "zope.interface";
"plone.app.collection" -> "zope.schema";
"plone.app.collection" -> zope2;
"plone.app.content" -> acquisition;
"plone.app.content" -> distribute;
"plone.app.content" -> "plone.app.widgets";
"plone.app.content" -> "plone.i18n";
"plone.app.content" -> "plone.memoize";
"plone.app.content" -> "plone.protect";
"plone.app.content" -> "products.cmfcore";
"plone.app.content" -> "products.cmfplone";
"plone.app.content" -> "zope.component";
"plone.app.content" -> "zope.container";
"plone.app.content" -> "zope.deferredimport";
"plone.app.content" -> "zope.event";
"plone.app.content" -> "zope.i18n";
"plone.app.content" -> "zope.i18nmessageid";
"plone.app.content" -> "zope.interface";
"plone.app.content" -> "zope.lifecycleevent";
"plone.app.content" -> "zope.publisher";
"plone.app.content" -> "zope.schema";
"plone.app.content" -> "zope.viewlet";
"plone.app.content" -> zope2;
"plone.app.contentmenu" -> acquisition;
"plone.app.contentmenu" -> distribute;
"plone.app.contentmenu" -> "plone.app.content";
"plone.app.contentmenu" -> "plone.locking";
"plone.app.contentmenu" -> "plone.memoize";
"plone.app.contentmenu" -> "plone.protect";
"plone.app.contentmenu" -> "products.cmfcore";
"plone.app.contentmenu" -> "products.cmfplone";
"plone.app.contentmenu" -> "zope.component";
"plone.app.contentmenu" -> "zope.contentprovider";
"plone.app.contentmenu" -> "zope.i18n";
"plone.app.contentmenu" -> "zope.i18nmessageid";
"plone.app.contentmenu" -> "zope.interface";
"plone.app.contentmenu" -> "zope.publisher";
"plone.app.contentmenu" -> zope2;
"plone.app.contentrules" -> acquisition;
"plone.app.contentrules" -> distribute;
"plone.app.contentrules" -> "plone.app.vocabularies";
"plone.app.contentrules" -> "plone.app.z3cform";
"plone.app.contentrules" -> "plone.autoform";
"plone.app.contentrules" -> "plone.memoize";
"plone.app.contentrules" -> "plone.uuid";
"plone.app.contentrules" -> "products.cmfcore";
"plone.app.contentrules" -> "products.cmfplone";
"plone.app.contentrules" -> "products.genericsetup";
"plone.app.contentrules" -> "products.statusmessages";
"plone.app.contentrules" -> transaction;
"plone.app.contentrules" -> zodb3;
"plone.app.contentrules" -> "zope.annotation";
"plone.app.contentrules" -> "zope.browser";
"plone.app.contentrules" -> "zope.component";
"plone.app.contentrules" -> "zope.container";
"plone.app.contentrules" -> "zope.event";
"plone.app.contentrules" -> "zope.i18nmessageid";
"plone.app.contentrules" -> "zope.interface";
"plone.app.contentrules" -> "zope.lifecycleevent";
"plone.app.contentrules" -> "zope.publisher";
"plone.app.contentrules" -> "zope.schema";
"plone.app.contentrules" -> "zope.site";
"plone.app.contentrules" -> "zope.traversing";
"plone.app.contentrules" -> zope2;
"plone.app.customerize" -> acquisition;
"plone.app.customerize" -> distribute;
"plone.app.customerize" -> "plone.browserlayer";
"plone.app.customerize" -> "plone.portlets";
"plone.app.customerize" -> "products.cmfcore";
"plone.app.customerize" -> "zope.component";
"plone.app.customerize" -> "zope.interface";
"plone.app.customerize" -> "zope.publisher";
"plone.app.customerize" -> "zope.viewlet";
"plone.app.customerize" -> zope2;
"plone.app.dexterity" -> distribute;
"plone.app.dexterity" -> lxml;
"plone.app.dexterity" -> "plone.app.content";
"plone.app.dexterity" -> "plone.app.layout";
"plone.app.dexterity" -> "plone.app.z3cform";
"plone.app.dexterity" -> "plone.autoform";
"plone.app.dexterity" -> "plone.behavior";
"plone.app.dexterity" -> "plone.dexterity";
"plone.app.dexterity" -> "plone.namedfile";
"plone.app.dexterity" -> "plone.portlets";
"plone.app.dexterity" -> "plone.schemaeditor";
"plone.app.dexterity" -> "plone.supermodel";
"plone.app.dexterity" -> "plone.z3cform";
"plone.app.dexterity" -> "products.cmfcore";
"plone.app.dexterity" -> "products.cmfplone";
"plone.app.dexterity" -> "products.genericsetup";
"plone.app.dexterity" -> "z3c.form";
"plone.app.dexterity" -> "zope.browserpage";
"plone.app.dexterity" -> "zope.component";
"plone.app.dexterity" -> "zope.interface";
"plone.app.dexterity" -> "zope.publisher";
"plone.app.dexterity" -> "zope.schema";
"plone.app.dexterity" -> zope2;
"plone.app.discussion" -> "collective.monkeypatcher";
"plone.app.discussion" -> distribute;
"plone.app.discussion" -> "plone.app.layout";
"plone.app.discussion" -> "plone.app.registry";
"plone.app.discussion" -> "plone.app.z3cform";
"plone.app.discussion" -> "plone.indexer";
"plone.app.discussion" -> "plone.registry";
"plone.app.discussion" -> "plone.z3cform";
"plone.app.discussion" -> "products.cmfplone";
"plone.app.discussion" -> "z3c.form";
"plone.app.discussion" -> zodb3;
"plone.app.discussion" -> "zope.annotation";
"plone.app.discussion" -> "zope.component";
"plone.app.discussion" -> "zope.container";
"plone.app.discussion" -> "zope.event";
"plone.app.discussion" -> "zope.interface";
"plone.app.discussion" -> "zope.lifecycleevent";
"plone.app.discussion" -> "zope.site";
"plone.app.event" -> acquisition;
"plone.app.event" -> datetime;
"plone.app.event" -> distribute;
"plone.app.event" -> icalendar;
"plone.app.event" -> "plone.app.dexterity";
"plone.app.event" -> "plone.app.layout";
"plone.app.event" -> "plone.app.portlets";
"plone.app.event" -> "plone.app.querystring";
"plone.app.event" -> "plone.app.registry";
"plone.app.event" -> "plone.app.vocabularies";
"plone.app.event" -> "plone.app.z3cform";
"plone.app.event" -> "plone.autoform";
"plone.app.event" -> "plone.behavior";
"plone.app.event" -> "plone.browserlayer";
"plone.app.event" -> "plone.dexterity";
"plone.app.event" -> "plone.folder";
"plone.app.event" -> "plone.indexer";
"plone.app.event" -> "plone.memoize";
"plone.app.event" -> "plone.namedfile";
"plone.app.event" -> "plone.portlets";
"plone.app.event" -> "plone.registry";
"plone.app.event" -> "plone.supermodel";
"plone.app.event" -> "plone.uuid";
"plone.app.event" -> "plone.z3cform";
"plone.app.event" -> "products.cmfcore";
"plone.app.event" -> "products.cmfplone";
"plone.app.event" -> "products.genericsetup";
"plone.app.event" -> "products.statusmessages";
"plone.app.event" -> pytz;
"plone.app.event" -> transaction;
"plone.app.event" -> "z3c.form";
"plone.app.event" -> "zope.annotation";
"plone.app.event" -> "zope.component";
"plone.app.event" -> "zope.container";
"plone.app.event" -> "zope.contentprovider";
"plone.app.event" -> "zope.event";
"plone.app.event" -> "zope.globalrequest";
"plone.app.event" -> "zope.i18n";
"plone.app.event" -> "zope.i18nmessageid";
"plone.app.event" -> "zope.interface";
"plone.app.event" -> "zope.lifecycleevent";
"plone.app.event" -> "zope.publisher";
"plone.app.event" -> "zope.schema";
"plone.app.event" -> zope2;
"plone.app.folder" -> distribute;
"plone.app.folder" -> "plone.app.layout";
"plone.app.folder" -> "plone.folder";
"plone.app.folder" -> "products.cmfcore";
"plone.app.folder" -> "products.genericsetup";
"plone.app.folder" -> zope2;
"plone.app.form" -> acquisition;
"plone.app.form" -> datetime;
"plone.app.form" -> distribute;
"plone.app.form" -> "plone.app.vocabularies";
"plone.app.form" -> "plone.locking";
"plone.app.form" -> "products.cmfcore";
"plone.app.form" -> "zope.browser";
"plone.app.form" -> "zope.component";
"plone.app.form" -> "zope.event";
"plone.app.form" -> "zope.formlib";
"plone.app.form" -> "zope.i18n";
"plone.app.form" -> "zope.i18nmessageid";
"plone.app.form" -> "zope.interface";
"plone.app.form" -> "zope.lifecycleevent";
"plone.app.form" -> "zope.schema";
"plone.app.form" -> "zope.site";
"plone.app.form" -> zope2;
"plone.app.imagecropping" -> acquisition;
"plone.app.imagecropping" -> distribute;
"plone.app.imagecropping" -> pillow;
"plone.app.imagecropping" -> "plone.app.imaging";
"plone.app.imagecropping" -> "plone.app.registry";
"plone.app.imagecropping" -> "plone.behavior";
"plone.app.imagecropping" -> "plone.namedfile";
"plone.app.imagecropping" -> "plone.registry";
"plone.app.imagecropping" -> "products.cmfcore";
"plone.app.imagecropping" -> "products.cmfplone";
"plone.app.imagecropping" -> "z3c.caching";
"plone.app.imagecropping" -> "zope.component";
"plone.app.imagecropping" -> "zope.globalrequest";
"plone.app.imagecropping" -> "zope.interface";
"plone.app.imagecropping" -> "zope.lifecycleevent";
"plone.app.imagecropping" -> "zope.schema";
"plone.app.imaging" -> distribute;
"plone.app.imaging" -> "five.globalrequest";
"plone.app.imaging" -> "products.archetypes";
"plone.app.imaging" -> "z3c.caching";
"plone.app.iterate" -> acquisition;
"plone.app.iterate" -> datetime;
"plone.app.iterate" -> distribute;
"plone.app.iterate" -> "plone.locking";
"plone.app.iterate" -> "plone.memoize";
"plone.app.iterate" -> "products.archetypes";
"plone.app.iterate" -> "products.cmfcore";
"plone.app.iterate" -> "products.statusmessages";
"plone.app.iterate" -> zodb3;
"plone.app.iterate" -> "zope.annotation";
"plone.app.iterate" -> "zope.component";
"plone.app.iterate" -> "zope.event";
"plone.app.iterate" -> "zope.i18nmessageid";
"plone.app.iterate" -> "zope.interface";
"plone.app.iterate" -> "zope.lifecycleevent";
"plone.app.iterate" -> "zope.schema";
"plone.app.iterate" -> "zope.viewlet";
"plone.app.iterate" -> zope2;
"plone.app.jquery" -> distribute;
"plone.app.jquery" -> "products.cmfcore";
"plone.app.jquery" -> "products.genericsetup";
"plone.app.jquerytools" -> distribute;
"plone.app.jquerytools" -> "products.cmfcore";
"plone.app.jquerytools" -> "products.genericsetup";
"plone.app.jquerytools" -> "zope.component";
"plone.app.jquerytools" -> zope2;
"plone.app.layout" -> acquisition;
"plone.app.layout" -> datetime;
"plone.app.layout" -> distribute;
"plone.app.layout" -> "plone.app.content";
"plone.app.layout" -> "plone.app.portlets";
"plone.app.layout" -> "plone.app.viewletmanager";
"plone.app.layout" -> "plone.i18n";
"plone.app.layout" -> "plone.memoize";
"plone.app.layout" -> "plone.portlets";
"plone.app.layout" -> "plone.registry";
"plone.app.layout" -> "products.cmfcore";
"plone.app.layout" -> "products.cmfplone";
"plone.app.layout" -> "zope.component";
"plone.app.layout" -> "zope.deferredimport";
"plone.app.layout" -> "zope.deprecation";
"plone.app.layout" -> "zope.dottedname";
"plone.app.layout" -> "zope.i18n";
"plone.app.layout" -> "zope.interface";
"plone.app.layout" -> "zope.publisher";
"plone.app.layout" -> "zope.schema";
"plone.app.layout" -> "zope.viewlet";
"plone.app.layout" -> zope2;
"plone.app.memberschema" -> distribute;
"plone.app.memberschema" -> plone;
"plone.app.memberschema" -> "plone.autoform";
"plone.app.memberschema" -> "plone.memoize";
"plone.app.memberschema" -> "plone.namedfile";
"plone.app.memberschema" -> "plone.z3cform";
"plone.app.memberschema" -> "products.cmfcore";
"plone.app.memberschema" -> "products.pluggableauthservice";
"plone.app.memberschema" -> "products.statusmessages";
"plone.app.memberschema" -> "z3c.form";
"plone.app.memberschema" -> zodb3;
"plone.app.memberschema" -> "zope.dottedname";
"plone.app.memberschema" -> "zope.i18nmessageid";
"plone.app.memberschema" -> "zope.schema";
"plone.app.portlets" -> acquisition;
"plone.app.portlets" -> datetime;
"plone.app.portlets" -> distribute;
"plone.app.portlets" -> feedparser;
"plone.app.portlets" -> "plone.app.layout";
"plone.app.portlets" -> "plone.app.vocabularies";
"plone.app.portlets" -> "plone.i18n";
"plone.app.portlets" -> "plone.memoize";
"plone.app.portlets" -> "plone.portlets";
"plone.app.portlets" -> "products.cmfcore";
"plone.app.portlets" -> "products.cmfplone";
"plone.app.portlets" -> "products.genericsetup";
"plone.app.portlets" -> "products.pluggableauthservice";
"plone.app.portlets" -> transaction;
"plone.app.portlets" -> zodb3;
"plone.app.portlets" -> "zope.annotation";
"plone.app.portlets" -> "zope.browser";
"plone.app.portlets" -> "zope.component";
"plone.app.portlets" -> "zope.configuration";
"plone.app.portlets" -> "zope.container";
"plone.app.portlets" -> "zope.contentprovider";
"plone.app.portlets" -> "zope.event";
"plone.app.portlets" -> "zope.i18nmessageid";
"plone.app.portlets" -> "zope.interface";
"plone.app.portlets" -> "zope.lifecycleevent";
"plone.app.portlets" -> "zope.publisher";
"plone.app.portlets" -> "zope.schema";
"plone.app.portlets" -> "zope.site";
"plone.app.portlets" -> "zope.traversing";
"plone.app.portlets" -> zope2;
"plone.app.querystring" -> datetime;
"plone.app.querystring" -> distribute;
"plone.app.querystring" -> "plone.app.layout";
"plone.app.querystring" -> "plone.app.registry";
"plone.app.querystring" -> "plone.app.vocabularies";
"plone.app.querystring" -> "plone.registry";
"plone.app.querystring" -> "products.cmfcore";
"plone.app.querystring" -> "products.cmfplone";
"plone.app.querystring" -> "zope.component";
"plone.app.querystring" -> "zope.dottedname";
"plone.app.querystring" -> "zope.globalrequest";
"plone.app.querystring" -> "zope.i18n";
"plone.app.querystring" -> "zope.i18nmessageid";
"plone.app.querystring" -> "zope.interface";
"plone.app.querystring" -> "zope.publisher";
"plone.app.querystring" -> "zope.schema";
"plone.app.referenceablebehavior" -> distribute;
"plone.app.referenceablebehavior" -> "plone.behavior";
"plone.app.referenceablebehavior" -> "plone.dexterity";
"plone.app.referenceablebehavior" -> "plone.indexer";
"plone.app.referenceablebehavior" -> "plone.uuid";
"plone.app.referenceablebehavior" -> "products.archetypes";
"plone.app.registry" -> distribute;
"plone.app.registry" -> lxml;
"plone.app.registry" -> "plone.app.z3cform";
"plone.app.registry" -> "plone.autoform";
"plone.app.registry" -> "plone.registry";
"plone.app.registry" -> "plone.supermodel";
"plone.app.registry" -> "products.cmfcore";
"plone.app.registry" -> "products.cmfplone";
"plone.app.registry" -> "products.genericsetup";
"plone.app.registry" -> "products.statusmessages";
"plone.app.registry" -> "zope.component";
"plone.app.registry" -> "zope.dottedname";
"plone.app.registry" -> "zope.i18nmessageid";
"plone.app.registry" -> "zope.interface";
"plone.app.registry" -> zope2;
"plone.app.relationfield" -> distribute;
"plone.app.relationfield" -> "plone.app.vocabularies";
"plone.app.relationfield" -> "plone.app.z3cform";
"plone.app.relationfield" -> "plone.autoform";
"plone.app.relationfield" -> "plone.schemaeditor";
"plone.app.relationfield" -> "plone.supermodel";
"plone.app.relationfield" -> "products.cmfcore";
"plone.app.relationfield" -> "z3c.form";
"plone.app.relationfield" -> "z3c.formwidget.query";
"plone.app.relationfield" -> "zope.component";
"plone.app.relationfield" -> "zope.interface";
"plone.app.relationfield" -> "zope.intid";
"plone.app.relationfield" -> "zope.schema";
"plone.app.standardtiles" -> distribute;
"plone.app.standardtiles" -> lxml;
"plone.app.standardtiles" -> "plone.app.dexterity";
"plone.app.standardtiles" -> "plone.app.discussion";
"plone.app.standardtiles" -> "plone.app.imaging";
"plone.app.standardtiles" -> "plone.app.registry";
"plone.app.standardtiles" -> "plone.app.tiles";
"plone.app.standardtiles" -> requests;
"plone.app.standardtiles" -> "z3c.form";
"plone.app.theming" -> distribute;
"plone.app.theming" -> docutils;
"plone.app.theming" -> "five.globalrequest";
"plone.app.theming" -> lxml;
"plone.app.theming" -> "plone.app.registry";
"plone.app.theming" -> "products.cmfplone";
"plone.app.theming" -> "zope.traversing";
"plone.app.tiles" -> accesscontrol;
"plone.app.tiles" -> distribute;
"plone.app.tiles" -> "plone.autoform";
"plone.app.tiles" -> "plone.memoize";
"plone.app.tiles" -> "plone.namedfile";
"plone.app.tiles" -> "plone.registry";
"plone.app.tiles" -> "plone.tiles";
"plone.app.tiles" -> "plone.uuid";
"plone.app.tiles" -> "plone.z3cform";
"plone.app.tiles" -> "products.statusmessages";
"plone.app.tiles" -> "z3c.form";
"plone.app.tiles" -> "zope.annotation";
"plone.app.tiles" -> "zope.component";
"plone.app.tiles" -> "zope.event";
"plone.app.tiles" -> "zope.i18nmessageid";
"plone.app.tiles" -> "zope.interface";
"plone.app.tiles" -> "zope.lifecycleevent";
"plone.app.tiles" -> "zope.publisher";
"plone.app.tiles" -> "zope.schema";
"plone.app.tiles" -> "zope.security";
"plone.app.tiles" -> "zope.traversing";
"plone.app.tiles" -> zope2;
"plone.app.toolbar" -> acquisition;
"plone.app.toolbar" -> distribute;
"plone.app.toolbar" -> lxml;
"plone.app.toolbar" -> "plone.app.registry";
"plone.app.toolbar" -> "plone.app.widgets";
"plone.app.toolbar" -> "plone.memoize";
"plone.app.toolbar" -> "plone.tiles";
"plone.app.toolbar" -> "products.cmfplone";
"plone.app.toolbar" -> "zope.component";
"plone.app.toolbar" -> "zope.i18nmessageid";
"plone.app.toolbar" -> "zope.interface";
"plone.app.toolbar" -> "zope.traversing";
"plone.app.toolbar" -> "zope.viewlet";
"plone.app.upgrade" -> acquisition;
"plone.app.upgrade" -> distribute;
"plone.app.upgrade" -> "plone.app.folder";
"plone.app.upgrade" -> "plone.app.portlets";
"plone.app.upgrade" -> "plone.portlets";
"plone.app.upgrade" -> "plone.session";
"plone.app.upgrade" -> "products.archetypes";
"plone.app.upgrade" -> "products.cmfcore";
"plone.app.upgrade" -> "products.cmfplone";
"plone.app.upgrade" -> "products.genericsetup";
"plone.app.upgrade" -> "products.pluggableauthservice";
"plone.app.upgrade" -> transaction;
"plone.app.upgrade" -> "zope.component";
"plone.app.upgrade" -> "zope.interface";
"plone.app.upgrade" -> "zope.location";
"plone.app.upgrade" -> "zope.site";
"plone.app.upgrade" -> zope2;
"plone.app.users" -> accesscontrol;
"plone.app.users" -> acquisition;
"plone.app.users" -> distribute;
"plone.app.users" -> "plone.app.layout";
"plone.app.users" -> "plone.autoform";
"plone.app.users" -> "plone.namedfile";
"plone.app.users" -> "plone.protect";
"plone.app.users" -> "plone.uuid";
"plone.app.users" -> "products.cmfcore";
"plone.app.users" -> "products.cmfplone";
"plone.app.users" -> "products.statusmessages";
"plone.app.users" -> "z3c.form";
"plone.app.users" -> zodb3;
"plone.app.users" -> "zope.component";
"plone.app.users" -> "zope.event";
"plone.app.users" -> "zope.interface";
"plone.app.users" -> "zope.schema";
"plone.app.users" -> "zope.site";
"plone.app.users" -> zope2;
"plone.app.versioningbehavior" -> distribute;
"plone.app.versioningbehavior" -> "plone.app.dexterity";
"plone.app.versioningbehavior" -> "plone.autoform";
"plone.app.versioningbehavior" -> "plone.dexterity";
"plone.app.versioningbehavior" -> "plone.namedfile";
"plone.app.versioningbehavior" -> "zope.container";
"plone.app.viewletmanager" -> acquisition;
"plone.app.viewletmanager" -> distribute;
"plone.app.viewletmanager" -> "plone.app.vocabularies";
"plone.app.viewletmanager" -> "products.genericsetup";
"plone.app.viewletmanager" -> zodb3;
"plone.app.viewletmanager" -> "zope.component";
"plone.app.viewletmanager" -> "zope.contentprovider";
"plone.app.viewletmanager" -> "zope.interface";
"plone.app.viewletmanager" -> "zope.site";
"plone.app.viewletmanager" -> "zope.viewlet";
"plone.app.viewletmanager" -> zope2;
"plone.app.vocabularies" -> acquisition;
"plone.app.vocabularies" -> distribute;
"plone.app.vocabularies" -> "plone.app.querystring";
"plone.app.vocabularies" -> "products.cmfcore";
"plone.app.vocabularies" -> pytz;
"plone.app.vocabularies" -> "zope.browser";
"plone.app.vocabularies" -> "zope.component";
"plone.app.vocabularies" -> "zope.formlib";
"plone.app.vocabularies" -> "zope.i18n";
"plone.app.vocabularies" -> "zope.i18nmessageid";
"plone.app.vocabularies" -> "zope.interface";
"plone.app.vocabularies" -> "zope.schema";
"plone.app.vocabularies" -> "zope.site";
"plone.app.vocabularies" -> zope2;
"plone.app.widgets" -> distribute;
"plone.app.widgets" -> "five.globalrequest";
"plone.app.widgets" -> "plone.app.vocabularies";
"plone.app.widgets" -> "plone.app.z3cform";
"plone.app.widgets" -> "products.cmfplone";
"plone.app.workflow" -> acquisition;
"plone.app.workflow" -> datetime;
"plone.app.workflow" -> distribute;
"plone.app.workflow" -> "plone.memoize";
"plone.app.workflow" -> "products.cmfcore";
"plone.app.workflow" -> "products.cmfplone";
"plone.app.workflow" -> "products.genericsetup";
"plone.app.workflow" -> "products.statusmessages";
"plone.app.workflow" -> transaction;
"plone.app.workflow" -> "zope.component";
"plone.app.workflow" -> "zope.dottedname";
"plone.app.workflow" -> "zope.i18n";
"plone.app.workflow" -> "zope.i18nmessageid";
"plone.app.workflow" -> "zope.interface";
"plone.app.workflow" -> "zope.lifecycleevent";
"plone.app.workflow" -> "zope.schema";
"plone.app.workflow" -> "zope.site";
"plone.app.workflow" -> "zope.testing";
"plone.app.workflow" -> zope2;
"plone.behavior" -> distribute;
"plone.behavior" -> "zope.annotation";
"plone.behavior" -> "zope.component";
"plone.behavior" -> "zope.configuration";
"plone.behavior" -> "zope.interface";
"plone.behavior" -> "zope.schema";
"plone.browserlayer" -> distribute;
"plone.browserlayer" -> "products.cmfcore";
"plone.browserlayer" -> "products.genericsetup";
"plone.browserlayer" -> "zope.component";
"plone.browserlayer" -> "zope.interface";
"plone.browserlayer" -> "zope.traversing";
"plone.browserlayer" -> zope2;
"plone.cachepurging" -> distribute;
"plone.cachepurging" -> "five.globalrequest";
"plone.cachepurging" -> "plone.registry";
"plone.cachepurging" -> "z3c.caching";
"plone.cachepurging" -> "zope.annotation";
"plone.cachepurging" -> "zope.component";
"plone.cachepurging" -> "zope.event";
"plone.cachepurging" -> "zope.i18nmessageid";
"plone.cachepurging" -> "zope.interface";
"plone.cachepurging" -> "zope.lifecycleevent";
"plone.cachepurging" -> "zope.schema";
"plone.cachepurging" -> "zope.testing";
"plone.cachepurging" -> zope2;
"plone.dexterity" -> distribute;
"plone.dexterity" -> "plone.autoform";
"plone.dexterity" -> "plone.behavior";
"plone.dexterity" -> "plone.folder";
"plone.dexterity" -> "plone.memoize";
"plone.dexterity" -> "plone.supermodel";
"plone.dexterity" -> "plone.uuid";
"plone.dexterity" -> "plone.z3cform";
"plone.dexterity" -> "products.cmfcore";
"plone.dexterity" -> "products.statusmessages";
"plone.dexterity" -> zodb3;
"plone.dexterity" -> "zope.annotation";
"plone.dexterity" -> "zope.browser";
"plone.dexterity" -> "zope.component";
"plone.dexterity" -> "zope.container";
"plone.dexterity" -> "zope.dottedname";
"plone.dexterity" -> "zope.interface";
"plone.dexterity" -> "zope.lifecycleevent";
"plone.dexterity" -> "zope.location";
"plone.dexterity" -> "zope.publisher";
"plone.dexterity" -> "zope.schema";
"plone.dexterity" -> "zope.security";
"plone.dexterity" -> zope2;
"plone.directives.form" -> distribute;
"plone.directives.form" -> "five.grok";
"plone.directives.form" -> "grokcore.view";
"plone.directives.form" -> "plone.autoform";
"plone.directives.form" -> "plone.supermodel";
"plone.directives.form" -> "plone.z3cform";
"plone.directives.form" -> "products.statusmessages";
"plone.directives.form" -> "zope.deferredimport";
"plone.directives.form" -> "zope.i18nmessageid";
"plone.directives.form" -> "zope.publisher";
"plone.folder" -> distribute;
"plone.folder" -> "plone.memoize";
"plone.folder" -> "products.cmfcore";
"plone.folder" -> "zope.annotation";
"plone.folder" -> "zope.component";
"plone.folder" -> "zope.container";
"plone.folder" -> "zope.interface";
"plone.folder" -> zope2;
"plone.i18n" -> distribute;
"plone.i18n" -> unidecode;
"plone.i18n" -> "zope.component";
"plone.i18n" -> "zope.i18n";
"plone.i18n" -> "zope.interface";
"plone.i18n" -> "zope.publisher";
ploneintranet -> beautifulsoup;
ploneintranet -> celery;
ploneintranet -> distribute;
ploneintranet -> "fake-factory";
ploneintranet -> networkx;
ploneintranet -> pathlib;
ploneintranet -> plone;
ploneintranet -> "plone.api";
ploneintranet -> "plone.app.blocks";
ploneintranet -> "plone.app.theming";
ploneintranet -> "plone.app.tiles";
ploneintranet -> "plone.directives.form";
ploneintranet -> "plone.tiles";
ploneintranet -> redis;
ploneintranet -> requests;
ploneintranet -> tablib;
ploneintranet -> unidecode;
ploneintranet -> "z3c.jbot";
"plone.locking" -> acquisition;
"plone.locking" -> datetime;
"plone.locking" -> distribute;
"plone.locking" -> "products.cmfcore";
"plone.locking" -> zodb3;
"plone.locking" -> "zope.annotation";
"plone.locking" -> "zope.component";
"plone.locking" -> "zope.i18nmessageid";
"plone.locking" -> "zope.interface";
"plone.locking" -> "zope.schema";
"plone.locking" -> "zope.viewlet";
"plone.locking" -> zope2;
"plone.mls.listing" -> "collective.autopermission";
"plone.mls.listing" -> distribute;
"plone.mls.listing" -> pillow;
"plone.mls.listing" -> "plone.api";
"plone.mls.listing" -> "plone.app.dexterity";
"plone.mls.listing" -> "plone.app.referenceablebehavior";
"plone.mls.listing" -> "plone.app.relationfield";
"plone.mls.listing" -> "plone.app.versioningbehavior";
"plone.namedfile" -> distribute;
"plone.namedfile" -> "zope.app.file";
"plone.namedfile" -> "zope.browserpage";
"plone.namedfile" -> "zope.component";
"plone.namedfile" -> "zope.security";
"plone.namedfile" -> "zope.traversing";
"plone.portlet.collection" -> distribute;
"plone.portlet.collection" -> "plone.app.form";
"plone.portlet.collection" -> "plone.app.portlets";
"plone.portlet.collection" -> "plone.app.vocabularies";
"plone.portlet.collection" -> "plone.memoize";
"plone.portlet.collection" -> "plone.portlets";
"plone.portlet.viewlet" -> distribute;
"plone.portlet.viewlet" -> "plone.app.form";
"plone.portlet.viewlet" -> "plone.app.portlets";
"plone.portlet.viewlet" -> "plone.i18n";
"plone.portlet.viewlet" -> "plone.portlets";
"plone.portlet.viewlet" -> "zope.component";
"plone.portlet.viewlet" -> "zope.formlib";
"plone.portlet.viewlet" -> "zope.i18nmessageid";
"plone.portlet.viewlet" -> "zope.interface";
"plone.portlet.viewlet" -> "zope.schema";
"plone.portlet.viewlet" -> zope2;
"plone.protect" -> "collective.monkeypatcher";
"plone.protect" -> distribute;
"plone.protect" -> "five.globalrequest";
"plone.protect" -> "zope.component";
"plone.protect" -> "zope.interface";
"plone.protect" -> zope2;
"plone.releaser" -> argcomplete;
"plone.releaser" -> argh;
"plone.releaser" -> configparser;
"plone.releaser" -> distribute;
"plone.releaser" -> docutils;
"plone.releaser" -> gitpython;
"plone.releaser" -> keyring;
"plone.releaser" -> progress;
"plone.releaser" -> pygithub;
"plone.releaser" -> "zest.releaser";
"plone.schemaeditor" -> distribute;
"plone.schemaeditor" -> "plone.autoform";
"plone.schemaeditor" -> "plone.z3cform";
"plone.schemaeditor" -> "z3c.form";
"plone.schemaeditor" -> "zope.cachedescriptors";
"plone.schemaeditor" -> "zope.component";
"plone.schemaeditor" -> "zope.container";
"plone.schemaeditor" -> "zope.globalrequest";
"plone.schemaeditor" -> "zope.interface";
"plone.schemaeditor" -> "zope.lifecycleevent";
"plone.schemaeditor" -> "zope.publisher";
"plone.schemaeditor" -> "zope.schema";
"plone.schemaeditor" -> zope2;
"plone.session" -> distribute;
"plone.session" -> "plone.protect";
"plone.session" -> "products.pluggableauthservice";
"plone.session" -> "zope.component";
"plone.session" -> "zope.interface";
"plone.session" -> zope2;
"plone.tiles" -> distribute;
"plone.tiles" -> "zope.annotation";
"plone.tiles" -> "zope.app.publisher";
"plone.tiles" -> "zope.component";
"plone.tiles" -> "zope.configuration";
"plone.tiles" -> "zope.interface";
"plone.tiles" -> "zope.publisher";
"plone.tiles" -> "zope.schema";
"plone.tiles" -> "zope.security";
"plone.tiles" -> "zope.traversing";
"plone.tiles" -> zope2;
plumbery -> "apache-libcloud";
plumbery -> bumpversion;
plumbery -> coverage;
plumbery -> cryptography;
plumbery -> flake8;
plumbery -> netifaces;
plumbery -> pyyaml;
plumbery -> sphinx;
plumbery -> tox;
plumbery -> watchdog;
plumbery -> wheel;
polaris -> "dogpile.cache";
polaris -> flask;
polaris -> "flask-login";
polaris -> "flask-sqlalchemy";
polaris -> "flask-wtf";
polaris -> pandas;
polaris -> psycopg2;
polaris -> sqlalchemy;
populartwitterbot -> coveralls;
populartwitterbot -> flake8;
populartwitterbot -> ipdb;
populartwitterbot -> ipython;
populartwitterbot -> isort;
populartwitterbot -> pep8;
populartwitterbot -> pyflakes;
populartwitterbot -> requests;
populartwitterbot -> twitter;
populartwitterbot -> twython;
populartwitterbot -> "vim-debug";
precs -> bumpversion;
precs -> click;
precs -> coverage;
precs -> funcsigs;
precs -> mock;
precs -> pbr;
precs -> py;
precs -> pytest;
precs -> "pytest-cov";
precs -> "pytest-mock";
precs -> six;
precs -> wheel;
"Products.Archetypes" -> acquisition;
"Products.Archetypes" -> datetime;
"Products.Archetypes" -> distribute;
"Products.Archetypes" -> "plone.app.folder";
"Products.Archetypes" -> "plone.app.widgets";
"Products.Archetypes" -> "plone.folder";
"Products.Archetypes" -> "plone.uuid";
"Products.Archetypes" -> "products.cmfcore";
"Products.Archetypes" -> "products.genericsetup";
"Products.Archetypes" -> "products.statusmessages";
"Products.Archetypes" -> transaction;
"Products.Archetypes" -> zodb3;
"Products.Archetypes" -> "zope.component";
"Products.Archetypes" -> "zope.datetime";
"Products.Archetypes" -> "zope.deferredimport";
"Products.Archetypes" -> "zope.event";
"Products.Archetypes" -> "zope.i18n";
"Products.Archetypes" -> "zope.i18nmessageid";
"Products.Archetypes" -> "zope.interface";
"Products.Archetypes" -> "zope.lifecycleevent";
"Products.Archetypes" -> "zope.publisher";
"Products.Archetypes" -> "zope.schema";
"Products.Archetypes" -> "zope.site";
"Products.Archetypes" -> "zope.viewlet";
"Products.Archetypes" -> zope2;
"Products.ATContentTypes" -> acquisition;
"Products.ATContentTypes" -> datetime;
"Products.ATContentTypes" -> distribute;
"Products.ATContentTypes" -> "plone.app.collection";
"Products.ATContentTypes" -> "plone.app.folder";
"Products.ATContentTypes" -> "plone.app.layout";
"Products.ATContentTypes" -> "plone.app.widgets";
"Products.ATContentTypes" -> "plone.i18n";
"Products.ATContentTypes" -> "plone.memoize";
"Products.ATContentTypes" -> "products.archetypes";
"Products.ATContentTypes" -> "products.cmfcore";
"Products.ATContentTypes" -> "products.cmfplone";
"Products.ATContentTypes" -> "products.genericsetup";
"Products.ATContentTypes" -> transaction;
"Products.ATContentTypes" -> zconfig;
"Products.ATContentTypes" -> zodb3;
"Products.ATContentTypes" -> "zope.component";
"Products.ATContentTypes" -> "zope.i18n";
"Products.ATContentTypes" -> "zope.i18nmessageid";
"Products.ATContentTypes" -> "zope.interface";
"Products.ATContentTypes" -> "zope.publisher";
"Products.ATContentTypes" -> zope2;
"Products.CMFEditions" -> acquisition;
"Products.CMFEditions" -> datetime;
"Products.CMFEditions" -> distribute;
"Products.CMFEditions" -> "products.cmfcore";
"Products.CMFEditions" -> "products.genericsetup";
"Products.CMFEditions" -> transaction;
"Products.CMFEditions" -> zodb3;
"Products.CMFEditions" -> "zope.dottedname";
"Products.CMFEditions" -> "zope.i18nmessageid";
"Products.CMFEditions" -> "zope.interface";
"Products.CMFEditions" -> zope2;
"Products.CMFPlone" -> acquisition;
"Products.CMFPlone" -> cssmin;
"Products.CMFPlone" -> datetime;
"Products.CMFPlone" -> distribute;
"Products.CMFPlone" -> pillow;
"Products.CMFPlone" -> "plone.api";
"Products.CMFPlone" -> "plone.app.content";
"Products.CMFPlone" -> "plone.app.contentmenu";
"Products.CMFPlone" -> "plone.app.contentrules";
"Products.CMFPlone" -> "plone.app.customerize";
"Products.CMFPlone" -> "plone.app.dexterity";
"Products.CMFPlone" -> "plone.app.discussion";
"Products.CMFPlone" -> "plone.app.folder";
"Products.CMFPlone" -> "plone.app.layout";
"Products.CMFPlone" -> "plone.app.portlets";
"Products.CMFPlone" -> "plone.app.registry";
"Products.CMFPlone" -> "plone.app.theming";
"Products.CMFPlone" -> "plone.app.users";
"Products.CMFPlone" -> "plone.app.viewletmanager";
"Products.CMFPlone" -> "plone.app.vocabularies";
"Products.CMFPlone" -> "plone.app.workflow";
"Products.CMFPlone" -> "plone.browserlayer";
"Products.CMFPlone" -> "plone.i18n";
"Products.CMFPlone" -> "plone.indexer";
"Products.CMFPlone" -> "plone.locking";
"Products.CMFPlone" -> "plone.memoize";
"Products.CMFPlone" -> "plone.portlet.collection";
"Products.CMFPlone" -> "plone.portlets";
"Products.CMFPlone" -> "plone.protect";
"Products.CMFPlone" -> "plone.registry";
"Products.CMFPlone" -> "plone.session";
"Products.CMFPlone" -> "products.cmfcore";
"Products.CMFPlone" -> "products.genericsetup";
"Products.CMFPlone" -> "products.pluggableauthservice";
"Products.CMFPlone" -> "products.statusmessages";
"Products.CMFPlone" -> slimit;
"Products.CMFPlone" -> transaction;
"Products.CMFPlone" -> zodb3;
"Products.CMFPlone" -> "zope.cachedescriptors";
"Products.CMFPlone" -> "zope.component";
"Products.CMFPlone" -> "zope.container";
"Products.CMFPlone" -> "zope.deferredimport";
"Products.CMFPlone" -> "zope.deprecation";
"Products.CMFPlone" -> "zope.dottedname";
"Products.CMFPlone" -> "zope.event";
"Products.CMFPlone" -> "zope.i18n";
"Products.CMFPlone" -> "zope.i18nmessageid";
"Products.CMFPlone" -> "zope.interface";
"Products.CMFPlone" -> "zope.location";
"Products.CMFPlone" -> "zope.pagetemplate";
"Products.CMFPlone" -> "zope.publisher";
"Products.CMFPlone" -> "zope.site";
"Products.CMFPlone" -> "zope.tales";
"Products.CMFPlone" -> "zope.traversing";
"Products.CMFPlone" -> zope2;
"Products.Marshall" -> acquisition;
"Products.Marshall" -> datetime;
"Products.Marshall" -> distribute;
"Products.Marshall" -> "plone.uuid";
"Products.Marshall" -> "products.archetypes";
"Products.Marshall" -> "products.cmfcore";
"Products.Marshall" -> "products.genericsetup";
"Products.Marshall" -> transaction;
"Products.Marshall" -> "zope.deprecation";
"Products.Marshall" -> "zope.interface";
"Products.Marshall" -> zope2;
"Products.PasswordResetTool" -> acquisition;
"Products.PasswordResetTool" -> datetime;
"Products.PasswordResetTool" -> distribute;
"Products.PasswordResetTool" -> "plone.app.registry";
"Products.PasswordResetTool" -> "plone.memoize";
"Products.PasswordResetTool" -> "products.cmfcore";
"Products.PasswordResetTool" -> "products.cmfplone";
"Products.PasswordResetTool" -> "zope.component";
"Products.PasswordResetTool" -> "zope.i18n";
"Products.PasswordResetTool" -> "zope.i18nmessageid";
"Products.PasswordResetTool" -> "zope.interface";
"Products.PasswordResetTool" -> zope2;
"Products.ResourceRegistries" -> acquisition;
"Products.ResourceRegistries" -> datetime;
"Products.ResourceRegistries" -> distribute;
"Products.ResourceRegistries" -> "plone.app.registry";
"Products.ResourceRegistries" -> "plone.protect";
"Products.ResourceRegistries" -> "products.cmfcore";
"Products.ResourceRegistries" -> "products.genericsetup";
"Products.ResourceRegistries" -> zodb3;
"Products.ResourceRegistries" -> "zope.component";
"Products.ResourceRegistries" -> "zope.interface";
"Products.ResourceRegistries" -> "zope.viewlet";
"Products.ResourceRegistries" -> zope2;
"Products.SilvaDocument" -> distribute;
"Products.SilvaDocument" -> "five.grok";
"Products.SilvaDocument" -> lxml;
"Products.SilvaDocument" -> "products.silva";
"Products.SilvaDocument" -> "silva.core.conf";
"Products.SilvaDocument" -> "silva.core.interfaces";
"Products.SilvaDocument" -> "silva.core.layout";
"Products.SilvaDocument" -> "silva.core.references";
"Products.SilvaDocument" -> "silva.core.services";
"Products.SilvaDocument" -> "silva.core.upgrade";
"Products.SilvaDocument" -> "silva.core.views";
"Products.SilvaDocument" -> "silva.translations";
"Products.SilvaDocument" -> "zope.annotation";
"Products.SilvaDocument" -> "zope.component";
"Products.SilvaDocument" -> "zope.event";
"Products.SilvaDocument" -> "zope.i18nmessageid";
"Products.SilvaDocument" -> "zope.interface";
"Products.SilvaDocument" -> "zope.intid";
"Products.SilvaDocument" -> "zope.lifecycleevent";
"Products.SilvaDocument" -> "zope.publisher";
"Products.SilvaDocument" -> "zope.traversing";
"Products.SilvaExternalSources" -> "collective.monkeypatcher";
"Products.SilvaExternalSources" -> distribute;
"Products.SilvaExternalSources" -> "five.grok";
"Products.SilvaExternalSources" -> "grokcore.chameleon";
"Products.SilvaExternalSources" -> lxml;
"Products.SilvaExternalSources" -> "products.silva";
"Products.SilvaExternalSources" -> "silva.core.conf";
"Products.SilvaExternalSources" -> "silva.core.editor";
"Products.SilvaExternalSources" -> "silva.core.interfaces";
"Products.SilvaExternalSources" -> "silva.core.services";
"Products.SilvaExternalSources" -> "silva.core.views";
"Products.SilvaExternalSources" -> "silva.translations";
"Products.SilvaExternalSources" -> "silva.ui";
"Products.SilvaExternalSources" -> "zeam.form.silva";
"Products.SilvaExternalSources" -> "zeam.utils.batch";
"Products.SilvaExternalSources" -> "zope.annotation";
"Products.SilvaExternalSources" -> "zope.component";
"Products.SilvaExternalSources" -> "zope.event";
"Products.SilvaExternalSources" -> "zope.i18n";
"Products.SilvaExternalSources" -> "zope.interface";
"Products.SilvaExternalSources" -> "zope.intid";
"Products.SilvaExternalSources" -> "zope.lifecycleevent";
"Products.SilvaExternalSources" -> "zope.publisher";
"Products.SilvaExternalSources" -> "zope.schema";
"Products.SilvaFind" -> distribute;
"Products.SilvaFind" -> "five.grok";
"Products.SilvaFind" -> "grokcore.chameleon";
"Products.SilvaFind" -> "products.silva";
"Products.SilvaFind" -> "silva.core.conf";
"Products.SilvaFind" -> "silva.core.interfaces";
"Products.SilvaFind" -> "silva.core.references";
"Products.SilvaFind" -> "silva.core.services";
"Products.SilvaFind" -> "silva.core.smi";
"Products.SilvaFind" -> "silva.core.upgrade";
"Products.SilvaFind" -> "silva.core.views";
"Products.SilvaFind" -> "silva.ui";
"Products.SilvaFind" -> "zeam.form.silva";
"Products.SilvaFind" -> "zeam.utils.batch";
"Products.SilvaFind" -> "zope.component";
"Products.SilvaFind" -> "zope.event";
"Products.SilvaFind" -> "zope.i18nmessageid";
"Products.SilvaFind" -> "zope.interface";
"Products.SilvaFind" -> "zope.lifecycleevent";
"Products.SilvaFind" -> "zope.publisher";
"Products.SilvaFind" -> "zope.traversing";
"Products.SilvaPoll" -> distribute;
"Products.SilvaPoll" -> "five.grok";
"Products.SilvaPoll" -> "grokcore.chameleon";
"Products.SilvaPoll" -> "products.silva";
"Products.SilvaPoll" -> "silva.core.conf";
"Products.SilvaPoll" -> "silva.core.interfaces";
"Products.SilvaPoll" -> "silva.core.services";
"Products.SilvaPoll" -> "silva.core.smi";
"Products.SilvaPoll" -> "silva.core.views";
"Products.SilvaPoll" -> "silva.fanstatic";
"Products.SilvaPoll" -> "zeam.form.silva";
"Products.SilvaPoll" -> "zope.component";
"Products.SilvaPoll" -> "zope.interface";
"Products.SilvaPoll" -> "zope.lifecycleevent";
"Products.SilvaPoll" -> "zope.publisher";
"Products.SilvaPoll" -> "zope.schema";
"Products.SilvaPoll" -> "zope.traversing";
"proso-apps" -> clint;
"proso-apps" -> django;
"proso-apps" -> "django-debug-toolbar";
"proso-apps" -> flake8;
"proso-apps" -> jsonschema;
"proso-apps" -> markdown;
"proso-apps" -> mock;
"proso-apps" -> pandas;
"proso-apps" -> pillow;
"proso-apps" -> psycopg2;
"proso-apps" -> pyyaml;
"proso-apps" -> seaborn;
"proso-geography-analysis" -> argparse;
"proso-geography-analysis" -> clint;
"proso-geography-analysis" -> cython;
"proso-geography-analysis" -> matplotlib;
"proso-geography-analysis" -> numexpr;
"proso-geography-analysis" -> numpy;
"proso-geography-analysis" -> pandas;
"proso-geography-analysis" -> "python-dateutil";
"proso-geography-analysis" -> scipy;
"proso-geography-analysis" -> tables;
"pspolicy.homes4.base" -> "collective.cover";
"pspolicy.homes4.base" -> distribute;
"pspolicy.homes4.base" -> "plone.app.caching";
"pspolicy.homes4.base" -> "plone.app.theming";
"pspolicy.homes4.base" -> "plone.mls.listing";
"pspolicy.homes4.base" -> "products.ploneformgen";
"pspolicy.homes4.base" -> "sc.social.like";
psycopg2 -> pygments;
psycopg2 -> sphinx;
puente -> babel;
puente -> "check-manifest";
puente -> django;
puente -> jinja2;
puente -> pytest;
puente -> "pytest-django";
puente -> sphinx;
puente -> tox;
puente -> twine;
puente -> wheel;
"pug-ann" -> cffi;
"pug-ann" -> chardet;
"pug-ann" -> fuzzywuzzy;
"pug-ann" -> matplotlib;
"pug-ann" -> numpy;
"pug-ann" -> pandas;
"pug-ann" -> pillow;
"pug-ann" -> pip;
"pug-ann" -> progressbar2;
"pug-ann" -> "pug-nlp";
"pug-ann" -> pyopenssl;
"pug-ann" -> pyparsing;
"pug-ann" -> "python-dateutil";
"pug-ann" -> "python-levenshtein";
"pug-ann" -> "python-slugify";
"pug-ann" -> pytz;
"pug-ann" -> pyzmq;
"pug-ann" -> scipy;
"pug-ann" -> six;
"pug-ann" -> unidecode;
"pug-ann" -> wsgiref;
"pug-ann" -> xlrd;
"pug-dj" -> cffi;
"pug-dj" -> chardet;
"pug-dj" -> django;
"pug-dj" -> future;
"pug-dj" -> matplotlib;
"pug-dj" -> numpy;
"pug-dj" -> pandas;
"pug-dj" -> pillow;
"pug-dj" -> pip;
"pug-dj" -> "pug-nlp";
"pug-dj" -> pyopenssl;
"pug-dj" -> pypandoc;
"pug-dj" -> "python-dateutil";
"pug-dj" -> pytz;
"pug-dj" -> pyzmq;
"pug-dj" -> six;
"pug-dj" -> unidecode;
"pug-dj" -> wsgiref;
"pug-invest" -> cffi;
"pug-invest" -> chardet;
"pug-invest" -> future;
"pug-invest" -> fuzzywuzzy;
"pug-invest" -> matplotlib;
"pug-invest" -> pandas;
"pug-invest" -> pip;
"pug-invest" -> progressbar2;
"pug-invest" -> pyopenssl;
"pug-invest" -> "python-dateutil";
"pug-invest" -> pytz;
"pug-invest" -> pyzmq;
"pug-invest" -> scipy;
"pug-invest" -> six;
"pug-invest" -> unidecode;
"pug-invest" -> wsgiref;
"pug-nlp" -> cffi;
"pug-nlp" -> chardet;
"pug-nlp" -> fuzzywuzzy;
"pug-nlp" -> matplotlib;
"pug-nlp" -> pandas;
"pug-nlp" -> pillow;
"pug-nlp" -> pip;
"pug-nlp" -> progressbar2;
"pug-nlp" -> pyopenssl;
"pug-nlp" -> "python-dateutil";
"pug-nlp" -> "python-levenshtein";
"pug-nlp" -> "python-slugify";
"pug-nlp" -> pytz;
"pug-nlp" -> pyzmq;
"pug-nlp" -> six;
"pug-nlp" -> unidecode;
"pug-nlp" -> wsgiref;
"pug-nlp" -> xlrd;
purkinje -> "cov-core";
purkinje -> coverage;
purkinje -> coveralls;
purkinje -> cssmin;
purkinje -> flake8;
purkinje -> flask;
purkinje -> "flask-assets";
purkinje -> "flask-script";
purkinje -> flotsam;
purkinje -> future;
purkinje -> gevent;
purkinje -> "gevent-websocket";
purkinje -> greenlet;
purkinje -> itsdangerous;
purkinje -> jinja2;
purkinje -> jsmin;
purkinje -> markupsafe;
purkinje -> mock;
purkinje -> pep8;
purkinje -> "purkinje-messages";
purkinje -> py;
purkinje -> pyaml;
purkinje -> pylint;
purkinje -> "pytest-cache";
purkinje -> "pytest-capturelog";
purkinje -> "pytest-cov";
purkinje -> "pytest-pep8";
purkinje -> "restructuredtext-lint";
purkinje -> six;
purkinje -> sphinx;
purkinje -> "sphinx-autobuild";
purkinje -> "sphinx-bootstrap-theme";
purkinje -> tox;
purkinje -> voluptuous;
purkinje -> webassets;
purkinje -> "websocket-client";
purkinje -> werkzeug;
purkinje -> wheel;
purkinje -> wsgiref;
"purkinje-messages" -> "cov-core";
"purkinje-messages" -> coverage;
"purkinje-messages" -> coveralls;
"purkinje-messages" -> flake8;
"purkinje-messages" -> flotsam;
"purkinje-messages" -> future;
"purkinje-messages" -> mock;
"purkinje-messages" -> pep8;
"purkinje-messages" -> pylint;
"purkinje-messages" -> "pytest-cache";
"purkinje-messages" -> "pytest-cov";
"purkinje-messages" -> "pytest-pep8";
"purkinje-messages" -> "restructuredtext-lint";
"purkinje-messages" -> sphinx;
"purkinje-messages" -> "sphinx-autobuild";
"purkinje-messages" -> tox;
"purkinje-messages" -> voluptuous;
"purkinje-messages" -> wheel;
pyaml -> pyyaml;
"pyannote.core" -> networkx;
"pyannote.core" -> numexpr;
"pyannote.core" -> numpy;
"pyannote.core" -> pandas;
"pyannote.core" -> simplejson;
"pyannote.core" -> six;
"pyasn1-modules" -> pyasn1;
pybitbucket -> alabaster;
pybitbucket -> babel;
pybitbucket -> bumpversion;
pybitbucket -> colorama;
pybitbucket -> coverage;
pybitbucket -> docutils;
pybitbucket -> flake8;
pybitbucket -> future;
pybitbucket -> httpretty;
pybitbucket -> jinja2;
pybitbucket -> markupsafe;
pybitbucket -> mccabe;
pybitbucket -> mock;
pybitbucket -> oauthlib;
pybitbucket -> paver;
pybitbucket -> pep8;
pybitbucket -> py;
pybitbucket -> pyflakes;
pybitbucket -> pygments;
pybitbucket -> pytest;
pybitbucket -> "pytest-cov";
pybitbucket -> pytz;
pybitbucket -> requests;
pybitbucket -> "requests-oauthlib";
pybitbucket -> six;
pybitbucket -> sphinx;
pybitbucket -> "sphinx-rtd-theme";
pybitbucket -> uritemplate;
pybitcoin -> ecdsa;
pybitcoin -> requests;
pycadf -> coverage;
pycadf -> debtcollector;
pycadf -> discover;
pycadf -> fixtures;
pycadf -> hacking;
pycadf -> "oslo.config";
pycadf -> "oslo.serialization";
pycadf -> oslosphinx;
pycadf -> oslotest;
pycadf -> "python-subunit";
pycadf -> pytz;
pycadf -> six;
pycadf -> sphinx;
pycadf -> testrepository;
pycadf -> testtools;
pycurl -> bottle;
pycurl -> nose;
pycurl -> pyflakes;
pycurl -> simplejson;
pydecode -> ipython;
pydecode -> matplotlib;
pydecode -> networkx;
pydecode -> nose;
pydecode -> numpy;
pydecode -> numpydoc;
pydecode -> pandas;
pydecode -> pygraphviz;
pydecode -> pyzmq;
pydecode -> scipy;
pydecode -> "sphinx-rtd-theme";
pyeapi -> "check-manifest";
pyeapi -> coverage;
pyeapi -> coveralls;
pyeapi -> flake8;
pyeapi -> mock;
pyeapi -> netaddr;
pyeapi -> pep8;
pyeapi -> "pep8-naming";
pyeapi -> pyflakes;
pyeapi -> requirements;
pyeapi -> sphinx;
pyeapi -> "sphinxcontrib-napoleon";
pyeapi -> twine;
pyejabberd -> "check-manifest";
pyejabberd -> coverage;
pyejabberd -> coveralls;
pyejabberd -> docutils;
pyejabberd -> flake8;
pyejabberd -> "ndg-httpsclient";
pyejabberd -> pyasn1;
pyejabberd -> pygments;
pyejabberd -> pyopenssl;
pyejabberd -> pytest;
pyejabberd -> sphinx;
pyejabberd -> "sphinx-py3doc-enhanced-theme";
pyejabberd -> "sphinxcontrib-napoleon";
pyethapp -> click;
pyethapp -> decorator;
pyethapp -> devp2p;
pyethapp -> ethereum;
pyethapp -> gevent;
pyethapp -> ipython;
pyethapp -> pexpect;
pyethapp -> pyyaml;
pyethapp -> requests;
pyethapp -> scrypt;
pyethapp -> werkzeug;
pyethapp -> wheel;
pyethereum -> bottle;
pyethereum -> coveralls;
pyethereum -> docopt;
pyethereum -> mock;
pyethereum -> pytest;
pyethereum -> "pytest-timeout";
pyethereum -> "repoze.lru";
pyethereum -> requests;
pyethereum -> structlog;
pyethereum -> waitress;
pyfits -> numpy;
pyfits -> numpydoc;
pyfits -> "sphinxcontrib-programoutput";
PyGall -> babel;
PyGall -> "fa.jquery";
PyGall -> pil;
PyGall -> pyramid;
PyGall -> "pyramid-tm";
PyGall -> sqlalchemy;
PyGall -> weberror;
PyGall -> webhelpers;
PyGall -> webob;
pygeogrids -> mock;
pygeogrids -> netcdf4;
pygeogrids -> numpy;
pygeogrids -> numpydoc;
pygeogrids -> pyproj;
pygeogrids -> pytest;
pygeogrids -> "pytest-cov";
pygeogrids -> "sphinx-rtd-theme";
pygerrit -> docutils;
pygerrit -> ecdsa;
pygerrit -> jinja2;
pygerrit -> markupsafe;
pygerrit -> paramiko;
pygerrit -> pbr;
pygerrit -> pep257;
pygerrit -> pep8;
pygerrit -> pycrypto;
pygerrit -> pyflakes;
pygerrit -> pygments;
pygerrit -> requests;
pygerrit -> sphinx;
pyghmi -> coverage;
pyghmi -> discover;
pyghmi -> fixtures;
pyghmi -> hacking;
pyghmi -> pycrypto;
pyghmi -> "python-subunit";
pyghmi -> sphinx;
pyghmi -> testrepository;
pyghmi -> testscenarios;
pyghmi -> testtools;
pygogo -> alabaster;
pygogo -> astroid;
pygogo -> babel;
pygogo -> colorama;
pygogo -> coverage;
pygogo -> docutils;
pygogo -> flake8;
pygogo -> future;
pygogo -> jinja2;
pygogo -> "lazy-object-proxy";
pygogo -> "logilab-common";
pygogo -> nose;
pygogo -> pep8;
pygogo -> pkutils;
pygogo -> pluggy;
pygogo -> py;
pygogo -> pyflakes;
pygogo -> pygments;
pygogo -> pylint;
pygogo -> pytz;
pygogo -> six;
pygogo -> snowballstemmer;
pygogo -> sphinx;
pygogo -> "sphinx-rtd-theme";
pygogo -> testfixtures;
pygogo -> tox;
pygogo -> twine;
pygogo -> virtualenv;
pygogo -> wheel;
pygogo -> wrapt;
PyGSP -> flake8;
PyGSP -> matplotlib;
PyGSP -> numpy;
PyGSP -> numpydoc;
PyGSP -> scipy;
PyGSP -> sphinx;
PyGSP -> "sphinx-rtd-theme";
PyGSP -> "sphinxcontrib-bibtex";
PyGSP -> unittest2;
PyGSP -> wheel;
PyInstaller -> babel;
PyInstaller -> boto3;
PyInstaller -> botocore;
PyInstaller -> chardet;
PyInstaller -> "check-manifest";
PyInstaller -> distribute;
PyInstaller -> django;
PyInstaller -> docutils;
PyInstaller -> gevent;
PyInstaller -> ipython;
PyInstaller -> jinja2;
PyInstaller -> keyring;
PyInstaller -> lxml;
PyInstaller -> markdown;
PyInstaller -> matplotlib;
PyInstaller -> mock;
PyInstaller -> "mysql-python";
PyInstaller -> numpy;
PyInstaller -> pandas;
PyInstaller -> pil;
PyInstaller -> pillow;
PyInstaller -> psycopg2;
PyInstaller -> pycparser;
PyInstaller -> pycrypto;
PyInstaller -> pyenchant;
PyInstaller -> pygame;
PyInstaller -> pygments;
PyInstaller -> pylint;
PyInstaller -> pyroma;
PyInstaller -> pyside;
PyInstaller -> pytest;
PyInstaller -> "pytest-timeout";
PyInstaller -> "pytest-xdist";
PyInstaller -> pytz;
PyInstaller -> pyusb;
PyInstaller -> pyzmq;
PyInstaller -> scipy;
PyInstaller -> simplejson;
PyInstaller -> sphinx;
PyInstaller -> sqlalchemy;
PyInstaller -> twine;
PyInstaller -> twisted;
PyInstaller -> uuid;
PyInstaller -> wheel;
PyInstaller -> "zest.releaser";
PyInstaller -> "zope.interface";
pyJunosManager -> ecdsa;
pyJunosManager -> jinja2;
pyJunosManager -> lxml;
pyJunosManager -> markupsafe;
pyJunosManager -> netaddr;
pyJunosManager -> paramiko;
pyJunosManager -> pycrypto;
pyJunosManager -> pyyaml;
pyJunosManager -> wsgiref;
PyLTI -> flask;
PyLTI -> httplib2;
PyLTI -> httpretty;
PyLTI -> oauth;
PyLTI -> oauth2;
PyLTI -> oauthlib;
PyLTI -> pyflakes;
PyLTI -> pytest;
PyLTI -> "pytest-cache";
PyLTI -> "pytest-cov";
PyLTI -> "pytest-flakes";
PyLTI -> "pytest-pep8";
PyLucid -> click;
PyLucid -> "cmsplugin-filer";
PyLucid -> django;
PyLucid -> "django-cms";
PyLucid -> "django-compressor";
PyLucid -> "django-debug-toolbar";
PyLucid -> "django-filer";
PyLucid -> "django-reversion";
PyLucid -> "djangocms-text-ckeditor";
PyLucid -> pillow;
PyLucid -> pygments;
PyLucid -> pytz;
pylxd -> babel;
pylxd -> coverage;
pylxd -> ddt;
pylxd -> discover;
pylxd -> hacking;
pylxd -> "os-testr";
pylxd -> oslosphinx;
pylxd -> oslotest;
pylxd -> pbr;
pylxd -> pyopenssl;
pylxd -> "python-dateutil";
pylxd -> "python-subunit";
pylxd -> six;
pylxd -> sphinx;
pylxd -> ws4py;
pymatgen -> enum34;
pymatgen -> matplotlib;
pymatgen -> mock;
pymatgen -> numpy;
pymatgen -> pydispatcher;
pymatgen -> pyyaml;
pymatgen -> requests;
pymatgen -> scipy;
pymatgen -> six;
pymatgen -> sympy;
pymatgen -> tabulate;
pymystem3 -> colorama;
pymystem3 -> docutils;
pymystem3 -> flake8;
pymystem3 -> jinja2;
pymystem3 -> markupsafe;
pymystem3 -> mccabe;
pymystem3 -> mock;
pymystem3 -> paver;
pymystem3 -> pep8;
pymystem3 -> py;
pymystem3 -> pyflakes;
pymystem3 -> pygments;
pymystem3 -> pytest;
pymystem3 -> requests;
pymystem3 -> sphinx;
PyNLPIR -> coverage;
PyNLPIR -> docutils;
PyNLPIR -> flake8;
PyNLPIR -> jinja2;
PyNLPIR -> markupsafe;
PyNLPIR -> mccabe;
PyNLPIR -> pep8;
PyNLPIR -> py;
PyNLPIR -> pyflakes;
PyNLPIR -> pygments;
PyNLPIR -> sphinx;
PyNLPIR -> tox;
PyNLPIR -> virtualenv;
pyolite -> argparse;
pyolite -> coverage;
pyolite -> gitdb;
pyolite -> mock;
pyolite -> nose;
pyolite -> sh;
pyolite -> six;
pyolite -> wsgiref;
pypowervm -> coverage;
pypowervm -> discover;
pypowervm -> fixtures;
pypowervm -> futures;
pypowervm -> hacking;
pypowervm -> lxml;
pypowervm -> mock;
pypowervm -> "oslo.concurrency";
pypowervm -> "oslo.context";
pypowervm -> "oslo.i18n";
pypowervm -> "oslo.log";
pypowervm -> "oslo.utils";
pypowervm -> oslosphinx;
pypowervm -> pbr;
pypowervm -> psutil;
pypowervm -> pyasn1;
pypowervm -> "pyasn1-modules";
pypowervm -> pylint;
pypowervm -> "python-subunit";
pypowervm -> pytz;
pypowervm -> requests;
pypowervm -> six;
pypowervm -> sphinx;
pypowervm -> taskflow;
pypowervm -> testrepository;
pypowervm -> testscenarios;
pypowervm -> testtools;
pyramid -> "-";
pyramid -> requirements;
"pyramid-notebook" -> beautifulsoup4;
"pyramid-notebook" -> certifi;
"pyramid-notebook" -> click;
"pyramid-notebook" -> "cov-core";
"pyramid-notebook" -> coverage;
"pyramid-notebook" -> gnureadline;
"pyramid-notebook" -> ipdb;
"pyramid-notebook" -> ipython;
"pyramid-notebook" -> jinja2;
"pyramid-notebook" -> jsonschema;
"pyramid-notebook" -> markupsafe;
"pyramid-notebook" -> mistune;
"pyramid-notebook" -> paste;
"pyramid-notebook" -> pastedeploy;
"pyramid-notebook" -> psutil;
"pyramid-notebook" -> py;
"pyramid-notebook" -> pygments;
"pyramid-notebook" -> pyramid;
"pyramid-notebook" -> "pyramid-jinja2";
"pyramid-notebook" -> pytest;
"pyramid-notebook" -> "pytest-cov";
"pyramid-notebook" -> pyzmq;
"pyramid-notebook" -> "repoze.lru";
"pyramid-notebook" -> requests;
"pyramid-notebook" -> selenium;
"pyramid-notebook" -> six;
"pyramid-notebook" -> splinter;
"pyramid-notebook" -> tornado;
"pyramid-notebook" -> translationstring;
"pyramid-notebook" -> uwsgi;
"pyramid-notebook" -> venusian;
"pyramid-notebook" -> waitress;
"pyramid-notebook" -> webob;
"pyramid-notebook" -> webtest;
"pyramid-notebook" -> ws4py;
"pyramid-notebook" -> "zope.deprecation";
"pyramid-notebook" -> "zope.interface";
pyramid_promosite -> babel;
pyramid_promosite -> pyramid;
pyramid_promosite -> "pyramid-debugtoolbar";
pyramid_promosite -> "pyramid-jinja2";
pyramid_promosite -> "pyramid-tm";
pyramid_promosite -> pytils;
pyramid_promosite -> sqlalchemy;
pyramid_promosite -> transaction;
pyramid_promosite -> waitress;
pyramid_promosite -> "zope.sqlalchemy";
pyrene -> fixtures;
pyrene -> mock;
pyrene -> nose;
pyrene -> passlib;
pyrene -> pip;
pyrene -> pkginfo;
pyrene -> requests;
pyrene -> termcolor;
pyrene -> testtools;
pyrene -> twine;
pyshaker -> coverage;
pyshaker -> hacking;
pyshaker -> iso8601;
pyshaker -> jinja2;
pyshaker -> mock;
pyshaker -> "oslo.concurrency";
pyshaker -> "oslo.config";
pyshaker -> "oslo.i18n";
pyshaker -> "oslo.log";
pyshaker -> "oslo.serialization";
pyshaker -> "oslo.utils";
pyshaker -> oslotest;
pyshaker -> pbr;
pyshaker -> psutil;
pyshaker -> pygal;
pyshaker -> "python-glanceclient";
pyshaker -> "python-heatclient";
pyshaker -> "python-keystoneclient";
pyshaker -> "python-neutronclient";
pyshaker -> "python-novaclient";
pyshaker -> "python-subunit";
pyshaker -> pyyaml;
pyshaker -> pyzmq;
pyshaker -> six;
pyshaker -> sphinx;
pyshaker -> "sphinx-rtd-theme";
pyshaker -> "sphinxcontrib-httpdomain";
pyshaker -> testrepository;
pyshaker -> testtools;
pysnmp -> pyasn1;
pysnmp -> pycrypto;
pyspider -> amqp;
pyspider -> chardet;
pyspider -> click;
pyspider -> cssselect;
pyspider -> flask;
pyspider -> "flask-login";
pyspider -> jinja2;
pyspider -> kombu;
pyspider -> lxml;
pyspider -> "mysql-connector-python";
pyspider -> pika;
pyspider -> psycopg2;
pyspider -> pycurl;
pyspider -> pymongo;
pyspider -> pyquery;
pyspider -> redis;
pyspider -> requests;
pyspider -> six;
pyspider -> sqlalchemy;
pyspider -> tornado;
pyspider -> unittest2;
pyspotify -> flake8;
pyspotify -> invoke;
pyspotify -> mock;
pyspotify -> pytest;
pyspotify -> "pytest-cov";
pyspotify -> sphinx;
pyspotify -> tox;
pyspotify -> twine;
pytesmo -> cython;
pytesmo -> ipython;
pytesmo -> matplotlib;
pytesmo -> netcdf4;
pytesmo -> numpy;
pytesmo -> pandas;
pytesmo -> pygeogrids;
pytesmo -> pytest;
pytesmo -> scipy;
pytesmo -> sphinx;
pytesmo -> "sphinx-rtd-theme";
pytesmo -> statsmodels;
pytest -> pyyaml;
pytest -> sphinx;
"pytest-cache" -> pytest;
"pytest-cov" -> sphinx;
"pytest-cov" -> "sphinx-py3doc-enhanced-theme";
"pytest-django" -> django;
"pytest-django" -> "django-configurations";
"pytest-django" -> "pytest-xdist";
"pytest-django" -> south;
"pytest-django" -> tox;
"pytest-django" -> twine;
"pytest-django" -> wheel;
"pytest-flakes" -> pyflakes;
"pytest-flakes" -> pytest;
"pytest-flakes" -> "pytest-cache";
"pytest-purkinje" -> "cov-core";
"pytest-purkinje" -> coverage;
"pytest-purkinje" -> coveralls;
"pytest-purkinje" -> flake8;
"pytest-purkinje" -> flotsam;
"pytest-purkinje" -> future;
"pytest-purkinje" -> mock;
"pytest-purkinje" -> pep8;
"pytest-purkinje" -> "purkinje-messages";
"pytest-purkinje" -> pylint;
"pytest-purkinje" -> pytest;
"pytest-purkinje" -> "pytest-cache";
"pytest-purkinje" -> "pytest-cov";
"pytest-purkinje" -> "pytest-pep8";
"pytest-purkinje" -> "restructuredtext-lint";
"pytest-purkinje" -> sphinx;
"pytest-purkinje" -> "sphinx-autobuild";
"pytest-purkinje" -> tox;
"pytest-purkinje" -> voluptuous;
"pytest-purkinje" -> watchdog;
"pytest-purkinje" -> "websocket-client";
"pytest-purkinje" -> wheel;
"pytest-timeout" -> pytest;
"python-ari" -> babel;
"python-ari" -> cliff;
"python-ari" -> coverage;
"python-ari" -> discover;
"python-ari" -> fixtures;
"python-ari" -> hacking;
"python-ari" -> iso8601;
"python-ari" -> "oslo.config";
"python-ari" -> pbr;
"python-ari" -> "python-subunit";
"python-ari" -> sphinx;
"python-ari" -> testrepository;
"python-ari" -> testscenarios;
"python-ari" -> testtools;
"python-ari" -> tornado;
"python-automationclient" -> argparse;
"python-automationclient" -> babel;
"python-automationclient" -> coverage;
"python-automationclient" -> discover;
"python-automationclient" -> fixtures;
"python-automationclient" -> flake8;
"python-automationclient" -> hacking;
"python-automationclient" -> mock;
"python-automationclient" -> pep8;
"python-automationclient" -> prettytable;
"python-automationclient" -> pyflakes;
"python-automationclient" -> "python-subunit";
"python-automationclient" -> requests;
"python-automationclient" -> simplejson;
"python-automationclient" -> six;
"python-automationclient" -> sphinx;
"python-automationclient" -> testrepository;
"python-automationclient" -> testtools;
"python-barbicanclient" -> argparse;
"python-barbicanclient" -> cliff;
"python-barbicanclient" -> coverage;
"python-barbicanclient" -> discover;
"python-barbicanclient" -> fixtures;
"python-barbicanclient" -> hacking;
"python-barbicanclient" -> mock;
"python-barbicanclient" -> nose;
"python-barbicanclient" -> "oslo.i18n";
"python-barbicanclient" -> "oslo.serialization";
"python-barbicanclient" -> "oslo.utils";
"python-barbicanclient" -> oslosphinx;
"python-barbicanclient" -> oslotest;
"python-barbicanclient" -> pbr;
"python-barbicanclient" -> "python-keystoneclient";
"python-barbicanclient" -> requests;
"python-barbicanclient" -> "requests-mock";
"python-barbicanclient" -> six;
"python-barbicanclient" -> sphinx;
"python-barbicanclient" -> testrepository;
"python-barbicanclient" -> testtools;
"python-bitcoin" -> bitstring;
"python-bitcoin" -> blist;
"python-bitcoin" -> ecdsa;
"python-bitcoin" -> isodate;
"python-bitcoin" -> requests;
"python-bitcoin" -> simplejson;
"python-bitcoin" -> six;
"python-ceilometerclient" -> "python-subunit";
"python-ceilometerclient" -> testrepository;
"python-ceilometerclient" -> fixtures;
"python-ceilometerclient" -> coverage;
"python-ceilometerclient" -> discover;
"python-ceilometerclient" -> hacking;
"python-ceilometerclient" -> iso8601;
"python-ceilometerclient" -> keystoneauth1;
"python-ceilometerclient" -> mock;
"python-ceilometerclient" -> "oslo.i18n";
"python-ceilometerclient" -> "oslo.serialization";
"python-ceilometerclient" -> "oslo.utils";
"python-ceilometerclient" -> oslosphinx;
"python-ceilometerclient" -> pbr;
"python-ceilometerclient" -> prettytable;
"python-ceilometerclient" -> "python-keystoneclient";
"python-ceilometerclient" -> requests;
"python-ceilometerclient" -> six;
"python-ceilometerclient" -> sphinx;
"python-ceilometerclient" -> stevedore;
"python-ceilometerclient" -> "tempest-lib";
"python-ceilometerclient" -> testtools;
"python-cicoclient" -> ansible;
"python-cicoclient" -> cliff;
"python-cicoclient" -> discover;
"python-cicoclient" -> flake8;
"python-cicoclient" -> mock;
"python-cicoclient" -> pbr;
"python-cicoclient" -> requests;
"python-cicoclient" -> six;
"python-cicoclient" -> sphinx;
"python-cicoclient" -> "sphinx-rtd-theme";
"python-cicoclient" -> unittest2;
"python-cinderclient" -> argparse;
"python-cinderclient" -> babel;
"python-cinderclient" -> coverage;
"python-cinderclient" -> discover;
"python-cinderclient" -> fixtures;
"python-cinderclient" -> hacking;
"python-cinderclient" -> mock;
"python-cinderclient" -> "oslo.utils";
"python-cinderclient" -> oslosphinx;
"python-cinderclient" -> pbr;
"python-cinderclient" -> prettytable;
"python-cinderclient" -> "python-keystoneclient";
"python-cinderclient" -> "python-subunit";
"python-cinderclient" -> requests;
"python-cinderclient" -> "requests-mock";
"python-cinderclient" -> simplejson;
"python-cinderclient" -> six;
"python-cinderclient" -> sphinx;
"python-cinderclient" -> "tempest-lib";
"python-cinderclient" -> testrepository;
"python-cinderclient" -> testtools;
"python-cloudfoundryclient" -> babel;
"python-cloudfoundryclient" -> coverage;
"python-cloudfoundryclient" -> discover;
"python-cloudfoundryclient" -> hacking;
"python-cloudfoundryclient" -> oslosphinx;
"python-cloudfoundryclient" -> oslotest;
"python-cloudfoundryclient" -> pbr;
"python-cloudfoundryclient" -> "python-subunit";
"python-cloudfoundryclient" -> requests;
"python-cloudfoundryclient" -> sphinx;
"python-cloudfoundryclient" -> testrepository;
"python-cloudfoundryclient" -> testscenarios;
"python-cloudfoundryclient" -> testtools;
"python-cloudkittyclient" -> babel;
"python-cloudkittyclient" -> coverage;
"python-cloudkittyclient" -> discover;
"python-cloudkittyclient" -> hacking;
"python-cloudkittyclient" -> "oslo.i18n";
"python-cloudkittyclient" -> "oslo.serialization";
"python-cloudkittyclient" -> "oslo.utils";
"python-cloudkittyclient" -> oslosphinx;
"python-cloudkittyclient" -> oslotest;
"python-cloudkittyclient" -> pbr;
"python-cloudkittyclient" -> "python-keystoneclient";
"python-cloudkittyclient" -> "python-subunit";
"python-cloudkittyclient" -> sphinx;
"python-cloudkittyclient" -> stevedore;
"python-cloudkittyclient" -> testrepository;
"python-cloudkittyclient" -> testscenarios;
"python-cloudkittyclient" -> testtools;
"python-cloudpulseclient" -> babel;
"python-cloudpulseclient" -> coverage;
"python-cloudpulseclient" -> discover;
"python-cloudpulseclient" -> hacking;
"python-cloudpulseclient" -> iso8601;
"python-cloudpulseclient" -> "oslo.config";
"python-cloudpulseclient" -> "oslo.i18n";
"python-cloudpulseclient" -> "oslo.utils";
"python-cloudpulseclient" -> oslosphinx;
"python-cloudpulseclient" -> oslotest;
"python-cloudpulseclient" -> pbr;
"python-cloudpulseclient" -> "python-keystoneclient";
"python-cloudpulseclient" -> "python-subunit";
"python-cloudpulseclient" -> pyyaml;
"python-cloudpulseclient" -> requests;
"python-cloudpulseclient" -> six;
"python-cloudpulseclient" -> sphinx;
"python-cloudpulseclient" -> stevedore;
"python-cloudpulseclient" -> testrepository;
"python-cloudpulseclient" -> testscenarios;
"python-cloudpulseclient" -> testtools;
"python-congressclient" -> "python-subunit";
"python-congressclient" -> testrepository;
"python-congressclient" -> testscenarios;
"python-congressclient" -> fixtures;
"python-congressclient" -> babel;
"python-congressclient" -> cliff;
"python-congressclient" -> coverage;
"python-congressclient" -> discover;
"python-congressclient" -> hacking;
"python-congressclient" -> mock;
"python-congressclient" -> "oslo.i18n";
"python-congressclient" -> "oslo.log";
"python-congressclient" -> "oslo.serialization";
"python-congressclient" -> "oslo.utils";
"python-congressclient" -> oslosphinx;
"python-congressclient" -> pbr;
"python-congressclient" -> "python-keystoneclient";
"python-congressclient" -> requests;
"python-congressclient" -> six;
"python-congressclient" -> sphinx;
"python-congressclient" -> testtools;
"python-congressclient" -> webob;
"python-coveralls" -> coverage;
"python-coveralls" -> pytest;
"python-coveralls" -> "pytest-cov";
"python-coveralls" -> "pytest-pep8";
"python-coveralls" -> pyyaml;
"python-coveralls" -> requests;
"python-coveralls" -> sh;
"python-coveralls" -> six;
"python-cueclient" -> cliff;
"python-cueclient" -> coverage;
"python-cueclient" -> discover;
"python-cueclient" -> fixtures;
"python-cueclient" -> hacking;
"python-cueclient" -> jsonschema;
"python-cueclient" -> mock;
"python-cueclient" -> oslosphinx;
"python-cueclient" -> pbr;
"python-cueclient" -> "python-keystoneclient";
"python-cueclient" -> "python-subunit";
"python-cueclient" -> requests;
"python-cueclient" -> "requests-mock";
"python-cueclient" -> six;
"python-cueclient" -> sphinx;
"python-cueclient" -> stevedore;
"python-cueclient" -> testrepository;
"python-designateclient" -> "python-subunit";
"python-designateclient" -> testrepository;
"python-designateclient" -> cliff;
"python-designateclient" -> coverage;
"python-designateclient" -> debtcollector;
"python-designateclient" -> discover;
"python-designateclient" -> hacking;
"python-designateclient" -> jsonschema;
"python-designateclient" -> mock;
"python-designateclient" -> "oslo.utils";
"python-designateclient" -> oslosphinx;
"python-designateclient" -> oslotest;
"python-designateclient" -> pbr;
"python-designateclient" -> "python-keystoneclient";
"python-designateclient" -> requests;
"python-designateclient" -> "requests-mock";
"python-designateclient" -> six;
"python-designateclient" -> sphinx;
"python-designateclient" -> stevedore;
"python-designateclient" -> "tempest-lib";
"python-epo-ops-client" -> bumpversion;
"python-epo-ops-client" -> coveralls;
"python-epo-ops-client" -> "dogpile.cache";
"python-epo-ops-client" -> flake8;
"python-epo-ops-client" -> pep8;
"python-epo-ops-client" -> py;
"python-epo-ops-client" -> pytest;
"python-epo-ops-client" -> "pytest-cache";
"python-epo-ops-client" -> "pytest-cov";
"python-epo-ops-client" -> "python-dateutil";
"python-epo-ops-client" -> requests;
"python-epo-ops-client" -> six;
"python-epo-ops-client" -> tox;
"python-epo-ops-client" -> wheel;
"python-evoqueclient" -> argparse;
"python-evoqueclient" -> babel;
"python-evoqueclient" -> coverage;
"python-evoqueclient" -> discover;
"python-evoqueclient" -> fixtures;
"python-evoqueclient" -> hacking;
"python-evoqueclient" -> httplib2;
"python-evoqueclient" -> iso8601;
"python-evoqueclient" -> mock;
"python-evoqueclient" -> "os-testr";
"python-evoqueclient" -> "oslo.log";
"python-evoqueclient" -> "oslo.serialization";
"python-evoqueclient" -> "oslo.utils";
"python-evoqueclient" -> oslosphinx;
"python-evoqueclient" -> oslotest;
"python-evoqueclient" -> pbr;
"python-evoqueclient" -> prettytable;
"python-evoqueclient" -> pyopenssl;
"python-evoqueclient" -> "python-keystoneclient";
"python-evoqueclient" -> pyyaml;
"python-evoqueclient" -> requests;
"python-evoqueclient" -> "requests-mock";
"python-evoqueclient" -> six;
"python-evoqueclient" -> sphinx;
"python-evoqueclient" -> "tempest-lib";
"python-evoqueclient" -> testrepository;
"python-evoqueclient" -> testscenarios;
"python-evoqueclient" -> testtools;
"python-flameclient" -> argparse;
"python-flameclient" -> babel;
"python-flameclient" -> coverage;
"python-flameclient" -> discover;
"python-flameclient" -> fixtures;
"python-flameclient" -> hacking;
"python-flameclient" -> ipaddr;
"python-flameclient" -> mock;
"python-flameclient" -> oslosphinx;
"python-flameclient" -> pbr;
"python-flameclient" -> "python-cinderclient";
"python-flameclient" -> "python-keystoneclient";
"python-flameclient" -> "python-neutronclient";
"python-flameclient" -> "python-novaclient";
"python-flameclient" -> "python-subunit";
"python-flameclient" -> pyyaml;
"python-flameclient" -> sphinx;
"python-flameclient" -> testrepository;
"python-flameclient" -> testscenarios;
"python-flameclient" -> testtools;
"python-fuelclient" -> argparse;
"python-fuelclient" -> cliff;
"python-fuelclient" -> hacking;
"python-fuelclient" -> mock;
"python-fuelclient" -> "oslo.config";
"python-fuelclient" -> "oslo.i18n";
"python-fuelclient" -> "oslo.serialization";
"python-fuelclient" -> "oslo.utils";
"python-fuelclient" -> pbr;
"python-fuelclient" -> pytest;
"python-fuelclient" -> "pytest-cov";
"python-fuelclient" -> "python-keystoneclient";
"python-fuelclient" -> pyyaml;
"python-fuelclient" -> requests;
"python-fuelclient" -> "requests-mock";
"python-fuelclient" -> six;
"python-fuelclient" -> stevedore;
"python-fuelclient" -> unittest2;
"python-gitlab" -> discover;
"python-gitlab" -> hacking;
"python-gitlab" -> httmock;
"python-gitlab" -> jinja2;
"python-gitlab" -> mock;
"python-gitlab" -> requests;
"python-gitlab" -> six;
"python-gitlab" -> sphinx;
"python-gitlab" -> testrepository;
"python-group-based-policy-client" -> coverage;
"python-group-based-policy-client" -> discover;
"python-group-based-policy-client" -> fixtures;
"python-group-based-policy-client" -> hacking;
"python-group-based-policy-client" -> httpretty;
"python-group-based-policy-client" -> mox3;
"python-group-based-policy-client" -> oslosphinx;
"python-group-based-policy-client" -> oslotest;
"python-group-based-policy-client" -> "python-heatclient";
"python-group-based-policy-client" -> "python-neutronclient";
"python-group-based-policy-client" -> "python-subunit";
"python-group-based-policy-client" -> "requests-mock";
"python-group-based-policy-client" -> sphinx;
"python-group-based-policy-client" -> testrepository;
"python-group-based-policy-client" -> testtools;
"python-heatclient" -> babel;
"python-heatclient" -> cliff;
"python-heatclient" -> coverage;
"python-heatclient" -> discover;
"python-heatclient" -> fixtures;
"python-heatclient" -> hacking;
"python-heatclient" -> iso8601;
"python-heatclient" -> mock;
"python-heatclient" -> mox3;
"python-heatclient" -> "oslo.i18n";
"python-heatclient" -> "oslo.serialization";
"python-heatclient" -> "oslo.utils";
"python-heatclient" -> oslosphinx;
"python-heatclient" -> oslotest;
"python-heatclient" -> pbr;
"python-heatclient" -> prettytable;
"python-heatclient" -> "python-keystoneclient";
"python-heatclient" -> "python-openstackclient";
"python-heatclient" -> "python-swiftclient";
"python-heatclient" -> pyyaml;
"python-heatclient" -> requests;
"python-heatclient" -> "requests-mock";
"python-heatclient" -> six;
"python-heatclient" -> sphinx;
"python-heatclient" -> "tempest-lib";
"python-heatclient" -> testrepository;
"python-heatclient" -> testscenarios;
"python-heatclient" -> testtools;
"python-ironicclient" -> "python-subunit";
"python-ironicclient" -> fixtures;
"python-ironicclient" -> anyjson;
"python-ironicclient" -> appdirs;
"python-ironicclient" -> babel;
"python-ironicclient" -> cliff;
"python-ironicclient" -> coverage;
"python-ironicclient" -> discover;
"python-ironicclient" -> doc8;
"python-ironicclient" -> "dogpile.cache";
"python-ironicclient" -> hacking;
"python-ironicclient" -> httplib2;
"python-ironicclient" -> mock;
"python-ironicclient" -> "os-testr";
"python-ironicclient" -> "oslo.i18n";
"python-ironicclient" -> "oslo.utils";
"python-ironicclient" -> oslosphinx;
"python-ironicclient" -> oslotest;
"python-ironicclient" -> pbr;
"python-ironicclient" -> prettytable;
"python-ironicclient" -> "python-keystoneclient";
"python-ironicclient" -> "python-openstackclient";
"python-ironicclient" -> reno;
"python-ironicclient" -> "requests-mock";
"python-ironicclient" -> six;
"python-ironicclient" -> sphinx;
"python-ironicclient" -> "tempest-lib";
"python-ironicclient" -> testtools;
"python-jenkins" -> coverage;
"python-jenkins" -> discover;
"python-jenkins" -> hacking;
"python-jenkins" -> mock;
"python-jenkins" -> pbr;
"python-jenkins" -> "python-subunit";
"python-jenkins" -> six;
"python-jenkins" -> sphinx;
"python-jenkins" -> testrepository;
"python-jenkins" -> testscenarios;
"python-jenkins" -> testtools;
"python-jenkins" -> unittest2;
"python-keystoneclient" -> argparse;
"python-keystoneclient" -> babel;
"python-keystoneclient" -> bandit;
"python-keystoneclient" -> coverage;
"python-keystoneclient" -> debtcollector;
"python-keystoneclient" -> fixtures;
"python-keystoneclient" -> hacking;
"python-keystoneclient" -> iso8601;
"python-keystoneclient" -> keyring;
"python-keystoneclient" -> keystoneauth1;
"python-keystoneclient" -> lxml;
"python-keystoneclient" -> mock;
"python-keystoneclient" -> oauthlib;
"python-keystoneclient" -> "oslo.config";
"python-keystoneclient" -> "oslo.i18n";
"python-keystoneclient" -> "oslo.serialization";
"python-keystoneclient" -> "oslo.utils";
"python-keystoneclient" -> oslosphinx;
"python-keystoneclient" -> oslotest;
"python-keystoneclient" -> pbr;
"python-keystoneclient" -> prettytable;
"python-keystoneclient" -> reno;
"python-keystoneclient" -> requests;
"python-keystoneclient" -> "requests-mock";
"python-keystoneclient" -> six;
"python-keystoneclient" -> sphinx;
"python-keystoneclient" -> stevedore;
"python-keystoneclient" -> "tempest-lib";
"python-keystoneclient" -> testrepository;
"python-keystoneclient" -> testresources;
"python-keystoneclient" -> testscenarios;
"python-keystoneclient" -> testtools;
"python-keystoneclient-kerberos" -> coverage;
"python-keystoneclient-kerberos" -> discover;
"python-keystoneclient-kerberos" -> hacking;
"python-keystoneclient-kerberos" -> oslosphinx;
"python-keystoneclient-kerberos" -> oslotest;
"python-keystoneclient-kerberos" -> pbr;
"python-keystoneclient-kerberos" -> "python-keystoneclient";
"python-keystoneclient-kerberos" -> "python-subunit";
"python-keystoneclient-kerberos" -> "requests-mock";
"python-keystoneclient-kerberos" -> sphinx;
"python-keystoneclient-kerberos" -> testrepository;
"python-keystoneclient-kerberos" -> testscenarios;
"python-keystoneclient-kerberos" -> testtools;
"python-magnetodbclient" -> argparse;
"python-magnetodbclient" -> babel;
"python-magnetodbclient" -> cliff;
"python-magnetodbclient" -> coverage;
"python-magnetodbclient" -> discover;
"python-magnetodbclient" -> fixtures;
"python-magnetodbclient" -> hacking;
"python-magnetodbclient" -> iso8601;
"python-magnetodbclient" -> mock;
"python-magnetodbclient" -> pbr;
"python-magnetodbclient" -> "python-subunit";
"python-magnetodbclient" -> requests;
"python-magnetodbclient" -> simplejson;
"python-magnetodbclient" -> six;
"python-magnetodbclient" -> sphinx;
"python-magnetodbclient" -> testrepository;
"python-magnetodbclient" -> testtools;
"python-magnumclient" -> babel;
"python-magnumclient" -> bandit;
"python-magnumclient" -> coverage;
"python-magnumclient" -> discover;
"python-magnumclient" -> fixtures;
"python-magnumclient" -> hacking;
"python-magnumclient" -> mock;
"python-magnumclient" -> "os-client-config";
"python-magnumclient" -> "oslo.i18n";
"python-magnumclient" -> "oslo.serialization";
"python-magnumclient" -> "oslo.utils";
"python-magnumclient" -> oslosphinx;
"python-magnumclient" -> oslotest;
"python-magnumclient" -> pbr;
"python-magnumclient" -> prettytable;
"python-magnumclient" -> "python-subunit";
"python-magnumclient" -> sphinx;
"python-magnumclient" -> testrepository;
"python-magnumclient" -> testscenarios;
"python-magnumclient" -> testtools;
"python-manilaclient" -> argparse;
"python-manilaclient" -> babel;
"python-manilaclient" -> coverage;
"python-manilaclient" -> ddt;
"python-manilaclient" -> discover;
"python-manilaclient" -> fixtures;
"python-manilaclient" -> hacking;
"python-manilaclient" -> iso8601;
"python-manilaclient" -> mock;
"python-manilaclient" -> ordereddict;
"python-manilaclient" -> "oslo.config";
"python-manilaclient" -> "oslo.log";
"python-manilaclient" -> "oslo.serialization";
"python-manilaclient" -> "oslo.utils";
"python-manilaclient" -> oslosphinx;
"python-manilaclient" -> pbr;
"python-manilaclient" -> prettytable;
"python-manilaclient" -> pycrypto;
"python-manilaclient" -> "python-keystoneclient";
"python-manilaclient" -> "python-openstackclient";
"python-manilaclient" -> requests;
"python-manilaclient" -> simplejson;
"python-manilaclient" -> six;
"python-manilaclient" -> sphinx;
"python-manilaclient" -> "tempest-lib";
"python-manilaclient" -> testrepository;
"python-manilaclient" -> testtools;
"python-marconiclient" -> coverage;
"python-marconiclient" -> discover;
"python-marconiclient" -> fixtures;
"python-marconiclient" -> hacking;
"python-marconiclient" -> jsonschema;
"python-marconiclient" -> mock;
"python-marconiclient" -> nose;
"python-marconiclient" -> "nose-exclude";
"python-marconiclient" -> "openstack.nose-plugin";
"python-marconiclient" -> pbr;
"python-marconiclient" -> "python-keystoneclient";
"python-marconiclient" -> "python-subunit";
"python-marconiclient" -> requests;
"python-marconiclient" -> six;
"python-marconiclient" -> stevedore;
"python-marconiclient" -> testrepository;
"python-marconiclient" -> testtools;
"python-memcached" -> coverage;
"python-memcached" -> hacking;
"python-memcached" -> nose;
"python-memcached" -> six;
"python-mistralclient" -> cliff;
"python-mistralclient" -> fixtures;
"python-mistralclient" -> hacking;
"python-mistralclient" -> mock;
"python-mistralclient" -> nose;
"python-mistralclient" -> pbr;
"python-mistralclient" -> pylint;
"python-mistralclient" -> "python-keystoneclient";
"python-mistralclient" -> "python-openstackclient";
"python-mistralclient" -> pyyaml;
"python-mistralclient" -> requests;
"python-mistralclient" -> sphinx;
"python-mistralclient" -> "tempest-lib";
"python-mistralclient" -> testtools;
"python-mistralclient" -> unittest2;
"python-monascaclient" -> argparse;
"python-monascaclient" -> babel;
"python-monascaclient" -> coverage;
"python-monascaclient" -> discover;
"python-monascaclient" -> fixtures;
"python-monascaclient" -> hacking;
"python-monascaclient" -> iso8601;
"python-monascaclient" -> mock;
"python-monascaclient" -> mox3;
"python-monascaclient" -> "oslo.concurrency";
"python-monascaclient" -> "oslo.config";
"python-monascaclient" -> "oslo.i18n";
"python-monascaclient" -> "oslo.log";
"python-monascaclient" -> "oslo.middleware";
"python-monascaclient" -> "oslo.serialization";
"python-monascaclient" -> "oslo.service";
"python-monascaclient" -> "oslo.utils";
"python-monascaclient" -> pbr;
"python-monascaclient" -> prettytable;
"python-monascaclient" -> "python-keystoneclient";
"python-monascaclient" -> pyyaml;
"python-monascaclient" -> requests;
"python-monascaclient" -> six;
"python-monascaclient" -> sphinx;
"python-monascaclient" -> testrepository;
"python-monascaclient" -> testscenarios;
"python-monascaclient" -> testtools;
python_mozaggregator -> boto;
python_mozaggregator -> flask;
python_mozaggregator -> "flask-cache";
python_mozaggregator -> "flask-cors";
python_mozaggregator -> gevent;
python_mozaggregator -> gunicorn;
python_mozaggregator -> joblib;
python_mozaggregator -> pandas;
python_mozaggregator -> psycopg2;
python_mozaggregator -> redis;
python_mozaggregator -> ujson;
"python-multipart" -> "cov-core";
"python-multipart" -> coverage;
"python-multipart" -> invoke;
"python-multipart" -> mock;
"python-multipart" -> py;
"python-multipart" -> pytest;
"python-multipart" -> "pytest-capturelog";
"python-multipart" -> "pytest-cov";
"python-multipart" -> "pytest-timeout";
"python-multipart" -> pyyaml;
"python-multipart" -> tox;
"python-multipart" -> virtualenv;
"python-muranoclient" -> testrepository;
"python-muranoclient" -> testscenarios;
"python-muranoclient" -> fixtures;
"python-muranoclient" -> babel;
"python-muranoclient" -> coverage;
"python-muranoclient" -> discover;
"python-muranoclient" -> hacking;
"python-muranoclient" -> httplib2;
"python-muranoclient" -> iso8601;
"python-muranoclient" -> mock;
"python-muranoclient" -> "oslo.i18n";
"python-muranoclient" -> "oslo.log";
"python-muranoclient" -> "oslo.serialization";
"python-muranoclient" -> "oslo.utils";
"python-muranoclient" -> oslosphinx;
"python-muranoclient" -> pbr;
"python-muranoclient" -> prettytable;
"python-muranoclient" -> pyopenssl;
"python-muranoclient" -> "python-glanceclient";
"python-muranoclient" -> "python-keystoneclient";
"python-muranoclient" -> pyyaml;
"python-muranoclient" -> reno;
"python-muranoclient" -> requests;
"python-muranoclient" -> "requests-mock";
"python-muranoclient" -> six;
"python-muranoclient" -> sphinx;
"python-muranoclient" -> "tempest-lib";
"python-muranoclient" -> testtools;
"python-muranoclient" -> yaql;
"python-neutronclient" -> argparse;
"python-neutronclient" -> babel;
"python-neutronclient" -> cliff;
"python-neutronclient" -> coverage;
"python-neutronclient" -> discover;
"python-neutronclient" -> fixtures;
"python-neutronclient" -> hacking;
"python-neutronclient" -> iso8601;
"python-neutronclient" -> mock;
"python-neutronclient" -> mox3;
"python-neutronclient" -> netaddr;
"python-neutronclient" -> "oslo.i18n";
"python-neutronclient" -> "oslo.serialization";
"python-neutronclient" -> "oslo.utils";
"python-neutronclient" -> oslosphinx;
"python-neutronclient" -> oslotest;
"python-neutronclient" -> pbr;
"python-neutronclient" -> "python-keystoneclient";
"python-neutronclient" -> "python-subunit";
"python-neutronclient" -> requests;
"python-neutronclient" -> "requests-mock";
"python-neutronclient" -> simplejson;
"python-neutronclient" -> six;
"python-neutronclient" -> sphinx;
"python-neutronclient" -> "tempest-lib";
"python-neutronclient" -> testrepository;
"python-neutronclient" -> testtools;
"python-novaclient" -> argparse;
"python-novaclient" -> babel;
"python-novaclient" -> coverage;
"python-novaclient" -> discover;
"python-novaclient" -> fixtures;
"python-novaclient" -> hacking;
"python-novaclient" -> iso8601;
"python-novaclient" -> keyring;
"python-novaclient" -> keystoneauth1;
"python-novaclient" -> mock;
"python-novaclient" -> "os-client-config";
"python-novaclient" -> "oslo.i18n";
"python-novaclient" -> "oslo.serialization";
"python-novaclient" -> "oslo.utils";
"python-novaclient" -> oslosphinx;
"python-novaclient" -> pbr;
"python-novaclient" -> prettytable;
"python-novaclient" -> "python-keystoneclient";
"python-novaclient" -> reno;
"python-novaclient" -> requests;
"python-novaclient" -> "requests-mock";
"python-novaclient" -> simplejson;
"python-novaclient" -> six;
"python-novaclient" -> sphinx;
"python-novaclient" -> "tempest-lib";
"python-novaclient" -> testrepository;
"python-novaclient" -> testscenarios;
"python-novaclient" -> testtools;
"python-oneviewclient" -> babel;
"python-oneviewclient" -> coverage;
"python-oneviewclient" -> discover;
"python-oneviewclient" -> hacking;
"python-oneviewclient" -> oslosphinx;
"python-oneviewclient" -> oslotest;
"python-oneviewclient" -> pbr;
"python-oneviewclient" -> "python-subunit";
"python-oneviewclient" -> retrying;
"python-oneviewclient" -> six;
"python-oneviewclient" -> sphinx;
"python-oneviewclient" -> testrepository;
"python-oneviewclient" -> testscenarios;
"python-oneviewclient" -> testtools;
"python-openstackclient" -> babel;
"python-openstackclient" -> cliff;
"python-openstackclient" -> coverage;
"python-openstackclient" -> discover;
"python-openstackclient" -> fixtures;
"python-openstackclient" -> hacking;
"python-openstackclient" -> mock;
"python-openstackclient" -> "os-client-config";
"python-openstackclient" -> "os-testr";
"python-openstackclient" -> "oslo.config";
"python-openstackclient" -> "oslo.i18n";
"python-openstackclient" -> "oslo.utils";
"python-openstackclient" -> oslosphinx;
"python-openstackclient" -> oslotest;
"python-openstackclient" -> pbr;
"python-openstackclient" -> "python-cinderclient";
"python-openstackclient" -> "python-glanceclient";
"python-openstackclient" -> "python-keystoneclient";
"python-openstackclient" -> "python-neutronclient";
"python-openstackclient" -> "python-novaclient";
"python-openstackclient" -> requests;
"python-openstackclient" -> "requests-mock";
"python-openstackclient" -> six;
"python-openstackclient" -> sphinx;
"python-openstackclient" -> stevedore;
"python-openstackclient" -> "tempest-lib";
"python-openstackclient" -> testrepository;
"python-openstackclient" -> testtools;
"python-openstackclient" -> webob;
"python-openstacksdk" -> coverage;
"python-openstacksdk" -> discover;
"python-openstacksdk" -> fixtures;
"python-openstacksdk" -> hacking;
"python-openstacksdk" -> mock;
"python-openstacksdk" -> openstacksdk;
"python-openstacksdk" -> "os-client-config";
"python-openstacksdk" -> oslosphinx;
"python-openstacksdk" -> "python-subunit";
"python-openstacksdk" -> "requests-mock";
"python-openstacksdk" -> sphinx;
"python-openstacksdk" -> testrepository;
"python-openstacksdk" -> testscenarios;
"python-openstacksdk" -> testtools;
"python-plcloudclient" -> coverage;
"python-plcloudclient" -> discover;
"python-plcloudclient" -> fixtures;
"python-plcloudclient" -> hacking;
"python-plcloudclient" -> httpretty;
"python-plcloudclient" -> keyring;
"python-plcloudclient" -> mock;
"python-plcloudclient" -> mox3;
"python-plcloudclient" -> oauthlib;
"python-plcloudclient" -> pycrypto;
"python-plcloudclient" -> "python-keystoneclient";
"python-plcloudclient" -> sphinx;
"python-plcloudclient" -> stevedore;
"python-plcloudclient" -> testrepository;
"python-plcloudclient" -> testresources;
"python-plcloudclient" -> testtools;
"python-plcloudclient" -> webob;
"python-rdomanager-oscplugin" -> babel;
"python-rdomanager-oscplugin" -> cliff;
"python-rdomanager-oscplugin" -> coverage;
"python-rdomanager-oscplugin" -> discover;
"python-rdomanager-oscplugin" -> fixtures;
"python-rdomanager-oscplugin" -> hacking;
"python-rdomanager-oscplugin" -> ipaddress;
"python-rdomanager-oscplugin" -> "ironic-discoverd";
"python-rdomanager-oscplugin" -> mock;
"python-rdomanager-oscplugin" -> "os-cloud-config";
"python-rdomanager-oscplugin" -> oslosphinx;
"python-rdomanager-oscplugin" -> pbr;
"python-rdomanager-oscplugin" -> "python-heatclient";
"python-rdomanager-oscplugin" -> "python-ironicclient";
"python-rdomanager-oscplugin" -> "python-openstackclient";
"python-rdomanager-oscplugin" -> "python-tuskarclient";
"python-rdomanager-oscplugin" -> six;
"python-rdomanager-oscplugin" -> sphinx;
"python-rdomanager-oscplugin" -> testrepository;
"python-rdomanager-oscplugin" -> testtools;
"python-ripcordclient" -> babel;
"python-ripcordclient" -> cliff;
"python-ripcordclient" -> coverage;
"python-ripcordclient" -> eventlet;
"python-ripcordclient" -> fixtures;
"python-ripcordclient" -> hacking;
"python-ripcordclient" -> iso8601;
"python-ripcordclient" -> netaddr;
"python-ripcordclient" -> "oslo.config";
"python-ripcordclient" -> pbr;
"python-ripcordclient" -> pyopenssl;
"python-ripcordclient" -> "python-keystoneclient";
"python-ripcordclient" -> requests;
"python-ripcordclient" -> six;
"python-ripcordclient" -> sphinx;
"python-ripcordclient" -> testrepository;
"python-ripcordclient" -> testtools;
"python-saharaclient" -> argparse;
"python-saharaclient" -> babel;
"python-saharaclient" -> cliff;
"python-saharaclient" -> coverage;
"python-saharaclient" -> discover;
"python-saharaclient" -> hacking;
"python-saharaclient" -> mock;
"python-saharaclient" -> netaddr;
"python-saharaclient" -> "oslo.config";
"python-saharaclient" -> "oslo.i18n";
"python-saharaclient" -> "oslo.utils";
"python-saharaclient" -> oslosphinx;
"python-saharaclient" -> pbr;
"python-saharaclient" -> prettytable;
"python-saharaclient" -> "python-keystoneclient";
"python-saharaclient" -> "python-neutronclient";
"python-saharaclient" -> "python-novaclient";
"python-saharaclient" -> "python-openstackclient";
"python-saharaclient" -> "python-swiftclient";
"python-saharaclient" -> requests;
"python-saharaclient" -> "requests-mock";
"python-saharaclient" -> six;
"python-saharaclient" -> sphinx;
"python-saharaclient" -> "tempest-lib";
"python-saharaclient" -> testrepository;
"python-salesforce" -> argparse;
"python-salesforce" -> bottle;
"python-salesforce" -> cherrypy;
"python-salesforce" -> distribute;
"python-salesforce" -> nose;
"python-salesforce" -> "nose-cov";
"python-salesforce" -> oauthlib;
"python-salesforce" -> pygments;
"python-salesforce" -> pyopenssl;
"python-salesforce" -> pyyaml;
"python-salesforce" -> requests;
"python-salesforce" -> "requests-oauthlib";
"python-salesforce" -> wsgiref;
"python-savannaclient" -> babel;
"python-savannaclient" -> coverage;
"python-savannaclient" -> discover;
"python-savannaclient" -> docutils;
"python-savannaclient" -> hacking;
"python-savannaclient" -> mock;
"python-savannaclient" -> netaddr;
"python-savannaclient" -> oslosphinx;
"python-savannaclient" -> pbr;
"python-savannaclient" -> "python-keystoneclient";
"python-savannaclient" -> requests;
"python-savannaclient" -> six;
"python-savannaclient" -> sphinx;
"python-savannaclient" -> testrepository;
"python-scciclient" -> babel;
"python-scciclient" -> coverage;
"python-scciclient" -> discover;
"python-scciclient" -> fixtures;
"python-scciclient" -> hacking;
"python-scciclient" -> httpretty;
"python-scciclient" -> mock;
"python-scciclient" -> oslosphinx;
"python-scciclient" -> oslotest;
"python-scciclient" -> pbr;
"python-scciclient" -> "python-subunit";
"python-scciclient" -> requests;
"python-scciclient" -> six;
"python-scciclient" -> sphinx;
"python-scciclient" -> testrepository;
"python-scciclient" -> testscenarios;
"python-scciclient" -> testtools;
"python-seamicroclient" -> argparse;
"python-seamicroclient" -> babel;
"python-seamicroclient" -> coverage;
"python-seamicroclient" -> discover;
"python-seamicroclient" -> fixtures;
"python-seamicroclient" -> hacking;
"python-seamicroclient" -> iso8601;
"python-seamicroclient" -> keyring;
"python-seamicroclient" -> mock;
"python-seamicroclient" -> pbr;
"python-seamicroclient" -> prettytable;
"python-seamicroclient" -> requests;
"python-seamicroclient" -> simplejson;
"python-seamicroclient" -> six;
"python-seamicroclient" -> sphinx;
"python-seamicroclient" -> testrepository;
"python-seamicroclient" -> testtools;
"python-senlinclient" -> testrepository;
"python-senlinclient" -> testscenarios;
"python-senlinclient" -> fixtures;
"python-senlinclient" -> babel;
"python-senlinclient" -> coverage;
"python-senlinclient" -> discover;
"python-senlinclient" -> hacking;
"python-senlinclient" -> mock;
"python-senlinclient" -> mox3;
"python-senlinclient" -> openstacksdk;
"python-senlinclient" -> "oslo.i18n";
"python-senlinclient" -> "oslo.serialization";
"python-senlinclient" -> "oslo.utils";
"python-senlinclient" -> oslosphinx;
"python-senlinclient" -> oslotest;
"python-senlinclient" -> pbr;
"python-senlinclient" -> prettytable;
"python-senlinclient" -> "python-heatclient";
"python-senlinclient" -> pyyaml;
"python-senlinclient" -> requests;
"python-senlinclient" -> "requests-mock";
"python-senlinclient" -> six;
"python-senlinclient" -> sphinx;
"python-senlinclient" -> testtools;
"python-sjsclient" -> babel;
"python-sjsclient" -> coverage;
"python-sjsclient" -> discover;
"python-sjsclient" -> hacking;
"python-sjsclient" -> oslosphinx;
"python-sjsclient" -> oslotest;
"python-sjsclient" -> pbr;
"python-sjsclient" -> "python-subunit";
"python-sjsclient" -> requests;
"python-sjsclient" -> "requests-mock";
"python-sjsclient" -> sphinx;
"python-sjsclient" -> testrepository;
"python-sjsclient" -> testscenarios;
"python-sjsclient" -> testtools;
"python-slimta" -> gevent;
"python-social-auth" -> coverage;
"python-social-auth" -> django;
"python-social-auth" -> httpretty;
"python-social-auth" -> mock;
"python-social-auth" -> nose;
"python-social-auth" -> oauthlib;
"python-social-auth" -> pyjwt;
"python-social-auth" -> "python-social-auth";
"python-social-auth" -> rednose;
"python-social-auth" -> requests;
"python-social-auth" -> "requests-oauthlib";
"python-social-auth" -> six;
"python-social-auth" -> sure;
"python-social-auth" -> unittest2;
"python-solumclient" -> babel;
"python-solumclient" -> coverage;
"python-solumclient" -> discover;
"python-solumclient" -> fixtures;
"python-solumclient" -> hacking;
"python-solumclient" -> httplib2;
"python-solumclient" -> iso8601;
"python-solumclient" -> mock;
"python-solumclient" -> "oslo.config";
"python-solumclient" -> oslosphinx;
"python-solumclient" -> oslotest;
"python-solumclient" -> pbr;
"python-solumclient" -> "python-keystoneclient";
"python-solumclient" -> "python-subunit";
"python-solumclient" -> pyyaml;
"python-solumclient" -> requests;
"python-solumclient" -> six;
"python-solumclient" -> sphinx;
"python-solumclient" -> stevedore;
"python-solumclient" -> testrepository;
"python-solumclient" -> testscenarios;
"python-solumclient" -> testtools;
"python-streamtools" -> amqp;
"python-streamtools" -> anyjson;
"python-streamtools" -> "backports.ssl-match-hostname";
"python-streamtools" -> kombu;
"python-streamtools" -> pytz;
"python-streamtools" -> requests;
"python-streamtools" -> six;
"python-streamtools" -> ujson;
"python-streamtools" -> ws4py;
"python-streamtools" -> wsgiref;
"python-surveilclient" -> hacking;
"python-surveilclient" -> httpretty;
"python-surveilclient" -> mock;
"python-surveilclient" -> mox3;
"python-surveilclient" -> "oslo.serialization";
"python-surveilclient" -> oslosphinx;
"python-surveilclient" -> pbr;
"python-surveilclient" -> prettytable;
"python-surveilclient" -> requests;
"python-surveilclient" -> six;
"python-surveilclient" -> sphinx;
"python-surveilclient" -> testrepository;
"python-suseapi" -> beautifulsoup4;
"python-suseapi" -> coveralls;
"python-suseapi" -> django;
"python-suseapi" -> httpretty;
"python-suseapi" -> mechanize;
"python-suseapi" -> pep8;
"python-suseapi" -> pyflakes;
"python-suseapi" -> pylint;
"python-suseapi" -> pytest;
"python-suseapi" -> "pytest-cov";
"python-suseapi" -> "python-dateutil";
"python-suseapi" -> "python-ldap";
"python-suseapi" -> pyxdg;
"python-suseapi" -> "suds-jurko";
"python-swiftclient" -> coverage;
"python-swiftclient" -> discover;
"python-swiftclient" -> futures;
"python-swiftclient" -> hacking;
"python-swiftclient" -> mock;
"python-swiftclient" -> oslosphinx;
"python-swiftclient" -> "python-keystoneclient";
"python-swiftclient" -> requests;
"python-swiftclient" -> six;
"python-swiftclient" -> sphinx;
"python-swiftclient" -> testrepository;
"python-swiftclient" -> testtools;
"python-tripleoclient" -> babel;
"python-tripleoclient" -> cliff;
"python-tripleoclient" -> coverage;
"python-tripleoclient" -> discover;
"python-tripleoclient" -> fixtures;
"python-tripleoclient" -> hacking;
"python-tripleoclient" -> ipaddress;
"python-tripleoclient" -> mock;
"python-tripleoclient" -> "os-cloud-config";
"python-tripleoclient" -> oslosphinx;
"python-tripleoclient" -> passlib;
"python-tripleoclient" -> pbr;
"python-tripleoclient" -> "python-heatclient";
"python-tripleoclient" -> "python-ironicclient";
"python-tripleoclient" -> "python-openstackclient";
"python-tripleoclient" -> six;
"python-tripleoclient" -> sphinx;
"python-tripleoclient" -> testrepository;
"python-tripleoclient" -> testtools;
"python-troveclient" -> argparse;
"python-troveclient" -> babel;
"python-troveclient" -> coverage;
"python-troveclient" -> discover;
"python-troveclient" -> hacking;
"python-troveclient" -> httplib2;
"python-troveclient" -> mock;
"python-troveclient" -> "oslo.utils";
"python-troveclient" -> oslosphinx;
"python-troveclient" -> pbr;
"python-troveclient" -> prettytable;
"python-troveclient" -> "python-keystoneclient";
"python-troveclient" -> requests;
"python-troveclient" -> "requests-mock";
"python-troveclient" -> simplejson;
"python-troveclient" -> six;
"python-troveclient" -> sphinx;
"python-troveclient" -> testrepository;
"python-troveclient" -> testscenarios;
"python-troveclient" -> testtools;
"python-tuskarclient" -> babel;
"python-tuskarclient" -> cliff;
"python-tuskarclient" -> coverage;
"python-tuskarclient" -> discover;
"python-tuskarclient" -> fixtures;
"python-tuskarclient" -> hacking;
"python-tuskarclient" -> iso8601;
"python-tuskarclient" -> mock;
"python-tuskarclient" -> pbr;
"python-tuskarclient" -> prettytable;
"python-tuskarclient" -> "python-keystoneclient";
"python-tuskarclient" -> "python-openstackclient";
"python-tuskarclient" -> requests;
"python-tuskarclient" -> simplejson;
"python-tuskarclient" -> six;
"python-tuskarclient" -> sphinx;
"python-tuskarclient" -> "sphinxcontrib-pecanwsme";
"python-tuskarclient" -> testrepository;
"python-tuskarclient" -> testtools;
"python-watcher" -> coverage;
"python-watcher" -> discover;
"python-watcher" -> doc8;
"python-watcher" -> hacking;
"python-watcher" -> jsonpatch;
"python-watcher" -> keystoneauth1;
"python-watcher" -> keystonemiddleware;
"python-watcher" -> mock;
"python-watcher" -> "os-testr";
"python-watcher" -> "oslo.config";
"python-watcher" -> "oslo.db";
"python-watcher" -> "oslo.i18n";
"python-watcher" -> "oslo.log";
"python-watcher" -> "oslo.messaging";
"python-watcher" -> "oslo.policy";
"python-watcher" -> "oslo.service";
"python-watcher" -> "oslo.utils";
"python-watcher" -> oslosphinx;
"python-watcher" -> oslotest;
"python-watcher" -> pastedeploy;
"python-watcher" -> pbr;
"python-watcher" -> pecan;
"python-watcher" -> "python-ceilometerclient";
"python-watcher" -> "python-cinderclient";
"python-watcher" -> "python-glanceclient";
"python-watcher" -> "python-keystoneclient";
"python-watcher" -> "python-neutronclient";
"python-watcher" -> "python-novaclient";
"python-watcher" -> "python-openstackclient";
"python-watcher" -> "python-subunit";
"python-watcher" -> six;
"python-watcher" -> sphinx;
"python-watcher" -> "sphinxcontrib-pecanwsme";
"python-watcher" -> sqlalchemy;
"python-watcher" -> stevedore;
"python-watcher" -> taskflow;
"python-watcher" -> testrepository;
"python-watcher" -> testscenarios;
"python-watcher" -> testtools;
"python-watcher" -> twine;
"python-watcherclient" -> babel;
"python-watcherclient" -> coverage;
"python-watcherclient" -> discover;
"python-watcherclient" -> hacking;
"python-watcherclient" -> httpretty;
"python-watcherclient" -> mock;
"python-watcherclient" -> "oslo.i18n";
"python-watcherclient" -> "oslo.utils";
"python-watcherclient" -> oslosphinx;
"python-watcherclient" -> oslotest;
"python-watcherclient" -> pbr;
"python-watcherclient" -> "python-keystoneclient";
"python-watcherclient" -> "python-subunit";
"python-watcherclient" -> six;
"python-watcherclient" -> sphinx;
"python-watcherclient" -> testrepository;
"python-watcherclient" -> testscenarios;
"python-watcherclient" -> testtools;
"python-watcherclient" -> twine;
"python-watcherclient" -> wheel;
"python-watcher_metering_drivers" -> coverage;
"python-watcher_metering_drivers" -> cython;
"python-watcher_metering_drivers" -> discover;
"python-watcher_metering_drivers" -> enum34;
"python-watcher_metering_drivers" -> freezegun;
"python-watcher_metering_drivers" -> hacking;
"python-watcher_metering_drivers" -> lxml;
"python-watcher_metering_drivers" -> mock;
"python-watcher_metering_drivers" -> "oslo.config";
"python-watcher_metering_drivers" -> "oslo.i18n";
"python-watcher_metering_drivers" -> "oslo.log";
"python-watcher_metering_drivers" -> oslosphinx;
"python-watcher_metering_drivers" -> oslotest;
"python-watcher_metering_drivers" -> pbr;
"python-watcher_metering_drivers" -> psutil;
"python-watcher_metering_drivers" -> pysnmp;
"python-watcher_metering_drivers" -> "python-subunit";
"python-watcher_metering_drivers" -> requests;
"python-watcher_metering_drivers" -> sphinx;
"python-watcher_metering_drivers" -> testrepository;
"python-watcher_metering_drivers" -> testscenarios;
"python-watcher_metering_drivers" -> testtools;
"python-watcher_metering_drivers" -> twine;
"python-watcher_metering_grid5000" -> coverage;
"python-watcher_metering_grid5000" -> cython;
"python-watcher_metering_grid5000" -> discover;
"python-watcher_metering_grid5000" -> enum34;
"python-watcher_metering_grid5000" -> freezegun;
"python-watcher_metering_grid5000" -> hacking;
"python-watcher_metering_grid5000" -> httpretty;
"python-watcher_metering_grid5000" -> lxml;
"python-watcher_metering_grid5000" -> mock;
"python-watcher_metering_grid5000" -> "oslo.config";
"python-watcher_metering_grid5000" -> "oslo.i18n";
"python-watcher_metering_grid5000" -> "oslo.log";
"python-watcher_metering_grid5000" -> oslosphinx;
"python-watcher_metering_grid5000" -> oslotest;
"python-watcher_metering_grid5000" -> pbr;
"python-watcher_metering_grid5000" -> psutil;
"python-watcher_metering_grid5000" -> pysnmp;
"python-watcher_metering_grid5000" -> "python-subunit";
"python-watcher_metering_grid5000" -> requests;
"python-watcher_metering_grid5000" -> sphinx;
"python-watcher_metering_grid5000" -> testrepository;
"python-watcher_metering_grid5000" -> testscenarios;
"python-watcher_metering_grid5000" -> testtools;
"python-watcher_metering_grid5000" -> twine;
"python-watcher_metering_vsphere" -> coverage;
"python-watcher_metering_vsphere" -> discover;
"python-watcher_metering_vsphere" -> enum34;
"python-watcher_metering_vsphere" -> freezegun;
"python-watcher_metering_vsphere" -> hacking;
"python-watcher_metering_vsphere" -> httpretty;
"python-watcher_metering_vsphere" -> lxml;
"python-watcher_metering_vsphere" -> mock;
"python-watcher_metering_vsphere" -> "oslo.config";
"python-watcher_metering_vsphere" -> "oslo.i18n";
"python-watcher_metering_vsphere" -> "oslo.log";
"python-watcher_metering_vsphere" -> oslosphinx;
"python-watcher_metering_vsphere" -> oslotest;
"python-watcher_metering_vsphere" -> pbr;
"python-watcher_metering_vsphere" -> "python-subunit";
"python-watcher_metering_vsphere" -> requests;
"python-watcher_metering_vsphere" -> sphinx;
"python-watcher_metering_vsphere" -> tabulate;
"python-watcher_metering_vsphere" -> testrepository;
"python-watcher_metering_vsphere" -> testscenarios;
"python-watcher_metering_vsphere" -> testtools;
"python-watcher_metering_vsphere" -> twine;
"python-zaqarclient" -> coverage;
"python-zaqarclient" -> ddt;
"python-zaqarclient" -> discover;
"python-zaqarclient" -> fixtures;
"python-zaqarclient" -> hacking;
"python-zaqarclient" -> jsonschema;
"python-zaqarclient" -> mock;
"python-zaqarclient" -> nose;
"python-zaqarclient" -> "nose-exclude";
"python-zaqarclient" -> "openstack-doc-tools";
"python-zaqarclient" -> "openstack.nose-plugin";
"python-zaqarclient" -> "oslo.i18n";
"python-zaqarclient" -> oslosphinx;
"python-zaqarclient" -> pbr;
"python-zaqarclient" -> "python-keystoneclient";
"python-zaqarclient" -> "python-subunit";
"python-zaqarclient" -> requests;
"python-zaqarclient" -> six;
"python-zaqarclient" -> sphinx;
"python-zaqarclient" -> stevedore;
"python-zaqarclient" -> testrepository;
"python-zaqarclient" -> testtools;
pyupio -> continue;
pyupio -> distribute;
pyupio -> pdfminer;
pyupio -> pycrypto;
pyupio -> south;
pywebhooks -> celery;
pywebhooks -> coverage;
pywebhooks -> flake8;
pywebhooks -> flask;
pywebhooks -> "flask-restful";
pywebhooks -> nose;
pywebhooks -> pep8;
pywebhooks -> pylint;
pywebhooks -> redis;
pywebhooks -> requests;
pywebhooks -> "requests-mock";
pywebhooks -> rethinkdb;
pywebhooks -> testtools;
pywebhooks -> tox;
pywebhooks -> werkzeug;
pywikibot -> argparse;
pywikibot -> beautifulsoup4;
pywikibot -> flickrapi;
pywikibot -> httplib2;
pywikibot -> irc;
pywikibot -> pillow;
pywikibot -> pydot;
pywikibot -> sphinx;
pywizard -> beautifulsoup4;
pywizard -> coverage;
pywizard -> distribute;
pywizard -> jinja2;
pywizard -> mock;
pywizard -> pytest;
pywizard -> "pytest-cov";
pywizard -> sphinx;
pywizard -> "sphinx-argparse";
pywizard -> virtualenv;
pyzmq -> cython;
pyzmq -> sphinx;
qeventlog -> amqp;
qeventlog -> anyjson;
qeventlog -> celery;
qeventlog -> cfgtool;
qeventlog -> colorama;
qeventlog -> configobj;
qeventlog -> contextlib2;
qeventlog -> django;
qeventlog -> "django-model-utils";
qeventlog -> kombu;
qeventlog -> logtool;
qeventlog -> logutils;
qeventlog -> "path.py";
qeventlog -> psycopg2;
qeventlog -> pytz;
qeventlog -> raven;
qeventlog -> six;
qeventlog -> statsd;
qeventlog -> termcolor;
qeventlog -> wrapt;
qipipe -> bunch;
qipipe -> inflection;
qipipe -> matplotlib;
qipipe -> networkx;
qipipe -> nibabel;
qipipe -> numpy;
qipipe -> openpyxl;
qipipe -> scipy;
qipipe -> six;
qipipe -> sympy;
qmpy -> django;
qmpy -> "django-extensions";
qmpy -> elementtree;
qmpy -> matplotlib;
qmpy -> "mysql-python";
qmpy -> networkx;
qmpy -> numpy;
qmpy -> pyparsing;
qmpy -> pytest;
qmpy -> "python-memcached";
qmpy -> pyyaml;
qmpy -> scipy;
querylist -> coveralls;
querylist -> docutils;
querylist -> flake8;
querylist -> jinja2;
querylist -> nose;
querylist -> pep257;
querylist -> pygments;
querylist -> sphinx;
querylist -> unittest2;
"quickbooks-py" -> bumpversion;
"quickbooks-py" -> cffi;
"quickbooks-py" -> cryptography;
"quickbooks-py" -> decorator;
"quickbooks-py" -> enum34;
"quickbooks-py" -> gnureadline;
"quickbooks-py" -> ipaddress;
"quickbooks-py" -> ipython;
"quickbooks-py" -> "ndg-httpsclient";
"quickbooks-py" -> "path.py";
"quickbooks-py" -> pexpect;
"quickbooks-py" -> pyasn1;
"quickbooks-py" -> pycparser;
"quickbooks-py" -> pyopenssl;
"quickbooks-py" -> rauth;
"quickbooks-py" -> requests;
"quickbooks-py" -> simplegeneric;
"quickbooks-py" -> six;
"quickbooks-py" -> traitlets;
"quickbooks-py" -> wheel;
"quickbooks-py" -> xmltodict;
quokka -> blinker;
quokka -> flake8;
quokka -> flask;
quokka -> "flask-assets";
quokka -> "flask-babel";
quokka -> "flask-cache";
quokka -> "flask-debugtoolbar";
quokka -> "flask-login";
quokka -> "flask-mail";
quokka -> "flask-script";
quokka -> "flask-testing";
quokka -> markupsafe;
quokka -> mongoengine;
quokka -> passlib;
quokka -> pillow;
quokka -> pyyaml;
quokka -> speaklater;
quokka -> wtforms;
"quokka-flask-security" -> bcrypt;
"quokka-flask-security" -> flask;
"quokka-flask-security" -> "flask-login";
"quokka-flask-security" -> "flask-mail";
"quokka-flask-security" -> "flask-sqlalchemy";
"quokka-flask-security" -> "flask-wtf";
"quokka-flask-security" -> itsdangerous;
"quokka-flask-security" -> passlib;
"quokka-flask-security" -> pymongo;
"quokka-flask-security" -> pytest;
"quokka-flask-security" -> "pytest-cache";
"quokka-flask-security" -> "pytest-cov";
"quokka-flask-security" -> "pytest-flakes";
"quokka-flask-security" -> "pytest-pep8";
"quokka-flask-security" -> tox;
qworkerd -> celery;
qworkerd -> cfgtool;
qworkerd -> django;
qworkerd -> logtool;
qworkerd -> "path.py";
qworkerd -> psutil;
qworkerd -> raven;
qworkerd -> statsd;
qworkerd -> termcolor;
"rackspace-python-neutronclient" -> argparse;
"rackspace-python-neutronclient" -> babel;
"rackspace-python-neutronclient" -> cliff;
"rackspace-python-neutronclient" -> coverage;
"rackspace-python-neutronclient" -> discover;
"rackspace-python-neutronclient" -> fixtures;
"rackspace-python-neutronclient" -> hacking;
"rackspace-python-neutronclient" -> iso8601;
"rackspace-python-neutronclient" -> mock;
"rackspace-python-neutronclient" -> mox3;
"rackspace-python-neutronclient" -> netaddr;
"rackspace-python-neutronclient" -> "oslo.i18n";
"rackspace-python-neutronclient" -> "oslo.serialization";
"rackspace-python-neutronclient" -> "oslo.utils";
"rackspace-python-neutronclient" -> oslosphinx;
"rackspace-python-neutronclient" -> oslotest;
"rackspace-python-neutronclient" -> pbr;
"rackspace-python-neutronclient" -> "python-keystoneclient";
"rackspace-python-neutronclient" -> "python-subunit";
"rackspace-python-neutronclient" -> requests;
"rackspace-python-neutronclient" -> "requests-mock";
"rackspace-python-neutronclient" -> simplejson;
"rackspace-python-neutronclient" -> six;
"rackspace-python-neutronclient" -> sphinx;
"rackspace-python-neutronclient" -> testrepository;
"rackspace-python-neutronclient" -> testtools;
rackspacesdk -> coverage;
rackspacesdk -> discover;
rackspacesdk -> fixtures;
rackspacesdk -> hacking;
rackspacesdk -> mock;
rackspacesdk -> openstacksdk;
rackspacesdk -> "os-testr";
rackspacesdk -> oslosphinx;
rackspacesdk -> "python-subunit";
rackspacesdk -> "requests-mock";
rackspacesdk -> six;
rackspacesdk -> sphinx;
rackspacesdk -> testrepository;
rackspacesdk -> testscenarios;
rackspacesdk -> testtools;
rally -> babel;
rally -> boto;
rally -> coverage;
rally -> ddt;
rally -> decorator;
rally -> fixtures;
rally -> hacking;
rally -> iso8601;
rally -> jinja2;
rally -> jsonschema;
rally -> mock;
rally -> netaddr;
rally -> ordereddict;
rally -> "oslo.config";
rally -> "oslo.db";
rally -> "oslo.i18n";
rally -> "oslo.log";
rally -> "oslo.serialization";
rally -> "oslo.utils";
rally -> oslosphinx;
rally -> oslotest;
rally -> paramiko;
rally -> pbr;
rally -> prettytable;
rally -> "python-ceilometerclient";
rally -> "python-cinderclient";
rally -> "python-cueclient";
rally -> "python-dateutil";
rally -> "python-designateclient";
rally -> "python-fuelclient";
rally -> "python-glanceclient";
rally -> "python-heatclient";
rally -> "python-ironicclient";
rally -> "python-keystoneclient";
rally -> "python-manilaclient";
rally -> "python-mistralclient";
rally -> "python-monascaclient";
rally -> "python-muranoclient";
rally -> "python-neutronclient";
rally -> "python-novaclient";
rally -> "python-saharaclient";
rally -> "python-subunit";
rally -> "python-swiftclient";
rally -> "python-troveclient";
rally -> "python-zaqarclient";
rally -> pyyaml;
rally -> requests;
rally -> simplejson;
rally -> six;
rally -> sphinx;
rally -> sqlalchemy;
rally -> testrepository;
rally -> testtools;
ramlfications -> "check-manifest";
ramlfications -> click;
ramlfications -> coverage;
ramlfications -> flake8;
ramlfications -> markdown2;
ramlfications -> mock;
ramlfications -> pytest;
ramlfications -> "pytest-cov";
ramlfications -> "pytest-mock";
ramlfications -> pyyaml;
ramlfications -> six;
ramlfications -> sphinx;
ramlfications -> "sphinx-rtd-theme";
ramlfications -> termcolor;
ramlfications -> tox;
ramlfications -> xmltodict;
"rapid-router" -> django;
"rapid-router" -> "django-appconf";
"rapid-router" -> "django-pipeline";
"rapid-router" -> djangorestframework;
"rapid-router" -> docutils;
"rapid-router" -> pyhamcrest;
"rapid-router" -> six;
rapport -> argparse;
rapport -> coverage;
rapport -> futures;
rapport -> httplib2;
rapport -> jinja2;
rapport -> lxml;
rapport -> nose;
rapport -> paramiko;
rapport -> requests;
rapport -> tweepy;
ratatosk -> cement;
ratatosk -> mock;
ratatosk -> nose;
ratatosk -> pil;
ratatosk -> pygraphviz;
ratatosk -> pysam;
ratatosk -> pyyaml;
ratatosk -> simplejson;
ratatosk -> tornado;
"rdc.etl" -> beautifulsoup;
"rdc.etl" -> blessings;
"rdc.etl" -> lxml;
"rdc.etl" -> pastescript;
"rdc.etl" -> psutil;
"rdc.etl" -> "repoze.lru";
"rdc.etl" -> requests;
"rdc.etl" -> sqlalchemy;
"rdc.etl" -> unidecode;
"rdc.etl" -> webob;
rdopkg -> "-";
rdopkg -> babel;
rdopkg -> blessings;
rdopkg -> keyring;
rdopkg -> "os-client-config";
rdopkg -> "oslo.i18n";
rdopkg -> "oslo.serialization";
rdopkg -> "oslo.utils";
rdopkg -> paramiko;
rdopkg -> pbr;
rdopkg -> pycrypto;
rdopkg -> "python-cinderclient";
rdopkg -> "python-glanceclient";
rdopkg -> "python-keystoneclient";
rdopkg -> "python-neutronclient";
rdopkg -> "python-novaclient";
rdopkg -> pyyaml;
rdopkg -> rdopkg;
rdopkg -> requests;
rdopkg -> stevedore;
readembedability -> beautifulsoup4;
readembedability -> cssselect;
readembedability -> nltk;
readembedability -> pep8;
readembedability -> pyflakes;
readembedability -> pyopenssl;
readembedability -> "python-dateutil";
readembedability -> treq;
readembedability -> twisted;
receiver -> "dimagi-utils";
receiver -> django;
receiver -> lxml;
receiver -> pytz;
receiver -> requests;
receiver -> restkit;
receiver -> simplejson;
recipy -> docopt;
recipy -> flask;
recipy -> "flask-bootstrap";
recipy -> "flask-script";
recipy -> "flask-wtf";
recipy -> gitpython;
recipy -> jinja2;
recipy -> "python-dateutil";
recipy -> six;
recipy -> wrapt;
Reding -> argparse;
Reding -> cherrypy;
Reding -> "cov-core";
Reding -> coverage;
Reding -> distribute;
Reding -> flask;
Reding -> "flask-restful";
Reding -> jinja2;
Reding -> pep8;
Reding -> py;
Reding -> pycrypto;
Reding -> pytest;
Reding -> "pytest-cache";
Reding -> "pytest-cov";
Reding -> "pytest-pep8";
Reding -> "python-coveralls";
Reding -> "python-dateutil";
Reding -> pytz;
Reding -> redis;
Reding -> six;
Reding -> uwsgi;
Reding -> werkzeug;
Reding -> wsgiref;
rednose -> colorama;
rednose -> distribute;
reflectme -> appdirs;
reflectme -> flask;
reflectme -> "flask-sqlalchemy";
reflectme -> "flask-wtf";
reflectme -> itsdangerous;
reflectme -> jinja2;
reflectme -> markupsafe;
reflectme -> pygments;
reflectme -> sqlalchemy;
reflectme -> werkzeug;
reflectme -> wsgiref;
reflectme -> wtforms;
rejviz -> coverage;
rejviz -> discover;
rejviz -> hacking;
rejviz -> jinja2;
rejviz -> mock;
rejviz -> pbr;
rejviz -> six;
rejviz -> sphinx;
rejviz -> "sphinxcontrib-pecanwsme";
rejviz -> testrepository;
rejviz -> testtools;
relayr -> gevent;
relayr -> "paho-mqtt";
relayr -> pytest;
relayr -> "pytest-cov";
relayr -> "pytest-pep8";
relayr -> "pytest-timeout";
relayr -> "pytest-xdist";
relayr -> requests;
relayr -> sphinx;
relayr -> "sphinx-rtd-theme";
relayr -> termcolor;
releases -> invoke;
releases -> mock;
releases -> six;
releases -> sphinx;
releases -> "sphinx-rtd-theme";
releases -> twine;
releases -> wheel;
relengapi -> alembic;
relengapi -> argparse;
relengapi -> blinker;
relengapi -> boto;
relengapi -> celery;
relengapi -> croniter;
relengapi -> flask;
relengapi -> "flask-login";
relengapi -> furl;
relengapi -> ipy;
relengapi -> "python-dateutil";
relengapi -> "python-memcached";
relengapi -> pytz;
relengapi -> requests;
relengapi -> "requests-futures";
relengapi -> simplejson;
relengapi -> sphinx;
relengapi -> sqlalchemy;
relengapi -> structlog;
relengapi -> wrapt;
reno -> babel;
reno -> coverage;
reno -> discover;
reno -> hacking;
reno -> mock;
reno -> oslosphinx;
reno -> oslotest;
reno -> pbr;
reno -> "python-subunit";
reno -> pyyaml;
reno -> testrepository;
reno -> testscenarios;
reno -> testtools;
rep -> ipython;
rep -> jinja2;
rep -> matplotlib;
rep -> numexpr;
rep -> numpy;
rep -> openpyxl;
rep -> pandas;
rep -> pyzmq;
rep -> requests;
rep -> "scikit-learn";
rep -> scipy;
Repack -> json;
repositorytools -> argparse;
repositorytools -> coverage;
repositorytools -> mock;
repositorytools -> nose;
repositorytools -> pytest;
repositorytools -> "pytest-cov";
repositorytools -> requests;
repositorytools -> six;
repositorytools -> sphinx;
repositorytools -> tox;
"repoze.bfg" -> docutils;
"repoze.bfg" -> "repoze.bfg";
"repoze.bfg" -> "repoze.zodbconn";
"repoze.bfg" -> zodb3;
"repoze.sphinx.autointerface" -> distribute;
"repoze.sphinx.autointerface" -> sphinx;
"repoze.sphinx.autointerface" -> "zope.interface";
"repoze.what" -> paste;
"repoze.what" -> "repoze.who";
"repoze.who" -> distribute;
"repoze.who" -> webob;
"repoze.who" -> "zope.interface";
"repoze.zodbconn" -> distribute;
"repoze.zodbconn" -> transaction;
"repoze.zodbconn" -> zconfig;
requests -> py;
requests -> pytest;
requests -> "pytest-cov";
requests -> wheel;
"requests-forecast" -> bumpversion;
"requests-forecast" -> "check-manifest";
"requests-forecast" -> "cov-core";
"requests-forecast" -> coverage;
"requests-forecast" -> httpretty;
"requests-forecast" -> invoke;
"requests-forecast" -> pytest;
"requests-forecast" -> "pytest-cov";
"requests-forecast" -> pytz;
"requests-forecast" -> requests;
"requests-forecast" -> sphinx;
"requests-forecast" -> wheel;
"requests-futures" -> futures;
"requests-futures" -> requests;
"requests-mock" -> coverage;
"requests-mock" -> discover;
"requests-mock" -> fixtures;
"requests-mock" -> mock;
"requests-mock" -> pbr;
"requests-mock" -> requests;
"requests-mock" -> six;
"requests-mock" -> sphinx;
"requests-mock" -> testrepository;
"requests-mock" -> testtools;
"requests-mock" -> wheel;
"requests-oauthlib" -> oauthlib;
"requests-oauthlib" -> requests;
"requests-toolbelt" -> mock;
"requests-toolbelt" -> pytest;
"rest-api-blueprint" -> argparse;
"rest-api-blueprint" -> behave;
"rest-api-blueprint" -> decorator;
"rest-api-blueprint" -> distribute;
"rest-api-blueprint" -> docutils;
"rest-api-blueprint" -> flake8;
"rest-api-blueprint" -> flask;
"rest-api-blueprint" -> fuzzywuzzy;
"rest-api-blueprint" -> httplib2;
"rest-api-blueprint" -> ipython;
"rest-api-blueprint" -> jinja2;
"rest-api-blueprint" -> jsonschema;
"rest-api-blueprint" -> mimeparse;
"rest-api-blueprint" -> mock;
"rest-api-blueprint" -> nose;
"rest-api-blueprint" -> oauth2;
"rest-api-blueprint" -> pep8;
"rest-api-blueprint" -> pyflakes;
"rest-api-blueprint" -> pygments;
"rest-api-blueprint" -> rednose;
"rest-api-blueprint" -> requests;
"rest-api-blueprint" -> schema;
"rest-api-blueprint" -> selenium;
"rest-api-blueprint" -> slumber;
"rest-api-blueprint" -> sphinx;
"rest-api-blueprint" -> "sphinxcontrib-programoutput";
"rest-api-blueprint" -> sure;
"rest-api-blueprint" -> termcolor;
"rest-api-blueprint" -> werkzeug;
"rest-api-blueprint" -> wsgiref;
rest_toolkit -> beautifulsoup4;
rest_toolkit -> colander;
rest_toolkit -> docutils;
rest_toolkit -> jinja2;
rest_toolkit -> jsonschema;
rest_toolkit -> markupsafe;
rest_toolkit -> mock;
rest_toolkit -> pastedeploy;
rest_toolkit -> py;
rest_toolkit -> pygments;
rest_toolkit -> pyramid;
rest_toolkit -> pytest;
rest_toolkit -> "repoze.lru";
rest_toolkit -> six;
rest_toolkit -> sphinx;
rest_toolkit -> sqlalchemy;
rest_toolkit -> transaction;
rest_toolkit -> translationstring;
rest_toolkit -> venusian;
rest_toolkit -> waitress;
rest_toolkit -> webob;
rest_toolkit -> webtest;
rest_toolkit -> wtforms;
rest_toolkit -> "zope.deprecation";
rest_toolkit -> "zope.interface";
rest_toolkit -> "zope.sqlalchemy";
retrying -> six;
revscoring -> distribute;
revscoring -> docopt;
revscoring -> nltk;
revscoring -> nose;
revscoring -> numpy;
revscoring -> pyenchant;
revscoring -> pytz;
revscoring -> requests;
revscoring -> "scikit-learn";
revscoring -> scipy;
revscoring -> tabulate;
ringo -> alembic;
ringo -> babel;
ringo -> "dogpile.cache";
ringo -> invoke;
ringo -> passlib;
ringo -> psycopg2;
ringo -> pyramid;
ringo -> "pyramid-beaker";
ringo -> "pyramid-tm";
ringo -> "python-dateutil";
ringo -> "python-levenshtein";
ringo -> sqlalchemy;
ringo -> transaction;
ringo -> waitress;
ringo -> webhelpers;
ringo -> "zope.sqlalchemy";
ripcord -> babel;
ripcord -> coverage;
ripcord -> discover;
ripcord -> eventlet;
ripcord -> fixtures;
ripcord -> hacking;
ripcord -> iso8601;
ripcord -> netaddr;
ripcord -> "oslo.config";
ripcord -> pbr;
ripcord -> pecan;
ripcord -> "python-keystoneclient";
ripcord -> six;
ripcord -> sphinx;
ripcord -> sqlalchemy;
ripcord -> "sqlalchemy-migrate";
ripcord -> testrepository;
ripcord -> testscenarios;
ripcord -> testtools;
rogue_scores -> argparse;
rogue_scores -> coverage;
rogue_scores -> docutils;
rogue_scores -> flask;
rogue_scores -> gunicorn;
rogue_scores -> httmock;
rogue_scores -> itsdangerous;
rogue_scores -> jinja2;
rogue_scores -> markupsafe;
rogue_scores -> pep8;
rogue_scores -> py;
rogue_scores -> pygments;
rogue_scores -> requests;
rogue_scores -> sphinx;
rogue_scores -> tox;
rogue_scores -> virtualenv;
rogue_scores -> werkzeug;
rogue_scores -> wsgiref;
roomyjob -> "cov-core";
roomyjob -> coverage;
roomyjob -> docopt;
roomyjob -> httpretty;
roomyjob -> mock;
roomyjob -> nose;
roomyjob -> py;
roomyjob -> pytest;
roomyjob -> "pytest-cov";
roomyjob -> "python-dateutil";
roomyjob -> requests;
roomyjob -> six;
roomyjob -> urllib3;
roomyjob -> wsgiref;
rq -> click;
rq -> mock;
rq -> redis;
rsa -> pyasn1;
rtwo -> "apache-libcloud";
rtwo -> pbr;
rtwo -> "python-cinderclient";
rtwo -> "python-glanceclient";
rtwo -> "python-keystoneclient";
rtwo -> "python-neutronclient";
rtwo -> "python-novaclient";
rtwo -> "python-openstackclient";
rtwo -> "python-swiftclient";
rtwo -> requests;
rum -> babel;
rum -> configobj;
rum -> formencode;
rum -> genshi;
rum -> paste;
rum -> pastedeploy;
rum -> pastescript;
rum -> routes;
rum -> simplejson;
rum -> toscawidgets;
rum -> webob;
runestone -> alabaster;
runestone -> babel;
runestone -> click;
runestone -> docutils;
runestone -> itsdangerous;
runestone -> jinja2;
runestone -> markupsafe;
runestone -> paver;
runestone -> pygments;
runestone -> pytz;
runestone -> six;
runestone -> snowballstemmer;
runestone -> sphinx;
runestone -> "sphinx-rtd-theme";
runstats -> alabaster;
runstats -> babel;
runstats -> coverage;
runstats -> docutils;
runstats -> jinja2;
runstats -> markupsafe;
runstats -> nose;
runstats -> pluggy;
runstats -> py;
runstats -> pygments;
runstats -> pytz;
runstats -> six;
runstats -> snowballstemmer;
runstats -> sphinx;
runstats -> "sphinx-rtd-theme";
runstats -> tox;
runstats -> virtualenv;
runstats -> wsgiref;
s3keyring -> click;
s3keyring -> colorama;
s3keyring -> docutils;
s3keyring -> flake8;
s3keyring -> ipython;
s3keyring -> jinja2;
s3keyring -> markupsafe;
s3keyring -> mccabe;
s3keyring -> mock;
s3keyring -> paver;
s3keyring -> pep8;
s3keyring -> py;
s3keyring -> pyflakes;
s3keyring -> pygments;
s3keyring -> pytest;
s3keyring -> sphinx;
sahara -> "-";
sahara -> alembic;
sahara -> babel;
sahara -> coverage;
sahara -> discover;
sahara -> eventlet;
sahara -> fixtures;
sahara -> flask;
sahara -> hacking;
sahara -> iso8601;
sahara -> jsonschema;
sahara -> keystonemiddleware;
sahara -> lockfile;
sahara -> mock;
sahara -> "mysql-python";
sahara -> "oslo.config";
sahara -> "oslo.db";
sahara -> "oslo.i18n";
sahara -> "oslo.messaging";
sahara -> "oslo.serialization";
sahara -> "oslo.utils";
sahara -> oslosphinx;
sahara -> oslotest;
sahara -> paramiko;
sahara -> pbr;
sahara -> psycopg2;
sahara -> pylint;
sahara -> "python-cinderclient";
sahara -> "python-heatclient";
sahara -> "python-keystoneclient";
sahara -> "python-neutronclient";
sahara -> "python-novaclient";
sahara -> "python-saharaclient";
sahara -> "python-swiftclient";
sahara -> requests;
sahara -> six;
sahara -> sphinx;
sahara -> "sphinxcontrib-httpdomain";
sahara -> sqlalchemy;
sahara -> "sqlalchemy-migrate";
sahara -> stevedore;
sahara -> testrepository;
sahara -> testscenarios;
sahara -> testtools;
sahara -> webob;
salesking -> certifi;
salesking -> chardet;
salesking -> iso8601;
salesking -> jsonpatch;
salesking -> jsonpointer;
salesking -> jsonschema;
salesking -> mock;
salesking -> oauthlib;
salesking -> requests;
salesking -> validictory;
Satchmo -> django;
Satchmo -> "django-registration";
Satchmo -> pycrypto;
Satchmo -> pyyaml;
Satchmo -> reportlab;
Satchmo -> "sorl-thumbnail";
Satchmo -> south;
satori -> argparse;
satori -> coverage;
satori -> discover;
satori -> fixtures;
satori -> freezegun;
satori -> hacking;
satori -> ipaddress;
satori -> iso8601;
satori -> jinja2;
satori -> mock;
satori -> paramiko;
satori -> pbr;
satori -> pep257;
satori -> pep8;
satori -> "python-novaclient";
satori -> six;
satori -> sphinx;
satori -> testrepository;
satori -> testtools;
satori -> tldextract;
savanna -> alembic;
savanna -> babel;
savanna -> coverage;
savanna -> docutils;
savanna -> eventlet;
savanna -> fixtures;
savanna -> flake8;
savanna -> flask;
savanna -> hacking;
savanna -> iso8601;
savanna -> jsonschema;
savanna -> kombu;
savanna -> mock;
savanna -> nose;
savanna -> "openstack.nose-plugin";
savanna -> "oslo.config";
savanna -> paramiko;
savanna -> pbr;
savanna -> pep8;
savanna -> pyflakes;
savanna -> pylint;
savanna -> "python-cinderclient";
savanna -> "python-keystoneclient";
savanna -> "python-novaclient";
savanna -> "python-savannaclient";
savanna -> "python-swiftclient";
savanna -> requests;
savanna -> six;
savanna -> sphinx;
savanna -> "sphinxcontrib-httpdomain";
savanna -> sqlalchemy;
savanna -> unittest2;
savanna -> webob;
"savanna-dashboard" -> coverage;
"savanna-dashboard" -> flake8;
"savanna-dashboard" -> hacking;
"savanna-dashboard" -> mock;
"savanna-dashboard" -> nose;
"savanna-dashboard" -> "openstack.nose-plugin";
"savanna-dashboard" -> "oslo.config";
"savanna-dashboard" -> pbr;
"savanna-dashboard" -> pep8;
"savanna-dashboard" -> pyflakes;
"savanna-dashboard" -> pylint;
"savanna-dashboard" -> "python-savannaclient";
"savanna-dashboard" -> selenium;
"savanna-dashboard" -> testtools;
"savanna-dashboard" -> unittest2;
sbp -> boto;
sbp -> "cov-core";
sbp -> coverage;
sbp -> flake8;
sbp -> futures;
sbp -> httpretty;
sbp -> pep8;
sbp -> pyserial;
sbp -> pytest;
sbp -> "pytest-cov";
sbp -> pyyaml;
sbp -> requests;
sbp -> "requests-futures";
sbp -> tox;
sbp -> virtualenv;
"sc.apyb.pythonbrasil6" -> distribute;
"sc.apyb.pythonbrasil6" -> "plone.app.imaging";
"sc.apyb.pythonbrasil6" -> "products.ploneformgen";
"sc.apyb.pythonbrasil6" -> "sc.social.bookmarks";
"sc.dev.core" -> distribute;
"sc.dev.core" -> "setuptools-git";
"sc.dev.core" -> sphinx;
"sc.dev.core" -> "zest.releaser";
"sc.embedder" -> distribute;
"sc.embedder" -> "five.grok";
"sc.embedder" -> lxml;
"sc.embedder" -> "plone.api";
"sc.embedder" -> "plone.app.dexterity";
"sc.embedder" -> "plone.app.referenceablebehavior";
"sc.embedder" -> "plone.dexterity";
"sc.embedder" -> "plone.namedfile";
"sc.embedder" -> "products.cmfplone";
"sc.embedder" -> "products.genericsetup";
"sc.embedder" -> requests;
"sc.embedder" -> "z3c.form";
"sc.embedder" -> "zope.component";
"sc.embedder" -> "zope.event";
"sc.embedder" -> "zope.i18nmessageid";
"sc.embedder" -> "zope.interface";
"sc.embedder" -> "zope.schema";
schematics -> coverage;
schematics -> mock;
schematics -> pymongo;
schematics -> pytest;
schematics -> "python-dateutil";
"scikit-allel" -> cython;
"scikit-allel" -> flake8;
"scikit-allel" -> h5py;
"scikit-allel" -> humanize;
"scikit-allel" -> ipython;
"scikit-allel" -> matplotlib;
"scikit-allel" -> mock;
"scikit-allel" -> nose;
"scikit-allel" -> numexpr;
"scikit-allel" -> numpy;
"scikit-allel" -> numpydoc;
"scikit-allel" -> pandas;
"scikit-allel" -> petl;
"scikit-allel" -> psutil;
"scikit-allel" -> "scikit-learn";
"scikit-allel" -> scipy;
"scikit-allel" -> seaborn;
"scikit-allel" -> toolz;
"scikit-allel" -> twine;
"scikit-bio" -> "check-manifest";
"scikit-bio" -> contextlib2;
"scikit-bio" -> coveralls;
"scikit-bio" -> decorator;
"scikit-bio" -> flake8;
"scikit-bio" -> future;
"scikit-bio" -> httpretty;
"scikit-bio" -> ipython;
"scikit-bio" -> lockfile;
"scikit-bio" -> matplotlib;
"scikit-bio" -> natsort;
"scikit-bio" -> nose;
"scikit-bio" -> numpy;
"scikit-bio" -> pandas;
"scikit-bio" -> pep8;
"scikit-bio" -> pip;
"scikit-bio" -> pyflakes;
"scikit-bio" -> "python-dateutil";
"scikit-bio" -> scipy;
"scikit-bio" -> six;
"scikit-bio" -> "sphinx-bootstrap-theme";
"scikit-image" -> "-";
"scikit-image" -> cython;
"scikit-image" -> matplotlib;
"scikit-image" -> networkx;
"scikit-image" -> numpy;
"scikit-image" -> pillow;
"scikit-image" -> scipy;
"scikit-image" -> six;
"scikit-nano" -> cython;
"scikit-nano" -> future;
"scikit-nano" -> numpy;
"scikit-nano" -> numpydoc;
"scikit-nano" -> prettytable;
"scikit-nano" -> pymatgen;
"scikit-nano" -> pyyaml;
"scikit-nano" -> requests;
"scikit-nano" -> scipy;
"scikit-nano" -> six;
"scikit-nano" -> "sphinx-argparse";
"scikit-nano" -> wheel;
Scrapy -> boto;
Scrapy -> ipython;
Scrapy -> jmespath;
Scrapy -> mock;
Scrapy -> pytest;
Scrapy -> "pytest-cov";
Scrapy -> testfixtures;
scrypture -> astroid;
scrypture -> flask;
scrypture -> "flask-bootstrap";
scrypture -> "flask-restful";
scrypture -> "flask-wtf";
scrypture -> itsdangerous;
scrypture -> jinja2;
scrypture -> markupsafe;
scrypture -> netaddr;
scrypture -> pylint;
scrypture -> pytz;
scrypture -> requests;
scrypture -> six;
scrypture -> tablib;
scrypture -> werkzeug;
scrypture -> wsgiref;
scrypture -> wtforms;
"sc.social.bookmarks" -> distribute;
"sc.social.bookmarks" -> "plone.app.layout";
"sc.social.bookmarks" -> "plone.app.portlets";
"sc.social.bookmarks" -> "plone.app.registry";
"sc.social.bookmarks" -> "plone.memoize";
"sc.social.bookmarks" -> "plone.portlets";
"sc.social.bookmarks" -> "plone.registry";
"sc.social.bookmarks" -> "products.cmfcore";
"sc.social.bookmarks" -> "products.cmfplone";
"sc.social.bookmarks" -> "zope.component";
"sc.social.bookmarks" -> "zope.formlib";
"sc.social.bookmarks" -> "zope.i18nmessageid";
"sc.social.bookmarks" -> "zope.interface";
"sc.social.bookmarks" -> "zope.schema";
"sc.social.like" -> acquisition;
"sc.social.like" -> distribute;
"sc.social.like" -> "plone.api";
"sc.social.like" -> "plone.app.layout";
"sc.social.like" -> "plone.app.upgrade";
"sc.social.like" -> "plone.memoize";
"sc.social.like" -> "products.archetypes";
"sc.social.like" -> "products.cmfcore";
"sc.social.like" -> "products.cmfplone";
"sc.social.like" -> "products.genericsetup";
"sc.social.like" -> "zope.component";
"sc.social.like" -> "zope.i18nmessageid";
"sc.social.like" -> "zope.interface";
"sc.social.like" -> "zope.schema";
sdataflow -> colorama;
sdataflow -> docutils;
sdataflow -> flake8;
sdataflow -> jinja2;
sdataflow -> markupsafe;
sdataflow -> mccabe;
sdataflow -> mock;
sdataflow -> paver;
sdataflow -> pep8;
sdataflow -> ply;
sdataflow -> py;
sdataflow -> pyflakes;
sdataflow -> pygments;
sdataflow -> pytest;
sdataflow -> six;
sdataflow -> sphinx;
"seamicro-ml2" -> babel;
"seamicro-ml2" -> coverage;
"seamicro-ml2" -> discover;
"seamicro-ml2" -> hacking;
"seamicro-ml2" -> neutron;
"seamicro-ml2" -> oslosphinx;
"seamicro-ml2" -> oslotest;
"seamicro-ml2" -> pbr;
"seamicro-ml2" -> "python-seamicroclient";
"seamicro-ml2" -> "python-subunit";
"seamicro-ml2" -> sphinx;
"seamicro-ml2" -> testrepository;
"seamicro-ml2" -> testscenarios;
"seamicro-ml2" -> testtools;
"seamicro-ml2" -> webtest;
"seantis.dir.base" -> "collective.autopermission";
"seantis.dir.base" -> "collective.geo.behaviour";
"seantis.dir.base" -> "collective.geo.mapwidget";
"seantis.dir.base" -> "collective.geo.settings";
"seantis.dir.base" -> distribute;
"seantis.dir.base" -> plone;
"seantis.dir.base" -> "plone.app.dexterity";
"seantis.dir.base" -> "plone.behavior";
"seantis.dir.base" -> "plone.directives.form";
"seantis.dir.base" -> "plone.namedfile";
"seantis.dir.base" -> xlrd;
"seantis.dir.base" -> xlwt;
security_monkey -> apscheduler;
security_monkey -> arrow;
security_monkey -> bcrypt;
security_monkey -> beautifulsoup;
security_monkey -> boto;
security_monkey -> boto3;
security_monkey -> botocore;
security_monkey -> bottle;
security_monkey -> cryptography;
security_monkey -> dnspython;
security_monkey -> flask;
security_monkey -> "flask-login";
security_monkey -> "flask-mail";
security_monkey -> "flask-migrate";
security_monkey -> "flask-restful";
security_monkey -> "flask-script";
security_monkey -> "flask-sqlalchemy";
security_monkey -> "flask-wtf";
security_monkey -> gunicorn;
security_monkey -> ipaddr;
security_monkey -> ipython;
security_monkey -> itsdangerous;
security_monkey -> jinja2;
security_monkey -> jira;
security_monkey -> markupsafe;
security_monkey -> mock;
security_monkey -> nose;
security_monkey -> paste;
security_monkey -> pika;
security_monkey -> psycopg2;
security_monkey -> "python-dateutil";
security_monkey -> "python-memcached";
security_monkey -> pyyaml;
security_monkey -> requests;
security_monkey -> sphinx;
security_monkey -> sqlalchemy;
security_monkey -> werkzeug;
SeedboxManager -> alabaster;
SeedboxManager -> click;
SeedboxManager -> coverage;
SeedboxManager -> coveralls;
SeedboxManager -> futures;
SeedboxManager -> hacking;
SeedboxManager -> lockfile;
SeedboxManager -> "oslo.config";
SeedboxManager -> oslotest;
SeedboxManager -> passlib;
SeedboxManager -> pbr;
SeedboxManager -> six;
SeedboxManager -> sphinx;
SeedboxManager -> sqlalchemy;
SeedboxManager -> "sqlalchemy-migrate";
SeedboxManager -> stevedore;
SeedboxManager -> tox;
SeedboxManager -> twine;
seldon -> boto;
seldon -> flask;
seldon -> kazoo;
seldon -> "mysql-python";
seldon -> numpy;
seldon -> pandas;
seldon -> pylibmc;
seldon -> "scikit-learn";
seldon -> scipy;
"senlin-dashboard" -> babel;
"senlin-dashboard" -> coverage;
"senlin-dashboard" -> django;
"senlin-dashboard" -> "django-compressor";
"senlin-dashboard" -> "django-nose";
"senlin-dashboard" -> hacking;
"senlin-dashboard" -> iso8601;
"senlin-dashboard" -> mock;
"senlin-dashboard" -> mox;
"senlin-dashboard" -> mox3;
"senlin-dashboard" -> nose;
"senlin-dashboard" -> "nose-exclude";
"senlin-dashboard" -> nosexcover;
"senlin-dashboard" -> "openstack.nose-plugin";
"senlin-dashboard" -> oslosphinx;
"senlin-dashboard" -> pbr;
"senlin-dashboard" -> "python-senlinclient";
"senlin-dashboard" -> pyyaml;
"senlin-dashboard" -> selenium;
"senlin-dashboard" -> sphinx;
"senlin-dashboard" -> xvfbwrapper;
series -> "factory-boy";
series -> feedparser;
series -> flask;
series -> flexmock;
series -> httpretty;
series -> lxml;
series -> requests;
series -> sure;
seriesbutler -> beautifulsoup4;
seriesbutler -> bumpversion;
seriesbutler -> click;
seriesbutler -> configobj;
seriesbutler -> coverage;
seriesbutler -> distribute;
seriesbutler -> invoke;
seriesbutler -> jsonschema;
seriesbutler -> pytest;
seriesbutler -> "pytest-cov";
seriesbutler -> "pytest-mock";
seriesbutler -> "pytest-pep8";
seriesbutler -> requests;
seriesbutler -> responses;
seriesbutler -> vcrpy;
seriesbutler -> wheel;
seriesbutler -> "youtube-dl";
setuptools_shim -> coverage;
setuptools_shim -> fixtures;
setuptools_shim -> flake8;
setuptools_shim -> "python-subunit";
setuptools_shim -> sphinx;
setuptools_shim -> testrepository;
setuptools_shim -> testresources;
setuptools_shim -> testscenarios;
setuptools_shim -> testtools;
setuptools_shim -> virtualenv;
shaddock -> babel;
shaddock -> cliff;
shaddock -> coverage;
shaddock -> discover;
shaddock -> "docker-py";
shaddock -> future;
shaddock -> hacking;
shaddock -> "oslo.config";
shaddock -> oslosphinx;
shaddock -> oslotest;
shaddock -> pbr;
shaddock -> "python-subunit";
shaddock -> pyyaml;
shaddock -> sphinx;
shaddock -> testrepository;
shaddock -> testscenarios;
shaddock -> testtools;
shade -> coverage;
shade -> decorator;
shade -> discover;
shade -> "dogpile.cache";
shade -> fixtures;
shade -> hacking;
shade -> ipaddress;
shade -> jsonpatch;
shade -> keystoneauth1;
shade -> mock;
shade -> netifaces;
shade -> "os-client-config";
shade -> oslosphinx;
shade -> pbr;
shade -> "python-cinderclient";
shade -> "python-glanceclient";
shade -> "python-heatclient";
shade -> "python-ironicclient";
shade -> "python-keystoneclient";
shade -> "python-neutronclient";
shade -> "python-novaclient";
shade -> "python-subunit";
shade -> "python-swiftclient";
shade -> "python-troveclient";
shade -> reno;
shade -> six;
shade -> sphinx;
shade -> testrepository;
shade -> testscenarios;
shade -> testtools;
SharQServer -> flask;
SharQServer -> gevent;
SharQServer -> greenlet;
SharQServer -> gunicorn;
SharQServer -> itsdangerous;
SharQServer -> jinja2;
SharQServer -> markupsafe;
SharQServer -> ujson;
SharQServer -> werkzeug;
SharQServer -> wsgiref;
shiori -> celery;
shiori -> django;
shiori -> "django-jsonfield";
shiori -> djangorestframework;
shiori -> lxml;
shiori -> netaddr;
shiori -> pep8;
shiori -> pyquery;
shiori -> pytest;
shiori -> "python-openid";
shiori -> requests;
shiori -> shortuuid;
shiori -> south;
shiva -> bcrypt;
shiva -> docopt;
shiva -> flask;
shiva -> "flask-restful";
shiva -> "flask-sqlalchemy";
shiva -> lxml;
shiva -> mutagen;
shiva -> "python-dateutil";
shiva -> "python-slugify";
shiva -> requests;
sigal -> alabaster;
sigal -> blinker;
sigal -> boto;
sigal -> click;
sigal -> coverage;
sigal -> cssmin;
sigal -> jinja2;
sigal -> markdown;
sigal -> pillow;
sigal -> pytest;
sigal -> "pytest-cov";
sigal -> sphinx;
sigal -> twine;
signalbox -> babel;
signalbox -> "django-braces";
signalbox -> "django-extensions";
signalbox -> "django-jsonfield";
signalbox -> "django-localflavor";
signalbox -> "django-registration";
signalbox -> "django-reversion";
signalbox -> "django-sekizai";
signalbox -> "django-tastypie";
signalbox -> docutils;
signalbox -> envoy;
signalbox -> ipython;
signalbox -> markdown;
signalbox -> openpyxl;
signalbox -> pandas;
signalbox -> parsedatetime;
signalbox -> pillow;
signalbox -> pyparsing;
signalbox -> "python-dateutil";
signalbox -> "python-magic";
signalbox -> pyyaml;
signalbox -> shortuuid;
signalbox -> south;
signalbox -> twilio;
"silva.app.document" -> distribute;
"silva.app.document" -> "five.grok";
"silva.app.document" -> lxml;
"silva.app.document" -> "products.silva";
"silva.app.document" -> "silva.core.conf";
"silva.app.document" -> "silva.core.editor";
"silva.app.document" -> "silva.core.interfaces";
"silva.app.document" -> "silva.core.references";
"silva.app.document" -> "silva.core.services";
"silva.app.document" -> "silva.core.smi";
"silva.app.document" -> "silva.core.views";
"silva.app.document" -> "silva.translations";
"silva.app.document" -> "silva.ui";
"silva.app.document" -> "zeam.form.silva";
"silva.app.document" -> "zope.component";
"silva.app.document" -> "zope.interface";
"silva.app.document" -> "zope.publisher";
"silva.app.document" -> "zope.schema";
"silva.app.document" -> "zope.traversing";
"silva.app.forest" -> distribute;
"silva.app.forest" -> "five.grok";
"silva.app.forest" -> "infrae.wsgi";
"silva.app.forest" -> "silva.core.conf";
"silva.app.forest" -> "silva.core.interfaces";
"silva.app.forest" -> "silva.core.layout";
"silva.app.forest" -> "silva.core.services";
"silva.app.forest" -> "silva.core.views";
"silva.app.forest" -> "silva.translations";
"silva.app.forest" -> "zeam.form.silva";
"silva.app.forest" -> "zope.component";
"silva.app.forest" -> "zope.interface";
"silva.app.forest" -> "zope.publisher";
"silva.app.forest" -> "zope.schema";
"silva.app.news" -> distribute;
"silva.app.news" -> feedparser;
"silva.app.news" -> "five.grok";
"silva.app.news" -> "grokcore.chameleon";
"silva.app.news" -> icalendar;
"silva.app.news" -> "js.jquery";
"silva.app.news" -> "products.silva";
"silva.app.news" -> "python-dateutil";
"silva.app.news" -> "silva.app.document";
"silva.app.news" -> "silva.core.conf";
"silva.app.news" -> "silva.core.editor";
"silva.app.news" -> "silva.core.interfaces";
"silva.app.news" -> "silva.core.references";
"silva.app.news" -> "silva.core.services";
"silva.app.news" -> "silva.core.smi";
"silva.app.news" -> "silva.core.upgrade";
"silva.app.news" -> "silva.core.views";
"silva.app.news" -> "silva.fanstatic";
"silva.app.news" -> "silva.ui";
"silva.app.news" -> "zeam.form.base";
"silva.app.news" -> "zeam.form.silva";
"silva.app.news" -> "zeam.form.ztk";
"silva.app.news" -> "zeam.utils.batch";
"silva.app.news" -> "zope.cachedescriptors";
"silva.app.news" -> "zope.component";
"silva.app.news" -> "zope.i18nmessageid";
"silva.app.news" -> "zope.interface";
"silva.app.news" -> "zope.intid";
"silva.app.news" -> "zope.lifecycleevent";
"silva.app.news" -> "zope.publisher";
"silva.app.news" -> "zope.schema";
"silva.app.news" -> "zope.traversing";
"silva.app.page" -> distribute;
"silva.app.page" -> "five.grok";
"silva.app.page" -> "silva.core.conf";
"silva.app.page" -> "silva.core.contentlayout";
"silva.app.page" -> "silva.core.interfaces";
"silva.app.page" -> "silva.core.views";
"silva.app.page" -> "silva.translations";
"silva.app.page" -> "silva.ui";
"silva.app.page" -> "zeam.form.silva";
"silva.app.page" -> "zope.component";
"silva.app.page" -> "zope.event";
"silva.app.page" -> "zope.i18n";
"silva.app.page" -> "zope.interface";
"silva.app.page" -> "zope.lifecycleevent";
"silva.app.photogallery" -> distribute;
"silva.app.photogallery" -> "five.grok";
"silva.app.photogallery" -> "silva.core.conf";
"silva.app.photogallery" -> "silva.core.interfaces";
"silva.app.photogallery" -> "silva.core.layout";
"silva.app.photogallery" -> "silva.core.services";
"silva.app.photogallery" -> "silva.core.views";
"silva.app.photogallery" -> "silva.fanstatic";
"silva.app.photogallery" -> "zope.component";
"silva.app.photogallery" -> "zope.publisher";
"silva.app.redirectlink" -> distribute;
"silva.app.redirectlink" -> "five.grok";
"silva.app.redirectlink" -> "grokcore.chameleon";
"silva.app.redirectlink" -> "products.silva";
"silva.app.redirectlink" -> "silva.core.conf";
"silva.app.redirectlink" -> "silva.core.interfaces";
"silva.app.redirectlink" -> "silva.core.smi";
"silva.app.redirectlink" -> "silva.ui";
"silva.app.redirectlink" -> "zope.component";
"silva.app.redirectlink" -> "zope.container";
"silva.app.redirectlink" -> "zope.interface";
"silva.app.redirectlink" -> "zope.intid";
"silva.app.redirectlink" -> "zope.publisher";
"silva.app.redirectlink" -> "zope.traversing";
"silva.app.shorturl" -> distribute;
"silva.app.shorturl" -> "five.grok";
"silva.app.shorturl" -> "products.silva";
"silva.app.shorturl" -> "silva.app.forest";
"silva.app.shorturl" -> "silva.core.conf";
"silva.app.shorturl" -> "silva.core.interfaces";
"silva.app.shorturl" -> "silva.core.services";
"silva.app.shorturl" -> "silva.core.smi";
"silva.app.shorturl" -> "silva.core.views";
"silva.app.shorturl" -> "silva.fanstatic";
"silva.app.shorturl" -> "silva.translations";
"silva.app.shorturl" -> "silva.ui";
"silva.app.shorturl" -> "zope.component";
"silva.app.shorturl" -> "zope.interface";
"silva.app.shorturl" -> "zope.intid";
"silva.app.shorturl" -> "zope.publisher";
"silva.app.shorturl" -> "zope.schema";
"silva.app.subscriptions" -> distribute;
"silva.app.subscriptions" -> "five.grok";
"silva.app.subscriptions" -> "grokcore.chameleon";
"silva.app.subscriptions" -> "products.silva";
"silva.app.subscriptions" -> "silva.captcha";
"silva.app.subscriptions" -> "silva.core.conf";
"silva.app.subscriptions" -> "silva.core.interfaces";
"silva.app.subscriptions" -> "silva.core.layout";
"silva.app.subscriptions" -> "silva.core.references";
"silva.app.subscriptions" -> "silva.core.services";
"silva.app.subscriptions" -> "silva.core.smi";
"silva.app.subscriptions" -> "silva.core.upgrade";
"silva.app.subscriptions" -> "silva.core.views";
"silva.app.subscriptions" -> "silva.translations";
"silva.app.subscriptions" -> "silva.ui";
"silva.app.subscriptions" -> "zeam.form.silva";
"silva.app.subscriptions" -> "zope.annotation";
"silva.app.subscriptions" -> "zope.component";
"silva.app.subscriptions" -> "zope.interface";
"silva.app.subscriptions" -> "zope.lifecycleevent";
"silva.app.subscriptions" -> "zope.schema";
"silva.captcha" -> distribute;
"silva.captcha" -> "five.grok";
"silva.captcha" -> "silva.core.services";
"silva.captcha" -> "silva.translations";
"silva.captcha" -> "zeam.form.base";
"silva.captcha" -> "zeam.form.ztk";
"silva.captcha" -> "zope.component";
"silva.captcha" -> "zope.interface";
"silva.captcha" -> "zope.schema";
"silva.captcha" -> "zope.traversing";
"silva.core.cache" -> beaker;
"silva.core.cache" -> distribute;
"silva.core.cache" -> "five.grok";
"silva.core.cache" -> "python-memcached";
"silva.core.cache" -> "silva.core.views";
"silva.core.cache" -> "zope.component";
"silva.core.cache" -> "zope.datetime";
"silva.core.cache" -> "zope.interface";
"silva.core.cache" -> "zope.publisher";
"silva.core.conf" -> distribute;
"silva.core.conf" -> "five.grok";
"silva.core.conf" -> "grokcore.component";
"silva.core.conf" -> "grokcore.view";
"silva.core.conf" -> "grokcore.viewlet";
"silva.core.conf" -> martian;
"silva.core.conf" -> "silva.core.interfaces";
"silva.core.conf" -> "silva.core.services";
"silva.core.conf" -> "silva.translations";
"silva.core.conf" -> "zope.cachedescriptors";
"silva.core.conf" -> "zope.component";
"silva.core.conf" -> "zope.configuration";
"silva.core.conf" -> "zope.container";
"silva.core.conf" -> "zope.event";
"silva.core.conf" -> "zope.interface";
"silva.core.conf" -> "zope.lifecycleevent";
"silva.core.conf" -> "zope.location";
"silva.core.conf" -> "zope.publisher";
"silva.core.conf" -> "zope.schema";
"silva.core.contentlayout" -> distribute;
"silva.core.contentlayout" -> "five.grok";
"silva.core.contentlayout" -> "grokcore.chameleon";
"silva.core.contentlayout" -> "grokcore.component";
"silva.core.contentlayout" -> "grokcore.view";
"silva.core.contentlayout" -> "silva.core.conf";
"silva.core.contentlayout" -> "silva.core.editor";
"silva.core.contentlayout" -> "silva.core.interfaces";
"silva.core.contentlayout" -> "silva.core.references";
"silva.core.contentlayout" -> "silva.core.services";
"silva.core.contentlayout" -> "silva.core.views";
"silva.core.contentlayout" -> "silva.ui";
"silva.core.contentlayout" -> "zeam.form.silva";
"silva.core.contentlayout" -> "zope.annotation";
"silva.core.contentlayout" -> "zope.cachedescriptors";
"silva.core.contentlayout" -> "zope.component";
"silva.core.contentlayout" -> "zope.event";
"silva.core.contentlayout" -> "zope.i18n";
"silva.core.contentlayout" -> "zope.interface";
"silva.core.contentlayout" -> "zope.intid";
"silva.core.contentlayout" -> "zope.lifecycleevent";
"silva.core.contentlayout" -> "zope.publisher";
"silva.core.contentlayout" -> "zope.schema";
"silva.core.contentlayout" -> "zope.traversing";
"silva.core.editor" -> distribute;
"silva.core.editor" -> "five.grok";
"silva.core.editor" -> "infrae.rest";
"silva.core.editor" -> lxml;
"silva.core.editor" -> "silva.core.conf";
"silva.core.editor" -> "silva.core.interfaces";
"silva.core.editor" -> "silva.core.references";
"silva.core.editor" -> "silva.core.services";
"silva.core.editor" -> "silva.core.views";
"silva.core.editor" -> "silva.translations";
"silva.core.editor" -> "silva.ui";
"silva.core.editor" -> "zeam.form.silva";
"silva.core.editor" -> "zope.annotation";
"silva.core.editor" -> "zope.component";
"silva.core.editor" -> "zope.event";
"silva.core.editor" -> "zope.interface";
"silva.core.editor" -> "zope.lifecycleevent";
"silva.core.editor" -> "zope.schema";
"silva.core.editor" -> "zope.traversing";
"silva.core.interfaces" -> distribute;
"silva.core.interfaces" -> "grokcore.component";
"silva.core.interfaces" -> "silva.translations";
"silva.core.interfaces" -> "zope.annotation";
"silva.core.interfaces" -> "zope.component";
"silva.core.interfaces" -> "zope.container";
"silva.core.interfaces" -> "zope.deferredimport";
"silva.core.interfaces" -> "zope.interface";
"silva.core.interfaces" -> "zope.lifecycleevent";
"silva.core.interfaces" -> "zope.schema";
"silva.core.layout" -> distribute;
"silva.core.layout" -> "five.grok";
"silva.core.layout" -> "grokcore.layout";
"silva.core.layout" -> "grokcore.view";
"silva.core.layout" -> "grokcore.viewlet";
"silva.core.layout" -> "infrae.wsgi";
"silva.core.layout" -> "js.jquery";
"silva.core.layout" -> martian;
"silva.core.layout" -> "products.silva";
"silva.core.layout" -> "silva.core.conf";
"silva.core.layout" -> "silva.core.interfaces";
"silva.core.layout" -> "silva.core.services";
"silva.core.layout" -> "silva.core.views";
"silva.core.layout" -> "silva.fanstatic";
"silva.core.layout" -> "silva.translations";
"silva.core.layout" -> "zope.cachedescriptors";
"silva.core.layout" -> "zope.component";
"silva.core.layout" -> "zope.configuration";
"silva.core.layout" -> "zope.container";
"silva.core.layout" -> "zope.event";
"silva.core.layout" -> "zope.i18n";
"silva.core.layout" -> "zope.interface";
"silva.core.layout" -> "zope.intid";
"silva.core.layout" -> "zope.location";
"silva.core.layout" -> "zope.publisher";
"silva.core.layout" -> "zope.security";
"silva.core.layout" -> "zope.traversing";
"silva.core.references" -> distribute;
"silva.core.references" -> "dolmen.relations";
"silva.core.references" -> "five.grok";
"silva.core.references" -> "grokcore.chameleon";
"silva.core.references" -> "infrae.rest";
"silva.core.references" -> "megrok.pagetemplate";
"silva.core.references" -> "silva.core.conf";
"silva.core.references" -> "silva.core.interfaces";
"silva.core.references" -> "silva.core.services";
"silva.core.references" -> "silva.core.views";
"silva.core.references" -> "silva.fanstatic";
"silva.core.references" -> "silva.translations";
"silva.core.references" -> "silva.ui";
"silva.core.references" -> "zeam.form.base";
"silva.core.references" -> "zeam.form.silva";
"silva.core.references" -> "zeam.form.ztk";
"silva.core.references" -> "zope.cachedescriptors";
"silva.core.references" -> "zope.component";
"silva.core.references" -> "zope.event";
"silva.core.references" -> "zope.interface";
"silva.core.references" -> "zope.intid";
"silva.core.references" -> "zope.lifecycleevent";
"silva.core.references" -> "zope.publisher";
"silva.core.references" -> "zope.schema";
"silva.core.references" -> "zope.site";
"silva.core.references" -> "zope.traversing";
"silva.core.services" -> distribute;
"silva.core.services" -> "five.grok";
"silva.core.services" -> "silva.core.conf";
"silva.core.services" -> "silva.core.interfaces";
"silva.core.services" -> "zope.component";
"silva.core.services" -> "zope.interface";
"silva.core.services" -> "zope.intid";
"silva.core.services" -> "zope.schema";
"silva.core.smi" -> accesscontrol;
"silva.core.smi" -> distribute;
"silva.core.smi" -> "five.grok";
"silva.core.smi" -> "grokcore.chameleon";
"silva.core.smi" -> lxml;
"silva.core.smi" -> "silva.core.cache";
"silva.core.smi" -> "silva.core.conf";
"silva.core.smi" -> "silva.core.interfaces";
"silva.core.smi" -> "silva.core.layout";
"silva.core.smi" -> "silva.core.references";
"silva.core.smi" -> "silva.core.services";
"silva.core.smi" -> "silva.core.views";
"silva.core.smi" -> "silva.fanstatic";
"silva.core.smi" -> "silva.translations";
"silva.core.smi" -> "silva.ui";
"silva.core.smi" -> "zeam.form.silva";
"silva.core.smi" -> "zeam.form.ztk";
"silva.core.smi" -> "zope.cachedescriptors";
"silva.core.smi" -> "zope.component";
"silva.core.smi" -> "zope.interface";
"silva.core.smi" -> "zope.intid";
"silva.core.smi" -> "zope.publisher";
"silva.core.smi" -> "zope.schema";
"silva.core.smi" -> "zope.traversing";
"silva.core.upgrade" -> distribute;
"silva.core.upgrade" -> "five.grok";
"silva.core.upgrade" -> martian;
"silva.core.upgrade" -> "silva.core.interfaces";
"silva.core.upgrade" -> "silva.core.services";
"silva.core.upgrade" -> "silva.system.utils";
"silva.core.upgrade" -> "zope.annotation";
"silva.core.upgrade" -> "zope.component";
"silva.core.upgrade" -> "zope.interface";
"silva.core.views" -> "collective.monkeypatcher";
"silva.core.views" -> distribute;
"silva.core.views" -> "five.grok";
"silva.core.views" -> "grokcore.component";
"silva.core.views" -> "grokcore.layout";
"silva.core.views" -> "grokcore.view";
"silva.core.views" -> "grokcore.viewlet";
"silva.core.views" -> "infrae.wsgi";
"silva.core.views" -> "silva.core.conf";
"silva.core.views" -> "silva.core.interfaces";
"silva.core.views" -> "zope.cachedescriptors";
"silva.core.views" -> "zope.component";
"silva.core.views" -> "zope.container";
"silva.core.views" -> "zope.contentprovider";
"silva.core.views" -> "zope.deferredimport";
"silva.core.views" -> "zope.i18n";
"silva.core.views" -> "zope.interface";
"silva.core.views" -> "zope.publisher";
"silva.core.views" -> "zope.site";
"silva.core.views" -> "zope.traversing";
"silva.core.views" -> "zope.viewlet";
"silva.core.views" -> zope2;
"silva.demo.contentlayout" -> distribute;
"silva.demo.contentlayout" -> "five.grok";
"silva.demo.contentlayout" -> "silva.app.page";
"silva.demo.contentlayout" -> "silva.core.conf";
"silva.demo.contentlayout" -> "silva.core.contentlayout";
"silva.demo.contentlayout" -> "silva.core.interfaces";
"silva.demo.contentlayout" -> "silva.core.layout";
"silva.demo.contentlayout" -> "silva.fanstatic";
"silva.demo.contentlayout" -> "silva.translations";
"silva.demo.contentlayout" -> "zope.publisher";
"silva.demo.contentlayout" -> "zope.traversing";
"silva.export.html" -> distribute;
"silva.export.html" -> "five.grok";
"silva.export.html" -> "silva.core.interfaces";
"silva.export.html" -> "silva.core.layout";
"silva.export.html" -> "silva.core.references";
"silva.export.html" -> "silva.core.services";
"silva.export.html" -> "silva.core.views";
"silva.export.html" -> "silva.translations";
"silva.export.html" -> "zope.component";
"silva.export.html" -> "zope.interface";
"silva.export.html" -> "zope.publisher";
"silva.export.html" -> "zope.schema";
"silva.export.html" -> "zope.traversing";
"silva.fanstatic" -> fanstatic;
"silva.fanstatic" -> "five.grok";
"silva.fanstatic" -> martian;
"silva.fanstatic" -> "silva.core.conf";
"silva.fanstatic" -> "silva.core.views";
"silva.fanstatic" -> "zope.component";
"silva.fanstatic" -> "zope.interface";
"silva.fanstatic" -> "zope.publisher";
"silva.fanstatic" -> "zope.testing";
"silva.fanstatic" -> "zope.traversing";
"silva.pas.base" -> distribute;
"silva.pas.base" -> "five.grok";
"silva.pas.base" -> "grokcore.chameleon";
"silva.pas.base" -> "infrae.wsgi";
"silva.pas.base" -> "products.genericsetup";
"silva.pas.base" -> "products.pluggableauthservice";
"silva.pas.base" -> "products.silva";
"silva.pas.base" -> "silva.core.cache";
"silva.pas.base" -> "silva.core.conf";
"silva.pas.base" -> "silva.core.interfaces";
"silva.pas.base" -> "silva.core.layout";
"silva.pas.base" -> "silva.core.services";
"silva.pas.base" -> "silva.core.smi";
"silva.pas.base" -> "silva.core.views";
"silva.pas.base" -> "silva.translations";
"silva.pas.base" -> "silva.ui";
"silva.pas.base" -> "zeam.form.silva";
"silva.pas.base" -> "zope.cachedescriptors";
"silva.pas.base" -> "zope.component";
"silva.pas.base" -> "zope.datetime";
"silva.pas.base" -> "zope.interface";
"silva.pas.base" -> "zope.publisher";
"silva.pas.base" -> "zope.schema";
"silva.pas.openid" -> distribute;
"silva.pas.openid" -> "five.grok";
"silva.pas.openid" -> "python-openid";
"silva.pas.openid" -> "silva.captcha";
"silva.pas.openid" -> "silva.core.conf";
"silva.pas.openid" -> "silva.core.interfaces";
"silva.pas.openid" -> "silva.core.services";
"silva.pas.openid" -> "silva.core.views";
"silva.pas.openid" -> "silva.pas.base";
"silva.pas.openid" -> "zope.component";
"silva.pas.openid" -> "zope.interface";
"silva.pas.openid" -> "zope.publisher";
"silva.resourceinclude" -> chameleon;
"silva.resourceinclude" -> cssmin;
"silva.resourceinclude" -> distribute;
"silva.resourceinclude" -> "five.grok";
"silva.resourceinclude" -> martian;
"silva.resourceinclude" -> "silva.core.cache";
"silva.resourceinclude" -> "silva.core.conf";
"silva.resourceinclude" -> "silva.core.views";
"silva.resourceinclude" -> "zope.component";
"silva.resourceinclude" -> "zope.configuration";
"silva.resourceinclude" -> "zope.datetime";
"silva.resourceinclude" -> "zope.interface";
"silva.resourceinclude" -> "zope.processlifetime";
"silva.resourceinclude" -> "zope.publisher";
"silva.resourceinclude" -> "zope.schema";
"silva.resourceinclude" -> "zope.testing";
"silva.resourceinclude" -> "zope.traversing";
"silva.security.logging" -> distribute;
"silva.security.logging" -> "five.grok";
"silva.security.logging" -> "silva.core.conf";
"silva.security.logging" -> "silva.core.interfaces";
"silva.security.logging" -> "silva.core.services";
"silva.security.logging" -> "silva.core.views";
"silva.security.logging" -> "zeam.form.silva";
"silva.security.logging" -> "zope.component";
"silva.security.logging" -> "zope.container";
"silva.security.logging" -> "zope.interface";
"silva.security.logging" -> "zope.intid";
"silva.security.logging" -> "zope.lifecycleevent";
"silva.security.logging" -> "zope.schema";
"silva.security.overview" -> distribute;
"silva.security.overview" -> "five.grok";
"silva.security.overview" -> "silva.core.conf";
"silva.security.overview" -> "silva.core.interfaces";
"silva.security.overview" -> "silva.core.services";
"silva.security.overview" -> "silva.core.views";
"silva.security.overview" -> "silva.fanstatic";
"silva.security.overview" -> "zeam.form.silva";
"silva.security.overview" -> "zeam.utils.batch";
"silva.security.overview" -> "zope.cachedescriptors";
"silva.security.overview" -> "zope.catalog";
"silva.security.overview" -> "zope.component";
"silva.security.overview" -> "zope.container";
"silva.security.overview" -> "zope.interface";
"silva.security.overview" -> "zope.intid";
"silva.security.overview" -> "zope.lifecycleevent";
"silva.security.overview" -> "zope.schema";
"silva.system.utils" -> argparse;
"silva.system.utils" -> distribute;
"silva.system.utils" -> "infrae.wsgi";
"silva.system.utils" -> "products.silva";
"silva.system.utils" -> "silva.core.interfaces";
"silva.system.utils" -> "silva.core.services";
"silva.system.utils" -> "zope.component";
"silva.system.utils" -> "zope.location";
"silva.system.utils" -> "zope.publisher";
"silva.system.utils" -> "zope.security";
"silva.system.utils" -> "zope.site";
"silva.system.utils" -> zope2;
"silva.translations" -> "collective.monkeypatcher";
"silva.translations" -> distribute;
"silva.translations" -> "infrae.wsgi";
"silva.translations" -> "zope.i18n";
"silva.translations" -> "zope.i18nmessageid";
"silva.translations" -> "zope.publisher";
"silva.ui" -> distribute;
"silva.ui" -> fanstatic;
"silva.ui" -> "five.grok";
"silva.ui" -> "grokcore.chameleon";
"silva.ui" -> "grokcore.component";
"silva.ui" -> "grokcore.layout";
"silva.ui" -> "grokcore.view";
"silva.ui" -> "infrae.rest";
"silva.ui" -> "js.jquery";
"silva.ui" -> martian;
"silva.ui" -> "megrok.pagetemplate";
"silva.ui" -> "silva.core.cache";
"silva.ui" -> "silva.core.conf";
"silva.ui" -> "silva.core.interfaces";
"silva.ui" -> "silva.core.layout";
"silva.ui" -> "silva.core.services";
"silva.ui" -> "silva.core.views";
"silva.ui" -> "silva.fanstatic";
"silva.ui" -> "silva.translations";
"silva.ui" -> "zeam.utils.batch";
"silva.ui" -> "zope.cachedescriptors";
"silva.ui" -> "zope.component";
"silva.ui" -> "zope.i18n";
"silva.ui" -> "zope.interface";
"silva.ui" -> "zope.intid";
"silva.ui" -> "zope.lifecycleevent";
"silva.ui" -> "zope.pagetemplate";
"silva.ui" -> "zope.publisher";
"silva.ui" -> "zope.schema";
"silva.ui" -> "zope.traversing";
simiki -> coverage;
simiki -> docopt;
simiki -> fabric;
simiki -> jinja2;
simiki -> markdown;
simiki -> nose;
simiki -> ordereddict;
simiki -> pygments;
simiki -> pytz;
simiki -> pyyaml;
simiki -> tox;
simiki -> tzlocal;
simiki -> watchdog;
simoa -> doit;
simoa -> future;
simoa -> ggcq;
simoa -> hypothesis;
simoa -> ipdb;
simoa -> ipython;
simoa -> matplotlib;
simoa -> numexpr;
simoa -> numpy;
simoa -> pandas;
simoa -> psutil;
simoa -> pytest;
simoa -> "pytest-capturelog";
simoa -> "pytest-cov";
simoa -> "pytest-mock";
simoa -> "pytest-pep8";
simoa -> releases;
simoa -> scipy;
simoa -> sphinx;
simoa -> "sphinxcontrib-bibtex";
simplepath -> coverage;
simplepath -> flake8;
simplepath -> importanize;
simplepath -> mock;
simplepath -> nose;
simplepath -> rednose;
simplepath -> six;
simplepath -> sphinx;
simplepath -> "sphinx-rtd-theme";
simplepath -> tox;
simpy -> alabaster;
simpy -> babel;
simpy -> "cov-core";
simpy -> coverage;
simpy -> docutils;
simpy -> flake8;
simpy -> jinja2;
simpy -> markupsafe;
simpy -> mccabe;
simpy -> pep8;
simpy -> pkginfo;
simpy -> pluggy;
simpy -> py;
simpy -> pyflakes;
simpy -> pygments;
simpy -> pytest;
simpy -> "pytest-cov";
simpy -> pytz;
simpy -> requests;
simpy -> six;
simpy -> snowballstemmer;
simpy -> sphinx;
simpy -> "sphinx-rtd-theme";
simpy -> tox;
simpy -> twine;
simpy -> virtualenv;
simpy -> wheel;
sit_django_ecs -> argparse;
sit_django_ecs -> awscli;
sit_django_ecs -> blessings;
sit_django_ecs -> boto3;
sit_django_ecs -> botocore;
sit_django_ecs -> colorama;
sit_django_ecs -> docopt;
sit_django_ecs -> docutils;
sit_django_ecs -> ecdsa;
sit_django_ecs -> fabric;
sit_django_ecs -> futures;
sit_django_ecs -> jmespath;
sit_django_ecs -> paramiko;
sit_django_ecs -> pyasn1;
sit_django_ecs -> pycrypto;
sit_django_ecs -> "python-dateutil";
sit_django_ecs -> rsa;
sit_django_ecs -> six;
sit_django_ecs -> termcolor;
sit_django_ecs -> wsgiref;
SixIsles -> decorator;
SixIsles -> gnureadline;
SixIsles -> ipython;
SixIsles -> "path.py";
SixIsles -> pexpect;
SixIsles -> pymongo;
SixIsles -> simplegeneric;
SixIsles -> traitlets;
SixIsles -> wheel;
Sixpack -> decorator;
Sixpack -> flask;
Sixpack -> "flask-assets";
Sixpack -> "flask-debugtoolbar";
Sixpack -> hiredis;
Sixpack -> jsmin;
Sixpack -> markdown;
Sixpack -> mock;
Sixpack -> "python-coveralls";
Sixpack -> "python-dateutil";
Sixpack -> pyyaml;
Sixpack -> redis;
Sixpack -> werkzeug;
skll -> beautifulsoup4;
skll -> configparser;
skll -> joblib;
skll -> logutils;
skll -> mock;
skll -> numpy;
skll -> prettytable;
skll -> pyyaml;
skll -> "scikit-learn";
skll -> scipy;
skll -> six;
skoober -> cffi;
skoober -> cryptography;
skoober -> cssselect;
skoober -> enum34;
skoober -> ipaddress;
skoober -> lxml;
skoober -> pyasn1;
skoober -> pycparser;
skoober -> pyopenssl;
skoober -> scrapy;
skoober -> six;
skoober -> twisted;
skoober -> "zope.interface";
slacker -> requests;
smalisca -> cement;
smalisca -> flask;
smalisca -> "flask-sqlalchemy";
smalisca -> itsdangerous;
smalisca -> jinja2;
smalisca -> markupsafe;
smalisca -> prettytable;
smalisca -> "python-dateutil";
smalisca -> "python-mimeparse";
smalisca -> six;
smalisca -> smalisca;
smalisca -> sqlalchemy;
smalisca -> werkzeug;
smalisca -> wheel;
Smap -> configobj;
Smap -> lockfile;
Smap -> numpy;
Smap -> ordereddict;
Smap -> ply;
Smap -> psycopg2;
Smap -> "python-dateutil";
Smap -> scipy;
Smap -> simplejson;
Smap -> twisted;
SmartyBot -> alembic;
SmartyBot -> beautifulsoup;
SmartyBot -> beautifulsoup4;
SmartyBot -> boto;
SmartyBot -> configparser;
SmartyBot -> docutils;
SmartyBot -> html5lib;
SmartyBot -> httplib2;
SmartyBot -> httpretty;
SmartyBot -> isodate;
SmartyBot -> itsdangerous;
SmartyBot -> keyring;
SmartyBot -> lxml;
SmartyBot -> mechanize;
SmartyBot -> "mysql-python";
SmartyBot -> nltk;
SmartyBot -> nose;
SmartyBot -> numpy;
SmartyBot -> oauth;
SmartyBot -> oauth2;
SmartyBot -> oauthlib;
SmartyBot -> parsedatetime;
SmartyBot -> pil;
SmartyBot -> pillow;
SmartyBot -> pyasn1;
SmartyBot -> "pyasn1-modules";
SmartyBot -> pycrypto;
SmartyBot -> pycurl;
SmartyBot -> pyflakes;
SmartyBot -> pygeoip;
SmartyBot -> pygments;
SmartyBot -> pymongo;
SmartyBot -> pyopenssl;
SmartyBot -> pyparsing;
SmartyBot -> pyserial;
SmartyBot -> "python-dateutil";
SmartyBot -> "python-twitter";
SmartyBot -> pyzmq;
SmartyBot -> redis;
SmartyBot -> requests;
SmartyBot -> "requests-oauthlib";
SmartyBot -> simplejson;
SmartyBot -> six;
SmartyBot -> sleekxmpp;
SmartyBot -> sqlalchemy;
SmartyBot -> sure;
SmartyBot -> testtools;
SmartyBot -> twilio;
SmartyBot -> unittest2;
smiley -> beaker;
smiley -> cliff;
smiley -> coverage;
smiley -> discover;
smiley -> mock;
smiley -> pecan;
smiley -> pygments;
smiley -> "python-subunit";
smiley -> pyzmq;
smiley -> six;
smiley -> testrepository;
smiley -> testscenarios;
smiley -> testtools;
"socialschools-cms" -> boto;
"socialschools-cms" -> "dj-database-url";
"socialschools-cms" -> django;
"socialschools-cms" -> "django-classy-tags";
"socialschools-cms" -> "django-cms";
"socialschools-cms" -> "django-compressor";
"socialschools-cms" -> "django-extensions";
"socialschools-cms" -> "django-mptt";
"socialschools-cms" -> "django-reversion";
"socialschools-cms" -> "django-sekizai";
"socialschools-cms" -> "djangocms-text-ckeditor";
"socialschools-cms" -> "easy-thumbnails";
"socialschools-cms" -> ecdsa;
"socialschools-cms" -> fabric;
"socialschools-cms" -> gunicorn;
"socialschools-cms" -> html5lib;
"socialschools-cms" -> ipython;
"socialschools-cms" -> paramiko;
"socialschools-cms" -> pep8;
"socialschools-cms" -> pillow;
"socialschools-cms" -> psycopg2;
"socialschools-cms" -> pycrypto;
"socialschools-cms" -> pylint;
"socialschools-cms" -> pystache;
"socialschools-cms" -> pytz;
"socialschools-cms" -> requests;
"socialschools-cms" -> six;
"socialschools-cms" -> "sorl-thumbnail";
"socialschools-cms" -> south;
"socialschools-cms" -> waitress;
"socialschools-cms" -> wsgiref;
soco -> astroid;
soco -> coveralls;
soco -> flake8;
soco -> "logilab-common";
soco -> mock;
soco -> pylint;
soco -> pytest;
soco -> "pytest-cov";
soco -> requests;
soco -> sphinx;
soco -> "sphinxcontrib-napoleon";
soco -> wheel;
sofa -> passlib;
sofa -> pycrypto;
sofa -> pyramid;
sofa -> "python-slugify";
sofa -> pyyaml;
sofa -> requests;
sofa -> sqlalchemy;
sofa -> transaction;
sofa -> uritemplate;
solar -> ansible;
solar -> bunch;
solar -> celery;
solar -> click;
solar -> enum34;
solar -> fabric;
solar -> gevent;
solar -> hacking;
solar -> inflection;
solar -> jinja2;
solar -> jsonschema;
solar -> mock;
solar -> networkx;
solar -> "os-testr";
solar -> pbr;
solar -> peewee;
solar -> ply;
solar -> pydot;
solar -> pytest;
solar -> "pytest-cov";
solar -> "pytest-mock";
solar -> pyyaml;
solar -> requests;
solar -> six;
solar -> sqlalchemy;
solar -> stevedore;
solar -> tabulate;
solar -> tox;
solar -> wrapt;
solar_radiation_model -> coveralls;
solar_radiation_model -> flake8;
solar_radiation_model -> ipdb;
solar_radiation_model -> ipython;
solar_radiation_model -> isort;
solar_radiation_model -> linketurbidity;
solar_radiation_model -> netcdf;
solar_radiation_model -> noaadem;
solar_radiation_model -> numpy;
solar_radiation_model -> pep8;
solar_radiation_model -> pyflakes;
solar_radiation_model -> pytz;
solar_radiation_model -> "vim-debug";
sopel -> ipython;
sopel -> praw;
sopel -> pyenchant;
sopel -> pygeoip;
sopel -> pytest;
sopel -> pytz;
sopel -> requests;
sopel -> xmltodict;
"sorl-thumbnail" -> "-";
"sorl-thumbnail" -> redis;
"sorl-thumbnail" -> requirements;
Souma -> appdirs;
Souma -> blinker;
Souma -> chardet;
Souma -> flask;
Souma -> "flask-sqlalchemy";
Souma -> "flask-wtf";
Souma -> gevent;
Souma -> greenlet;
Souma -> humanize;
Souma -> iso8601;
Souma -> itsdangerous;
Souma -> jinja2;
Souma -> lxml;
Souma -> markupsafe;
Souma -> numpy;
Souma -> pyasn1;
Souma -> pycrypto;
Souma -> "python-dateutil";
Souma -> requests;
Souma -> "scikit-learn";
Souma -> scipy;
Souma -> six;
Souma -> sqlalchemy;
Souma -> werkzeug;
Souma -> wsgiref;
Souma -> wtforms;
soyprice -> beautifulsoup4;
soyprice -> coveralls;
soyprice -> flake8;
soyprice -> ipdb;
soyprice -> ipython;
soyprice -> isort;
soyprice -> matplotlib;
soyprice -> numpy;
soyprice -> pep8;
soyprice -> pillow;
soyprice -> pyflakes;
soyprice -> requests;
soyprice -> twython;
soyprice -> "vim-debug";
spex -> hypothesis;
spex -> ipython;
spex -> pex;
spex -> pytest;
spex -> "pytest-capturelog";
spex -> "pytest-mock";
spex -> "pytest-timeout";
spex -> "pytest-xdist";
spex -> requests;
spex -> tornado;
sphere_connector -> matplotlib;
sphere_connector -> mongoengine;
sphere_connector -> numpy;
sphere_connector -> pandas;
sphere_connector -> pymongo;
sphere_connector -> pymysql;
sphere_connector -> scipy;
sphere_connector -> simplejson;
sphere_connector -> sqlalchemy;
sphere_connector -> tqdm;
"sphinx-autobuild" -> argh;
"sphinx-autobuild" -> livereload;
"sphinx-autobuild" -> pathtools;
"sphinx-autobuild" -> pyyaml;
"sphinx-autobuild" -> tornado;
"sphinx-autobuild" -> watchdog;
"sphinx-bootstrap-theme" -> fabric;
"sphinx-bootstrap-theme" -> sphinx;
"sphinxcontrib-bibtex" -> six;
"sphinxcontrib-bibtex" -> sphinx;
"sphinxcontrib-httpdomain" -> six;
"sphinxcontrib-httpdomain" -> sphinx;
"sphinxcontrib-napoleon" -> coverage;
"sphinxcontrib-napoleon" -> docutils;
"sphinxcontrib-napoleon" -> flake8;
"sphinxcontrib-napoleon" -> mock;
"sphinxcontrib-napoleon" -> nose;
"sphinxcontrib-napoleon" -> six;
"sphinxcontrib-napoleon" -> sphinx;
"sphinxcontrib-pecanwsme" -> "sphinxcontrib-httpdomain";
"sphinxjp.themecore" -> distribute;
"sphinxjp.themecore" -> docutils;
"sphinxjp.themecore" -> sphinx;
splash -> ipython;
splash -> jsonschema;
splash -> nose;
splash -> pillow;
splash -> psutil;
splash -> pyopenssl;
splash -> pytest;
splash -> "pytest-cov";
splash -> requests;
splash -> twisted;
splash -> xvfbwrapper;
splinter -> selenium;
spreads -> colorama;
spreads -> coverage;
spreads -> coveralls;
spreads -> futures;
spreads -> mock;
spreads -> pytest;
spreads -> "pytest-cov";
spreads -> pyusb;
spreads -> pyyaml;
spreads -> stevedore;
"sprockets.clients.cassandra" -> blist;
"sprockets.clients.cassandra" -> "cassandra-driver";
"sprockets.clients.cassandra" -> coveralls;
"sprockets.clients.cassandra" -> flake8;
"sprockets.clients.cassandra" -> nose;
"sprockets.clients.cassandra" -> pylint;
"sprockets.clients.cassandra" -> pyyaml;
"sprockets.clients.cassandra" -> sphinx;
"sprockets.clients.cassandra" -> "sphinx-rtd-theme";
"sprockets.clients.cassandra" -> tornado;
"sprockets.clients.cassandra" -> tox;
"sqlalchemy-migrate" -> coverage;
"sqlalchemy-migrate" -> decorator;
"sqlalchemy-migrate" -> discover;
"sqlalchemy-migrate" -> feedparser;
"sqlalchemy-migrate" -> fixtures;
"sqlalchemy-migrate" -> flake8;
"sqlalchemy-migrate" -> hacking;
"sqlalchemy-migrate" -> mock;
"sqlalchemy-migrate" -> mox;
"sqlalchemy-migrate" -> "mysql-python";
"sqlalchemy-migrate" -> pbr;
"sqlalchemy-migrate" -> pep8;
"sqlalchemy-migrate" -> psycopg2;
"sqlalchemy-migrate" -> pyflakes;
"sqlalchemy-migrate" -> pylint;
"sqlalchemy-migrate" -> "python-subunit";
"sqlalchemy-migrate" -> pytz;
"sqlalchemy-migrate" -> six;
"sqlalchemy-migrate" -> sphinx;
"sqlalchemy-migrate" -> sqlalchemy;
"sqlalchemy-migrate" -> sqlparse;
"sqlalchemy-migrate" -> "tempest-lib";
"sqlalchemy-migrate" -> tempita;
"sqlalchemy-migrate" -> testrepository;
"sqlalchemy-migrate" -> testtools;
ssbench -> coverage;
ssbench -> cython;
ssbench -> flake8;
ssbench -> flexmock;
ssbench -> gevent;
ssbench -> mako;
ssbench -> mock;
ssbench -> "msgpack-python";
ssbench -> nose;
ssbench -> pyzmq;
sshpool -> coverage;
sshpool -> docutils;
sshpool -> flake8;
sshpool -> flask;
sshpool -> itsdangerous;
sshpool -> jinja2;
sshpool -> markupsafe;
sshpool -> mccabe;
sshpool -> mock;
sshpool -> nose;
sshpool -> paramiko;
sshpool -> pep257;
sshpool -> pep8;
sshpool -> py;
sshpool -> pycrypto;
sshpool -> pyflakes;
sshpool -> pygments;
sshpool -> requests;
sshpool -> sphinx;
sshpool -> tox;
sshpool -> virtualenv;
sshpool -> werkzeug;
sshpool -> wsgiref;
ssl_api -> cffi;
ssl_api -> cryptography;
ssl_api -> gunicorn;
ssl_api -> jinja2;
ssl_api -> m2crypto;
ssl_api -> markupsafe;
ssl_api -> pyasn1;
ssl_api -> "pyasn1-modules";
ssl_api -> pycparser;
ssl_api -> pyopenssl;
ssl_api -> six;
ssl_api -> "web.py";
ssl_api -> wsgiref;
stackalytics -> babel;
stackalytics -> coverage;
stackalytics -> discover;
stackalytics -> fixtures;
stackalytics -> flask;
stackalytics -> hacking;
stackalytics -> iso8601;
stackalytics -> jsonschema;
stackalytics -> mock;
stackalytics -> "oslo.config";
stackalytics -> "oslo.i18n";
stackalytics -> "oslo.log";
stackalytics -> "oslo.serialization";
stackalytics -> "oslo.utils";
stackalytics -> paramiko;
stackalytics -> pbr;
stackalytics -> psutil;
stackalytics -> pygithub;
stackalytics -> "python-memcached";
stackalytics -> "python-subunit";
stackalytics -> pyyaml;
stackalytics -> sh;
stackalytics -> six;
stackalytics -> sphinx;
stackalytics -> "sphinxcontrib-httpdomain";
stackalytics -> testrepository;
stackalytics -> testtools;
stackdistiller -> enum34;
stackdistiller -> hacking;
stackdistiller -> iso8601;
stackdistiller -> mock;
stackdistiller -> nose;
stackdistiller -> pyyaml;
stackdistiller -> six;
stackdistiller -> unittest2;
stalker_pyramid -> alembic;
stalker_pyramid -> jinja2;
stalker_pyramid -> pyramid;
stalker_pyramid -> "pyramid-debugtoolbar";
stalker_pyramid -> "pyramid-jinja2";
stalker_pyramid -> "pyramid-tm";
stalker_pyramid -> sphinx;
stalker_pyramid -> sqlalchemy;
stalker_pyramid -> transaction;
stalker_pyramid -> unittest2;
stalker_pyramid -> waitress;
stalker_pyramid -> "zope.sqlalchemy";
"StarCluster-openstack" -> boto;
"StarCluster-openstack" -> decorator;
"StarCluster-openstack" -> ipython;
"StarCluster-openstack" -> jinja2;
"StarCluster-openstack" -> nose;
"StarCluster-openstack" -> paramiko;
"StarCluster-openstack" -> pep8;
"StarCluster-openstack" -> pyasn1;
"StarCluster-openstack" -> pyflakes;
statico -> colorama;
statico -> feedparser;
statico -> "github3.py";
statico -> jinja2;
statico -> livereload;
statico -> markdown;
statico -> markupsafe;
statico -> oauthlib;
statico -> pathlib;
statico -> pygments;
statico -> pyinotify;
statico -> "python-slugify";
statico -> pytz;
statico -> pyyaml;
statico -> requests;
statico -> "requests-oauthlib";
stations -> beaker;
stations -> coveralls;
stations -> decorator;
stations -> django;
stations -> "django-model-utils";
stations -> "django-polymorphic";
stations -> "django-tastypie";
stations -> docutils;
stations -> flake8;
stations -> ipdb;
stations -> ipy;
stations -> ipython;
stations -> isort;
stations -> lxml;
stations -> netcdf;
stations -> numpy;
stations -> pep8;
stations -> pyflakes;
stations -> pyquery;
stations -> "python-dateutil";
stations -> pytz;
stations -> "vim-debug";
stations -> xlrd;
steel_pigs -> flask;
steel_pigs -> "flask-bootstrap";
steel_pigs -> "flask-wtf";
steel_pigs -> itsdangerous;
steel_pigs -> jinja2;
steel_pigs -> markupsafe;
steel_pigs -> nose;
steel_pigs -> sqlalchemy;
steel_pigs -> werkzeug;
steel_pigs -> wheel;
steve -> argparse;
steve -> beautifulsoup;
steve -> beautifulsoup4;
steve -> blessings;
steve -> cssselect;
steve -> feedparser;
steve -> html2text;
steve -> httplib2;
steve -> lxml;
steve -> nose;
steve -> pyquery;
steve -> requests;
steve -> sphinx;
steve -> wsgiref;
stevedore -> argparse;
stevedore -> coverage;
stevedore -> discover;
stevedore -> mock;
stevedore -> oslosphinx;
stevedore -> oslotest;
stevedore -> pbr;
stevedore -> pillow;
stevedore -> six;
stevedore -> sphinx;
stevedore -> testrepository;
stoq -> mako;
stoq -> pillow;
stoq -> psycopg2;
stoq -> "python-dateutil";
stoq -> raven;
stoq -> reportlab;
stoq -> storm;
stoq -> twisted;
stoq -> xlwt;
stoq -> "zope.interface";
stormtracks -> matplotlib;
stormtracks -> netcdf4;
stormtracks -> numexpr;
stormtracks -> numpy;
stormtracks -> pandas;
stormtracks -> pep8;
stormtracks -> requests;
stormtracks -> "scikit-learn";
stormtracks -> scipy;
stormtracks -> simplejson;
stormtracks -> tables;
strikepackage -> argparse;
strikepackage -> docopt;
strikepackage -> jinja2;
strikepackage -> markdown;
strikepackage -> markupsafe;
strikepackage -> progress;
strikepackage -> pyyaml;
strikepackage -> requests;
strikepackage -> schema;
strikepackage -> wsgiref;
structlog -> coverage;
structlog -> freezegun;
structlog -> pytest;
structlog -> simplejson;
structlog -> sphinx;
structlog -> "sphinx-rtd-theme";
structlog -> twisted;
"stups-sevenseconds" -> beautifulsoup4;
"stups-sevenseconds" -> boto3;
"stups-sevenseconds" -> botocore;
"stups-sevenseconds" -> clickclick;
"stups-sevenseconds" -> datetime;
"stups-sevenseconds" -> keyring;
"stups-sevenseconds" -> lxml;
"stups-sevenseconds" -> netaddr;
"stups-sevenseconds" -> "python-dateutil";
"stups-sevenseconds" -> pyyaml;
"stups-sevenseconds" -> requests;
"stups-zign" -> clickclick;
"stups-zign" -> keyring;
"stups-zign" -> pyyaml;
"stups-zign" -> requests;
subopen -> isstring;
subopen -> public;
subopen -> tolist;
subunit2sql -> alembic;
subunit2sql -> coverage;
subunit2sql -> discover;
subunit2sql -> fixtures;
subunit2sql -> hacking;
subunit2sql -> mock;
subunit2sql -> "os-testr";
subunit2sql -> "oslo.concurrency";
subunit2sql -> "oslo.config";
subunit2sql -> "oslo.db";
subunit2sql -> oslosphinx;
subunit2sql -> pbr;
subunit2sql -> psycopg2;
subunit2sql -> pymysql;
subunit2sql -> "python-dateutil";
subunit2sql -> "python-subunit";
subunit2sql -> reno;
subunit2sql -> six;
subunit2sql -> sphinx;
subunit2sql -> sqlalchemy;
subunit2sql -> stevedore;
subunit2sql -> testrepository;
subunit2sql -> testscenarios;
subunit2sql -> testtools;
"sudosh-replay" -> blinker;
"sudosh-replay" -> decorator;
"sudosh-replay" -> flask;
"sudosh-replay" -> "flask-login";
"sudosh-replay" -> "flask-sqlalchemy";
"sudosh-replay" -> "flask-wtf";
"sudosh-replay" -> itsdangerous;
"sudosh-replay" -> jinja2;
"sudosh-replay" -> markupsafe;
"sudosh-replay" -> pbr;
"sudosh-replay" -> pysqlite;
"sudosh-replay" -> "python-openid";
"sudosh-replay" -> six;
"sudosh-replay" -> sqlalchemy;
"sudosh-replay" -> "sqlalchemy-migrate";
"sudosh-replay" -> tempita;
"sudosh-replay" -> virtualenv;
"sudosh-replay" -> werkzeug;
"sudosh-replay" -> whoosh;
"sudosh-replay" -> wsgiref;
"sudosh-replay" -> wtforms;
"Superdesk-Core" -> arrow;
"Superdesk-Core" -> asyncio;
"Superdesk-Core" -> bcrypt;
"Superdesk-Core" -> beautifulsoup4;
"Superdesk-Core" -> blinker;
"Superdesk-Core" -> boto3;
"Superdesk-Core" -> celery;
"Superdesk-Core" -> feedparser;
"Superdesk-Core" -> flask;
"Superdesk-Core" -> "flask-mail";
"Superdesk-Core" -> "flask-script";
"Superdesk-Core" -> httmock;
"Superdesk-Core" -> pillow;
"Superdesk-Core" -> "python-magic";
"Superdesk-Core" -> pytz;
"Superdesk-Core" -> pyyaml;
"Superdesk-Core" -> raven;
"Superdesk-Core" -> requests;
"Superdesk-Core" -> statsd;
sure -> mock;
sure -> nose;
sure -> rednose;
sure -> six;
surveil -> "docker-compose";
surveil -> hacking;
surveil -> influxdb;
surveil -> keystonemiddleware;
surveil -> mongoengine;
surveil -> "oslo.config";
surveil -> "oslo.middleware";
surveil -> "oslo.policy";
surveil -> oslosphinx;
surveil -> pastedeploy;
surveil -> pecan;
surveil -> pymongo;
surveil -> "python-surveilclient";
surveil -> requests;
surveil -> "requests-mock";
surveil -> six;
surveil -> sphinx;
surveil -> "sphinx-rtd-theme";
surveil -> "sphinxcontrib-httpdomain";
surveil -> "sphinxcontrib-pecanwsme";
surveil -> testrepository;
surveil -> watchdog;
"swagger-aggregator" -> bumpversion;
"swagger-aggregator" -> coverage;
"swagger-aggregator" -> flake8;
"swagger-aggregator" -> flask;
"swagger-aggregator" -> mock;
"swagger-aggregator" -> pytest;
"swagger-aggregator" -> "pytest-mock";
"swagger-aggregator" -> pyyaml;
"swagger-aggregator" -> requests;
"swagger-aggregator" -> shortuuid;
"swagger-aggregator" -> simplejson;
"swagger-aggregator" -> sphinx;
"swagger-aggregator" -> "swagger-parser";
"swagger-aggregator" -> tox;
"swagger-aggregator" -> watchdog;
"swagger-aggregator" -> wheel;
"swagger-parser" -> bumpversion;
"swagger-parser" -> coverage;
"swagger-parser" -> flake8;
"swagger-parser" -> jinja2;
"swagger-parser" -> pytest;
"swagger-parser" -> pyyaml;
"swagger-parser" -> sphinx;
"swagger-parser" -> tox;
"swagger-parser" -> watchdog;
"swagger-parser" -> wheel;
"swagger-stub" -> bumpversion;
"swagger-stub" -> coverage;
"swagger-stub" -> flake8;
"swagger-stub" -> httpretty;
"swagger-stub" -> pytest;
"swagger-stub" -> pyyaml;
"swagger-stub" -> requests;
"swagger-stub" -> sphinx;
"swagger-stub" -> "swagger-parser";
"swagger-stub" -> tox;
"swagger-stub" -> watchdog;
"swagger-stub" -> wheel;
"swagger-tester" -> bumpversion;
"swagger-tester" -> coverage;
"swagger-tester" -> flake8;
"swagger-tester" -> pytest;
"swagger-tester" -> pyyaml;
"swagger-tester" -> requests;
"swagger-tester" -> sphinx;
"swagger-tester" -> "swagger-parser";
"swagger-tester" -> tox;
"swagger-tester" -> watchdog;
"swagger-tester" -> wheel;
synergy_scheduler -> amqp;
synergy_scheduler -> fabric;
synergy_scheduler -> jinja2;
synergy_scheduler -> mock;
synergy_scheduler -> psutil;
synergy_scheduler -> pylint;
synergy_scheduler -> pymongo;
synergy_scheduler -> setproctitle;
synergy_scheduler -> six;
synergy_scheduler -> werkzeug;
tables -> numexpr;
tables -> numpy;
tabutils -> beautifulsoup4;
tabutils -> chardet;
tabutils -> coverage;
tabutils -> distribute;
tabutils -> docutils;
tabutils -> flake8;
tabutils -> future;
tabutils -> mccabe;
tabutils -> nose;
tabutils -> numpy;
tabutils -> pandas;
tabutils -> pep8;
tabutils -> pkutils;
tabutils -> pyflakes;
tabutils -> pylint;
tabutils -> "python-dateutil";
tabutils -> "python-slugify";
tabutils -> pyyaml;
tabutils -> requests;
tabutils -> responses;
tabutils -> six;
tabutils -> tox;
tabutils -> twine;
tabutils -> virtualenv;
tabutils -> wheel;
tabutils -> wrapt;
tabutils -> xlrd;
tahoe -> alembic;
tahoe -> boto;
tahoe -> celery;
tahoe -> distribute;
tahoe -> flask;
tahoe -> "flask-sqlalchemy";
tahoe -> "flask-testing";
tahoe -> "py-bcrypt";
tahoe -> simplejson;
tahoe -> sphinx;
tahoe -> "sphinxcontrib-httpdomain";
tahoe -> sqlalchemy;
tahrir -> docutils;
tahrir -> "dogpile.cache";
tahrir -> pyramid;
tahrir -> "pyramid-tm";
tahrir -> "python-dateutil";
tahrir -> qrcode;
tahrir -> rdflib;
tahrir -> sqlalchemy;
tahrir -> transaction;
tahrir -> weberror;
tahrir -> webhelpers;
tahrir -> "zope.sqlalchemy";
Tailbone -> formencode;
Tailbone -> humanize;
Tailbone -> mako;
Tailbone -> pyramid;
Tailbone -> "pyramid-beaker";
Tailbone -> "pyramid-debugtoolbar";
Tailbone -> "pyramid-tm";
Tailbone -> transaction;
Tailbone -> waitress;
Tailbone -> webhelpers;
Tailbone -> "zope.sqlalchemy";
talons -> coverage;
talons -> discover;
talons -> falcon;
talons -> fixtures;
talons -> httplib2;
talons -> mock;
talons -> mox;
talons -> passlib;
talons -> pbr;
talons -> "python-subunit";
talons -> six;
talons -> testrepository;
talons -> testtools;
"tango-shared-core" -> bleach;
"tango-shared-core" -> django;
"tango-shared-core" -> "django-filter";
"tango-shared-core" -> docutils;
"tango-shared-core" -> "easy-thumbnails";
"tango-shared-core" -> markdown;
"tango-shared-core" -> pillow;
"tango-shared-core" -> six;
taskflow -> alembic;
taskflow -> automaton;
taskflow -> contextlib2;
taskflow -> debtcollector;
taskflow -> doc8;
taskflow -> eventlet;
taskflow -> futurist;
taskflow -> hacking;
taskflow -> jsonschema;
taskflow -> kazoo;
taskflow -> kombu;
taskflow -> mock;
taskflow -> networkx;
taskflow -> "oslo.serialization";
taskflow -> "oslo.utils";
taskflow -> oslosphinx;
taskflow -> oslotest;
taskflow -> pbr;
taskflow -> psycopg2;
taskflow -> pymysql;
taskflow -> redis;
taskflow -> retrying;
taskflow -> six;
taskflow -> sphinx;
taskflow -> sqlalchemy;
taskflow -> "sqlalchemy-utils";
taskflow -> stevedore;
taskflow -> testscenarios;
taskflow -> testtools;
taskw -> nose;
taskw -> "python-dateutil";
taskw -> pytz;
taskw -> six;
taskw -> tox;
"taskwarrior-timesheets" -> argparse;
"taskwarrior-timesheets" -> cement;
"taskwarrior-timesheets" -> gitdb;
"taskwarrior-timesheets" -> gitpython;
"taskwarrior-timesheets" -> iso8601;
"taskwarrior-timesheets" -> jira;
"taskwarrior-timesheets" -> oauthlib;
"taskwarrior-timesheets" -> prettytable;
"taskwarrior-timesheets" -> "python-dateutil";
"taskwarrior-timesheets" -> pytz;
"taskwarrior-timesheets" -> requests;
"taskwarrior-timesheets" -> "requests-oauthlib";
"taskwarrior-timesheets" -> six;
"taskwarrior-timesheets" -> taskw;
"taskwarrior-timesheets" -> wsgiref;
"taskwarrior-timesheets" -> xmltodict;
"td-client" -> coveralls;
"td-client" -> mock;
"td-client" -> "msgpack-python";
"td-client" -> pytest;
"td-client" -> "pytest-cov";
"td-client" -> "python-dateutil";
"td-client" -> tox;
"td-client" -> urllib3;
teamvault -> cryptography;
teamvault -> django;
teamvault -> djangorestframework;
teamvault -> gunicorn;
teamvault -> psycopg2;
teamvault -> pytz;
telnetlib3 -> asyncio;
telnetlib3 -> doc8;
telnetlib3 -> mock;
telnetlib3 -> pexpect;
telnetlib3 -> "pytest-capturelog";
telnetlib3 -> "pytest-cov";
telnetlib3 -> "pytest-xdist";
telnetlib3 -> "restructuredtext-lint";
telnetlib3 -> six;
telnetlib3 -> sphinx;
telnetlib3 -> "sphinx-rtd-theme";
"tempest-lib" -> "python-subunit";
"tempest-lib" -> testrepository;
"tempest-lib" -> testscenarios;
"tempest-lib" -> fixtures;
"tempest-lib" -> babel;
"tempest-lib" -> coverage;
"tempest-lib" -> ddt;
"tempest-lib" -> discover;
"tempest-lib" -> hacking;
"tempest-lib" -> httplib2;
"tempest-lib" -> iso8601;
"tempest-lib" -> jsonschema;
"tempest-lib" -> mock;
"tempest-lib" -> "os-testr";
"tempest-lib" -> "oslo.log";
"tempest-lib" -> oslosphinx;
"tempest-lib" -> oslotest;
"tempest-lib" -> paramiko;
"tempest-lib" -> pbr;
"tempest-lib" -> six;
"tempest-lib" -> sphinx;
"tempest-lib" -> testtools;
"tendril-framework" -> alembic;
"tendril-framework" -> argparse;
"tendril-framework" -> arrow;
"tendril-framework" -> beautifulsoup4;
"tendril-framework" -> colorama;
"tendril-framework" -> cssmin;
"tendril-framework" -> flask;
"tendril-framework" -> "flask-assets";
"tendril-framework" -> "flask-login";
"tendril-framework" -> "flask-migrate";
"tendril-framework" -> fs;
"tendril-framework" -> jinja2;
"tendril-framework" -> jsmin;
"tendril-framework" -> lxml;
"tendril-framework" -> matplotlib;
"tendril-framework" -> paramiko;
"tendril-framework" -> pillow;
"tendril-framework" -> progress;
"tendril-framework" -> psycopg2;
"tendril-framework" -> pypdf2;
"tendril-framework" -> qrcode;
"tendril-framework" -> scipy;
"tendril-framework" -> splinter;
"tendril-framework" -> "sqlalchemy-utils";
"tendril-framework" -> twine;
"tendril-framework" -> wheel;
"tendril-framework" -> wsgiref;
"test-helpers" -> coverage;
"test-helpers" -> coveralls;
"test-helpers" -> docutils;
"test-helpers" -> flake8;
"test-helpers" -> "logilab-common";
"test-helpers" -> mock;
"test-helpers" -> nose;
"test-helpers" -> psycopg2;
"test-helpers" -> pygments;
"test-helpers" -> pylint;
"test-helpers" -> pymongo;
"test-helpers" -> pyyaml;
"test-helpers" -> six;
"test-helpers" -> sphinx;
"test-helpers" -> "sphinx-rtd-theme";
"test-helpers" -> tornado;
"test-helpers" -> tox;
TestLiveServer -> argparse;
TestLiveServer -> chameleon;
TestLiveServer -> django;
TestLiveServer -> flask;
TestLiveServer -> fuzzywuzzy;
TestLiveServer -> itsdangerous;
TestLiveServer -> jinja2;
TestLiveServer -> mako;
TestLiveServer -> markupsafe;
TestLiveServer -> pastedeploy;
TestLiveServer -> py;
TestLiveServer -> pyramid;
TestLiveServer -> pytest;
TestLiveServer -> "repoze.lru";
TestLiveServer -> selenium;
TestLiveServer -> sure;
TestLiveServer -> translationstring;
TestLiveServer -> venusian;
TestLiveServer -> webob;
TestLiveServer -> werkzeug;
TestLiveServer -> wsgiref;
TestLiveServer -> "zope.deprecation";
TestLiveServer -> "zope.interface";
testscenarios -> pbr;
testscenarios -> testtools;
testtools -> fixtures;
testtools -> pbr;
testtools -> "python-mimeparse";
testtools -> testtools;
testtools -> twisted;
testtools -> unittest2;
"thumbor-web" -> alembic;
"thumbor-web" -> cssmin;
"thumbor-web" -> derpconf;
"thumbor-web" -> flask;
"thumbor-web" -> "flask-admin";
"thumbor-web" -> "flask-assets";
"thumbor-web" -> "flask-debugtoolbar";
"thumbor-web" -> "flask-login";
"thumbor-web" -> "flask-script";
"thumbor-web" -> "flask-sqlalchemy";
"thumbor-web" -> jsmin;
"thumbor-web" -> markdown;
"thumbor-web" -> "mysql-python";
"thumbor-web" -> ujson;
"thumbor-web" -> webassets;
"tiddlywebplugins.hoster" -> distribute;
"tiddlywebplugins.hoster" -> httpexceptor;
"tiddlywebplugins.hoster" -> tiddlyweb;
"tiddlywebplugins.hoster" -> "tiddlywebplugins.utils";
"tiddlywebplugins.hoster" -> tiddlywebwiki;
"tiddlywebplugins.tiddlyspace" -> distribute;
"tiddlywebplugins.tiddlyspace" -> httpexceptor;
"tiddlywebplugins.tiddlyspace" -> tiddlyweb;
"tiddlywebplugins.tiddlyspace" -> "tiddlywebplugins.utils";
"tiddlywebplugins.tiddlyspace" -> tiddlywebwiki;
"tiddlywebplugins.utils" -> tiddlyweb;
tiddlywebwiki -> tiddlyweb;
tiddlywebwiki -> "tiddlywebplugins.utils";
timid -> coverage;
timid -> jinja2;
timid -> jsonschema;
timid -> keyring;
timid -> mock;
timid -> nose;
timid -> pep8;
timid -> pyyaml;
timid -> six;
timid -> tox;
tipboard -> docopt;
tipboard -> mock;
tipboard -> pyyaml;
tipboard -> raven;
tipboard -> redis;
tipboard -> requests;
tipboard -> six;
tipboard -> sphinx;
tipboard -> "sphinxcontrib-httpdomain";
tipboard -> tornado;
tipfy -> blinker;
tipfy -> distribute;
tipfy -> werkzeug;
tm_navigator -> "cached-property";
tm_navigator -> cssmin;
tm_navigator -> flask;
tm_navigator -> "flask-assets";
tm_navigator -> "flask-debugtoolbar";
tm_navigator -> "flask-sqlalchemy";
tm_navigator -> inflection;
tm_navigator -> psycopg2;
tm_navigator -> sqlalchemy;
tm_navigator -> watchdog;
tm_navigator -> webassets;
tolist -> isstring;
tolist -> public;
tooz -> babel;
tooz -> coverage;
tooz -> doc8;
tooz -> eventlet;
tooz -> fixtures;
tooz -> flake8;
tooz -> futurist;
tooz -> hacking;
tooz -> iso8601;
tooz -> jsonschema;
tooz -> kazoo;
tooz -> mock;
tooz -> "msgpack-python";
tooz -> "oslo.serialization";
tooz -> "oslo.utils";
tooz -> oslosphinx;
tooz -> pbr;
tooz -> pep8;
tooz -> psycopg2;
tooz -> pyflakes;
tooz -> pymysql;
tooz -> "python-subunit";
tooz -> redis;
tooz -> retrying;
tooz -> six;
tooz -> sphinx;
tooz -> stevedore;
tooz -> testrepository;
tooz -> testscenarios;
tooz -> testtools;
torlite -> beautifulsoup4;
torlite -> docutils;
torlite -> html2text;
torlite -> jinja2;
torlite -> markdown2;
torlite -> peewee;
torlite -> pillow;
torlite -> tornado;
torlite -> whoosh;
torlite -> wtforms;
tornado -> twisted;
torus -> argparse;
torus -> gevent;
torus -> hiredis;
torus -> parsedatetime;
torus -> pymongo;
torus -> redis;
torus -> setproctitle;
torus -> sqlalchemy;
torus -> ujson;
torweb -> argparse;
torweb -> jinja2;
torweb -> markupsafe;
torweb -> "mysql-python";
torweb -> pyyaml;
torweb -> sqlalchemy;
torweb -> storm;
torweb -> tornado;
torweb -> werkzeug;
torweb -> wsgiref;
"torweb-for-3" -> argparse;
"torweb-for-3" -> jinja2;
"torweb-for-3" -> markupsafe;
"torweb-for-3" -> "mysql-python";
"torweb-for-3" -> pyyaml;
"torweb-for-3" -> sqlalchemy;
"torweb-for-3" -> storm;
"torweb-for-3" -> tornado;
"torweb-for-3" -> werkzeug;
"torweb-for-3" -> wsgiref;
"tosca-parser" -> "python-subunit";
"tosca-parser" -> testrepository;
"tosca-parser" -> testscenarios;
"tosca-parser" -> fixtures;
"tosca-parser" -> babel;
"tosca-parser" -> cliff;
"tosca-parser" -> coverage;
"tosca-parser" -> discover;
"tosca-parser" -> hacking;
"tosca-parser" -> oslosphinx;
"tosca-parser" -> oslotest;
"tosca-parser" -> pbr;
"tosca-parser" -> "python-dateutil";
"tosca-parser" -> pyyaml;
"tosca-parser" -> six;
"tosca-parser" -> sphinx;
"tosca-parser" -> testtools;
TransAT_API -> alabaster;
TransAT_API -> argcomplete;
TransAT_API -> argparse;
TransAT_API -> babel;
TransAT_API -> click;
TransAT_API -> colorama;
TransAT_API -> docutils;
TransAT_API -> ecdsa;
TransAT_API -> jinja2;
TransAT_API -> markupsafe;
TransAT_API -> matplotlib;
TransAT_API -> mock;
TransAT_API -> nose;
TransAT_API -> numpy;
TransAT_API -> paramiko;
TransAT_API -> progressbar;
TransAT_API -> pycrypto;
TransAT_API -> pygments;
TransAT_API -> pyparsing;
TransAT_API -> "python-dateutil";
TransAT_API -> pytz;
TransAT_API -> rednose;
TransAT_API -> requests;
TransAT_API -> shapely;
TransAT_API -> six;
TransAT_API -> snowballstemmer;
TransAT_API -> sphinx;
TransAT_API -> "sphinx-rtd-theme";
TransAT_API -> sympy;
TransAT_API -> wsgiref;
transifex -> django;
transifex -> "django-filter";
transifex -> "django-pagination";
transifex -> "django-tagging";
transifex -> markdown;
transifex -> pil;
transifex -> polib;
transifex -> pygments;
transifex -> "python-magic";
transifex -> redis;
transifex -> south;
"transmogrify.dexterity" -> "collective.transmogrifier";
"transmogrify.dexterity" -> distribute;
"transmogrify.dexterity" -> "plone.dexterity";
"transmogrify.dexterity" -> "plone.namedfile";
"transmogrify.dexterity" -> "plone.supermodel";
"transmogrify.dexterity" -> "plone.uuid";
"transmogrify.dexterity" -> "z3c.form";
trapperkeeper -> "backports.ssl-match-hostname";
trapperkeeper -> distribute;
trapperkeeper -> jinja2;
trapperkeeper -> markupsafe;
trapperkeeper -> "mysql-python";
trapperkeeper -> pyasn1;
trapperkeeper -> pycrypto;
trapperkeeper -> pysnmp;
trapperkeeper -> pytz;
trapperkeeper -> pyyaml;
trapperkeeper -> sqlalchemy;
trapperkeeper -> tornado;
trapperkeeper -> wsgiref;
trellostats -> argh;
trellostats -> click;
trellostats -> "cov-core";
trellostats -> coverage;
trellostats -> coveralls;
trellostats -> docopt;
trellostats -> docutils;
trellostats -> flask;
trellostats -> "flask-testing";
trellostats -> gevent;
trellostats -> greenlet;
trellostats -> grequests;
trellostats -> httpretty;
trellostats -> itsdangerous;
trellostats -> jinja2;
trellostats -> lxml;
trellostats -> markdown;
trellostats -> markupsafe;
trellostats -> mock;
trellostats -> numpy;
trellostats -> pathtools;
trellostats -> peewee;
trellostats -> py;
trellostats -> pygal;
trellostats -> pygments;
trellostats -> pytest;
trellostats -> "pytest-cov";
trellostats -> "python-dateutil";
trellostats -> pyyaml;
trellostats -> requests;
trellostats -> shortuuid;
trellostats -> six;
trellostats -> sphinx;
trellostats -> urllib3;
trellostats -> watchdog;
trellostats -> werkzeug;
trellostats -> wheel;
trellostats -> wsgiref;
treq -> mock;
treq -> pep8;
treq -> pyflakes;
treq -> sphinx;
tribool -> alabaster;
tribool -> babel;
tribool -> coverage;
tribool -> docutils;
tribool -> jinja2;
tribool -> markupsafe;
tribool -> nose;
tribool -> pluggy;
tribool -> py;
tribool -> pygments;
tribool -> pytz;
tribool -> six;
tribool -> snowballstemmer;
tribool -> sphinx;
tribool -> "sphinx-rtd-theme";
tribool -> tox;
tribool -> virtualenv;
tribool -> wsgiref;
trigrams -> coverage;
trigrams -> docutils;
trigrams -> jinja2;
trigrams -> markupsafe;
trigrams -> pep8;
trigrams -> py;
trigrams -> pygments;
trigrams -> sphinx;
trigrams -> tox;
trigrams -> virtualenv;
trigrams -> wsgiref;
"tripleo-common" -> babel;
"tripleo-common" -> coverage;
"tripleo-common" -> discover;
"tripleo-common" -> hacking;
"tripleo-common" -> oslosphinx;
"tripleo-common" -> oslotest;
"tripleo-common" -> pbr;
"tripleo-common" -> "python-heatclient";
"tripleo-common" -> "python-subunit";
"tripleo-common" -> sphinx;
"tripleo-common" -> testrepository;
"tripleo-common" -> testscenarios;
"tripleo-common" -> testtools;
"tri.query" -> beautifulsoup4;
"tri.query" -> coverage;
"tri.query" -> django;
"tri.query" -> pyparsing;
"tri.query" -> pytest;
"tri.query" -> "pytest-django";
"tri.query" -> tox;
trollduction -> netcdf4;
trollduction -> netifaces;
trollduction -> pyinotify;
trumpet -> docutils;
trumpet -> feedparser;
trumpet -> formencode;
trumpet -> mako;
trumpet -> pastescript;
trumpet -> psycopg2;
trumpet -> pyramid;
trumpet -> "pyramid-beaker";
trumpet -> "pyramid-debugtoolbar";
trumpet -> "pyramid-tm";
trumpet -> "python-dateutil";
trumpet -> sqlalchemy;
trumpet -> transaction;
trumpet -> wtforms;
trumpet -> "zope.sqlalchemy";
tugboat -> argparse;
tugboat -> coverage;
tugboat -> mock;
tugboat -> nose;
tugboat -> pbr;
tugboat -> pep8;
tugboat -> pygithub;
tugboat -> six;
tugboat -> sphinx;
tugboat -> tox;
turnip -> beautifulsoup4;
turnip -> cffi;
turnip -> contextlib2;
turnip -> fixtures;
turnip -> flake8;
turnip -> mccabe;
turnip -> paste;
turnip -> pastedeploy;
turnip -> pep8;
turnip -> pyasn1;
turnip -> pycparser;
turnip -> pycrypto;
turnip -> pyflakes;
turnip -> pygit2;
turnip -> pyramid;
turnip -> "python-mimeparse";
turnip -> "python-openid";
turnip -> pyyaml;
turnip -> "repoze.lru";
turnip -> simplejson;
turnip -> six;
turnip -> testtools;
turnip -> translationstring;
turnip -> twisted;
turnip -> unittest2;
turnip -> venusian;
turnip -> waitress;
turnip -> webob;
turnip -> webtest;
turnip -> "zope.component";
turnip -> "zope.deprecation";
turnip -> "zope.event";
turnip -> "zope.interface";
tuskar -> anyjson;
tuskar -> babel;
tuskar -> coverage;
tuskar -> discover;
tuskar -> eventlet;
tuskar -> fixtures;
tuskar -> greenlet;
tuskar -> hacking;
tuskar -> iso8601;
tuskar -> kombu;
tuskar -> lxml;
tuskar -> mock;
tuskar -> "mysql-python";
tuskar -> "oslo.config";
tuskar -> "oslo.db";
tuskar -> oslotest;
tuskar -> pbr;
tuskar -> pecan;
tuskar -> psycopg2;
tuskar -> "python-heatclient";
tuskar -> "python-keystoneclient";
tuskar -> pyyaml;
tuskar -> six;
tuskar -> sphinx;
tuskar -> "sphinxcontrib-pecanwsme";
tuskar -> sqlalchemy;
tuskar -> "sqlalchemy-migrate";
tuskar -> stevedore;
tuskar -> testrepository;
tuskar -> testtools;
tuskar -> unittest2;
tuskar -> webob;
"tuskar-ui" -> coverage;
"tuskar-ui" -> "django-nose";
"tuskar-ui" -> hacking;
"tuskar-ui" -> mock;
"tuskar-ui" -> mox;
"tuskar-ui" -> mox3;
"tuskar-ui" -> nose;
"tuskar-ui" -> "nose-exclude";
"tuskar-ui" -> nosexcover;
"tuskar-ui" -> "openstack.nose-plugin";
"tuskar-ui" -> "os-cloud-config";
"tuskar-ui" -> oslosphinx;
"tuskar-ui" -> "python-ironicclient";
"tuskar-ui" -> "python-tuskarclient";
"tuskar-ui" -> selenium;
"tuskar-ui" -> sphinx;
"tuskar-ui" -> xvfbwrapper;
tutum -> "backports.ssl-match-hostname";
tutum -> "docker-py";
tutum -> future;
tutum -> "python-dateutil";
tutum -> pyyaml;
tutum -> requests;
tutum -> six;
tutum -> tabulate;
tutum -> "websocket-client";
tvdbapi_client -> alabaster;
tvdbapi_client -> coverage;
tvdbapi_client -> coveralls;
tvdbapi_client -> hacking;
tvdbapi_client -> lockfile;
tvdbapi_client -> nose;
tvdbapi_client -> "oslo.config";
tvdbapi_client -> oslotest;
tvdbapi_client -> pbr;
tvdbapi_client -> requests;
tvdbapi_client -> "requests-mock";
tvdbapi_client -> six;
tvdbapi_client -> sphinx;
tvdbapi_client -> tox;
tvdbapi_client -> twine;
tvdbapi_client -> wheel;
tvdosage -> argparse;
tvdosage -> beautifulsoup4;
tvdosage -> dateutils;
tvdosage -> lxml;
tvdosage -> mccabe;
tvdosage -> peewee;
tvdosage -> "python-dateutil";
tvdosage -> pytz;
tvdosage -> six;
tvdosage -> wsgiref;
tvrenamer -> alabaster;
tvrenamer -> coverage;
tvrenamer -> coveralls;
tvrenamer -> hacking;
tvrenamer -> lockfile;
tvrenamer -> nose;
tvrenamer -> "oslo.config";
tvrenamer -> oslotest;
tvrenamer -> pbr;
tvrenamer -> prettytable;
tvrenamer -> six;
tvrenamer -> sphinx;
tvrenamer -> stevedore;
tvrenamer -> tox;
tvrenamer -> twine;
"tw2.jqplugins.ui" -> six;
"tw2.jqplugins.ui" -> "tw2.core";
"tw2.jqplugins.ui" -> "tw2.jquery";
tweeply -> click;
tweeply -> flask;
tweeply -> mock;
tweeply -> psycopg2;
tweeply -> pysqlite;
tweeply -> pytest;
tweeply -> pyzmq;
tweeply -> six;
tweeply -> sqlalchemy;
tweeply -> twitter;
tweepy -> requests;
tweepy -> "requests-oauthlib";
tweepy -> six;
twip -> cffi;
twip -> chardet;
twip -> cryptography;
twip -> decorator;
twip -> django;
twip -> "django-extensions";
twip -> enum34;
twip -> functools32;
twip -> fuzzywuzzy;
twip -> ipaddress;
twip -> ipython;
twip -> jinja2;
twip -> jsonpickle;
twip -> jsonschema;
twip -> markupsafe;
twip -> matplotlib;
twip -> mistune;
twip -> nltk;
twip -> numpy;
twip -> pandas;
twip -> "path.py";
twip -> pexpect;
twip -> pillow;
twip -> progressbar2;
twip -> "pug-nlp";
twip -> pyasn1;
twip -> pycparser;
twip -> pygments;
twip -> pyopenssl;
twip -> pyparsing;
twip -> "python-dateutil";
twip -> "python-levenshtein";
twip -> "python-slugify";
twip -> pytz;
twip -> pyzmq;
twip -> scipy;
twip -> simplegeneric;
twip -> six;
twip -> traitlets;
twip -> unidecode;
twip -> wheel;
twip -> xlrd;
twothirds -> matplotlib;
twothirds -> mock;
twothirds -> nose;
twothirds -> numpy;
twothirds -> pandas;
twothirds -> pyparsing;
twothirds -> "python-dateutil";
twothirds -> pytz;
twothirds -> scipy;
twothirds -> seaborn;
twothirds -> six;
twothirds -> wsgiref;
twothirds -> xlrd;
twython -> coverage;
twython -> "nose-cov";
twython -> "python-coveralls";
twython -> requests;
twython -> "requests-oauthlib";
twython -> responses;
txkazoo -> "check-manifest";
txkazoo -> coverage;
txkazoo -> funcsigs;
txkazoo -> kazoo;
txkazoo -> mock;
txkazoo -> pep257;
txkazoo -> pep8;
txkazoo -> pyflakes;
txkazoo -> pyroma;
txkazoo -> twisted;
txkazoo -> "zope.interface";
txt2contincd -> configobj;
txt2contincd -> coverage;
txt2contincd -> coveralls;
txt2contincd -> maidenhair;
txt2contincd -> mock;
txt2contincd -> natsort;
txt2contincd -> nose;
txt2contincd -> numpy;
txt2contincd -> ordereddict;
txt2contincd -> sphinx;
txt2contincd -> "sphinxcontrib-napoleon";
txt2contincd -> tox;
txt2contincd -> xlwt;
txt2xls -> configobj;
txt2xls -> coverage;
txt2xls -> coveralls;
txt2xls -> maidenhair;
txt2xls -> mock;
txt2xls -> natsort;
txt2xls -> nose;
txt2xls -> numpy;
txt2xls -> ordereddict;
txt2xls -> sphinx;
txt2xls -> "sphinxcontrib-napoleon";
txt2xls -> tox;
txt2xls -> xlwt;
txtorcon -> coverage;
txtorcon -> coveralls;
txtorcon -> distribute;
txtorcon -> ipaddr;
txtorcon -> mock;
txtorcon -> pep8;
txtorcon -> pyflakes;
txtorcon -> "repoze.sphinx.autointerface";
txtorcon -> sphinx;
txtorcon -> twine;
txtorcon -> twisted;
txtorcon -> wheel;
txtorcon -> "zope.interface";
"typepad-motion" -> django;
"typepad-motion" -> feedparser;
"typepad-motion" -> httplib2;
"typepad-motion" -> oauth;
"typepad-motion" -> simplejson;
"typepad-motion" -> "typepad-motion";
tzlocal -> pytz;
"unicore-cms" -> arrow;
"unicore-cms" -> babel;
"unicore-cms" -> deform;
"unicore-cms" -> "elastic-git";
"unicore-cms" -> markdown;
"unicore-cms" -> pycountry;
"unicore-cms" -> pyramid;
"unicore-cms" -> "pyramid-beaker";
"unicore-cms" -> "pyramid-chameleon";
"unicore-cms" -> "pyramid-debugtoolbar";
"unicore-cms" -> "pyramid-jinja2";
"unicore-cms" -> "python-dateutil";
"unicore-cms" -> "python-memcached";
"unicore-cms" -> "python-slugify";
"unicore-cms" -> raven;
"unicore-cms" -> six;
"unicore-cms" -> uwsgi;
"unicore-cms" -> waitress;
"unicore-cms" -> webtest;
"unicore-cms-django" -> django;
"unicore-cms-django" -> "django-celery";
"unicore-cms-django" -> "django-debug-toolbar";
"unicore-cms-django" -> "django-grappelli";
"unicore-cms-django" -> "django-haystack";
"unicore-cms-django" -> "django-nose";
"unicore-cms-django" -> "elastic-git";
"unicore-cms-django" -> fabric;
"unicore-cms-django" -> gunicorn;
"unicore-cms-django" -> html2text;
"unicore-cms-django" -> nose;
"unicore-cms-django" -> pep8;
"unicore-cms-django" -> psycopg2;
"unicore-cms-django" -> pyflakes;
"unicore-cms-django" -> pytest;
"unicore-cms-django" -> "pytest-cov";
"unicore-cms-django" -> "pytest-django";
"unicore-cms-django" -> "pytest-xdist";
"unicore-cms-django" -> "python-memcached";
"unicore-cms-django" -> "python-slugify";
"unicore-cms-django" -> raven;
"unicore-cms-django" -> redis;
"unicore-cms-django" -> south;
"unicore.webhooks" -> alembic;
"unicore.webhooks" -> colander;
"unicore.webhooks" -> cryptography;
"unicore.webhooks" -> pyramid;
"unicore.webhooks" -> "pyramid-tm";
"unicore.webhooks" -> requests;
"unicore.webhooks" -> sqlalchemy;
"unicore.webhooks" -> "sqlalchemy-utils";
"unicore.webhooks" -> waitress;
"unicore.webhooks" -> "zope.sqlalchemy";
"uos.cli" -> babel;
"uos.cli" -> cliff;
"uos.cli" -> coverage;
"uos.cli" -> discover;
"uos.cli" -> fixtures;
"uos.cli" -> hacking;
"uos.cli" -> mock;
"uos.cli" -> "os-client-config";
"uos.cli" -> "os-testr";
"uos.cli" -> "oslo.config";
"uos.cli" -> "oslo.i18n";
"uos.cli" -> "oslo.utils";
"uos.cli" -> oslosphinx;
"uos.cli" -> oslotest;
"uos.cli" -> pbr;
"uos.cli" -> "python-cinderclient";
"uos.cli" -> "python-glanceclient";
"uos.cli" -> "python-keystoneclient";
"uos.cli" -> "python-neutronclient";
"uos.cli" -> "python-novaclient";
"uos.cli" -> requests;
"uos.cli" -> "requests-mock";
"uos.cli" -> six;
"uos.cli" -> sphinx;
"uos.cli" -> stevedore;
"uos.cli" -> "tempest-lib";
"uos.cli" -> testrepository;
"uos.cli" -> testtools;
"uos.cli" -> webob;
"upaas-admin" -> blinker;
"upaas-admin" -> coverage;
"upaas-admin" -> django;
"upaas-admin" -> "django-crispy-forms";
"upaas-admin" -> "django-debug-toolbar";
"upaas-admin" -> "django-pipeline";
"upaas-admin" -> dnspython;
"upaas-admin" -> ipy;
"upaas-admin" -> mongoengine;
"upaas-admin" -> pytest;
"upaas-admin" -> "pytest-capturelog";
"upaas-admin" -> "pytest-pep8";
"upaas-admin" -> "python-coveralls";
"upaas-admin" -> tzlocal;
"upaas-admin" -> "upaas-common";
"upaas-common" -> coverage;
"upaas-common" -> netifaces;
"upaas-common" -> plumbum;
"upaas-common" -> pymongo;
"upaas-common" -> pytest;
"upaas-common" -> "pytest-capturelog";
"upaas-common" -> "pytest-pep8";
"upaas-common" -> "python-coveralls";
"upaas-common" -> pyyaml;
"upaas-common" -> requests;
urihandler -> coveralls;
urihandler -> pyramid;
urihandler -> "pyramid-debugtoolbar";
urihandler -> pytest;
urihandler -> "pytest-cov";
urihandler -> pyyaml;
urihandler -> sphinx;
urihandler -> "sphinxcontrib-httpdomain";
urihandler -> waitress;
urihandler -> webtest;
urihandler -> wheel;
uriregistry -> coveralls;
uriregistry -> httpretty;
uriregistry -> pyramid;
uriregistry -> "pyramid-debugtoolbar";
uriregistry -> pytest;
uriregistry -> "pytest-cov";
uriregistry -> pyyaml;
uriregistry -> requests;
uriregistry -> sphinx;
uriregistry -> "sphinxcontrib-httpdomain";
uriregistry -> waitress;
uriregistry -> webtest;
uriregistry -> wheel;
uritemplate -> simplejson;
urllib3 -> certifi;
urllib3 -> cffi;
urllib3 -> coverage;
urllib3 -> cryptography;
urllib3 -> docutils;
urllib3 -> jinja2;
urllib3 -> markupsafe;
urllib3 -> mock;
urllib3 -> "ndg-httpsclient";
urllib3 -> nose;
urllib3 -> "nose-exclude";
urllib3 -> pyasn1;
urllib3 -> pycparser;
urllib3 -> pygments;
urllib3 -> six;
urllib3 -> sphinx;
urllib3 -> tornado;
urllib3 -> tox;
urllib3 -> twine;
urllib3 -> wheel;
userbase -> argparse;
userbase -> markdown;
userbase -> paste;
userbase -> pymongo;
userbase -> pytest;
userbase -> pyyaml;
userbase -> wtforms;
"UW-RestClients" -> boto;
"UW-RestClients" -> django;
"UW-RestClients" -> djangorestframework;
"UW-RestClients" -> icalendar;
"UW-RestClients" -> jsonpickle;
"UW-RestClients" -> lxml;
"UW-RestClients" -> ordereddict;
"UW-RestClients" -> "python-dateutil";
"UW-RestClients" -> pytz;
"UW-RestClients" -> simplejson;
"UW-RestClients" -> twilio;
"UW-RestClients" -> unittest2;
"UW-RestClients" -> urllib3;
"valuehorizon-companies" -> coverage;
"valuehorizon-companies" -> django;
"valuehorizon-companies" -> "django-coverage";
"valuehorizon-companies" -> "django-nose";
"valuehorizon-companies" -> fabric;
"valuehorizon-companies" -> flake8;
"valuehorizon-companies" -> ipdb;
"valuehorizon-companies" -> lxml;
"valuehorizon-companies" -> mixer;
"valuehorizon-companies" -> mock;
"valuehorizon-companies" -> numpy;
"valuehorizon-companies" -> pandas;
"valuehorizon-companies" -> south;
"valuehorizon-companies" -> tox;
"valuehorizon-companies" -> "valuehorizon-countries";
"valuehorizon-companies" -> "valuehorizon-people";
"valuehorizon-countries" -> coverage;
"valuehorizon-countries" -> django;
"valuehorizon-countries" -> "django-coverage";
"valuehorizon-countries" -> "django-nose";
"valuehorizon-countries" -> fabric;
"valuehorizon-countries" -> flake8;
"valuehorizon-countries" -> ipdb;
"valuehorizon-countries" -> mixer;
"valuehorizon-countries" -> mock;
"valuehorizon-countries" -> numpy;
"valuehorizon-countries" -> pandas;
"valuehorizon-countries" -> south;
"valuehorizon-countries" -> tox;
"valuehorizon-forex" -> coverage;
"valuehorizon-forex" -> django;
"valuehorizon-forex" -> "django-coverage";
"valuehorizon-forex" -> "django-nose";
"valuehorizon-forex" -> fabric;
"valuehorizon-forex" -> flake8;
"valuehorizon-forex" -> ipdb;
"valuehorizon-forex" -> lxml;
"valuehorizon-forex" -> mixer;
"valuehorizon-forex" -> mock;
"valuehorizon-forex" -> numpy;
"valuehorizon-forex" -> pandas;
"valuehorizon-forex" -> south;
"valuehorizon-forex" -> tox;
"valuehorizon-people" -> coverage;
"valuehorizon-people" -> django;
"valuehorizon-people" -> "django-coverage";
"valuehorizon-people" -> "django-nose";
"valuehorizon-people" -> fabric;
"valuehorizon-people" -> flake8;
"valuehorizon-people" -> ipdb;
"valuehorizon-people" -> lxml;
"valuehorizon-people" -> mixer;
"valuehorizon-people" -> mock;
"valuehorizon-people" -> numpy;
"valuehorizon-people" -> pandas;
"valuehorizon-people" -> south;
"valuehorizon-people" -> tox;
varify -> coverage;
varify -> django;
varify -> "django-guardian";
varify -> "django-haystack";
varify -> "django-reversion";
varify -> "django-widget-tweaks";
varify -> markdown;
varify -> openpyxl;
varify -> psycopg2;
varify -> "python-memcached";
varify -> raven;
varify -> requests;
varify -> rq;
varify -> south;
varify -> uwsgi;
varify -> vdw;
varify -> whoosh;
"vca-cli" -> click;
"vca-cli" -> colorama;
"vca-cli" -> cryptography;
"vca-cli" -> "oslo.utils";
"vca-cli" -> prettytable;
"vca-cli" -> "python-dateutil";
"vca-cli" -> pyyaml;
"vca-cli" -> requests;
"vca-cli" -> six;
"vca-cli" -> tabulate;
"vca-cli" -> xmltodict;
vdw -> coverage;
vdw -> django;
vdw -> "django-guardian";
vdw -> "django-reversion";
vdw -> psycopg2;
vdw -> "python-memcached";
vdw -> rq;
vdw -> south;
VideoAnalysis -> h5py;
VideoAnalysis -> ipython;
VideoAnalysis -> matplotlib;
VideoAnalysis -> numpy;
VideoAnalysis -> pil;
VideoAnalysis -> pillow;
VideoAnalysis -> "scikit-image";
VideoAnalysis -> scipy;
viralata -> arrow;
viralata -> bleach;
viralata -> flask;
viralata -> "flask-cors";
viralata -> "flask-mail";
viralata -> "flask-script";
viralata -> "flask-sqlalchemy";
viralata -> passlib;
viralata -> "python-social-auth";
viralata -> "sqlalchemy-utils";
virtualenvwrapper -> stevedore;
virtualenvwrapper -> virtualenv;
"virtualenvwrapper.django_template" -> django;
"virtualenvwrapper.django_template" -> "django-compressor";
"virtualenvwrapper.django_template" -> "django-debug-toolbar";
"virtualenvwrapper.django_template" -> "django-extensions";
"virtualenvwrapper.django_template" -> "django-grappelli";
"virtualenvwrapper.django_template" -> pyscss;
"virtualenvwrapper.django_template" -> south;
"virtualenvwrapper.django_template" -> werkzeug;
vmtp -> attrdict;
vmtp -> babel;
vmtp -> coverage;
vmtp -> discover;
vmtp -> flake8;
vmtp -> functools32;
vmtp -> "git-review";
vmtp -> hacking;
vmtp -> lxml;
vmtp -> oslosphinx;
vmtp -> oslotest;
vmtp -> paramiko;
vmtp -> pbr;
vmtp -> pep8;
vmtp -> prettytable;
vmtp -> pylint;
vmtp -> pymongo;
vmtp -> "python-glanceclient";
vmtp -> "python-keystoneclient";
vmtp -> "python-neutronclient";
vmtp -> "python-novaclient";
vmtp -> "python-openstackclient";
vmtp -> "python-subunit";
vmtp -> sphinx;
vmtp -> tabulate;
vmtp -> testrepository;
vmtp -> testscenarios;
vmtp -> testtools;
vmtp -> tox;
"vmware-nsx" -> coverage;
"vmware-nsx" -> discover;
"vmware-nsx" -> eventlet;
"vmware-nsx" -> fixtures;
"vmware-nsx" -> hacking;
"vmware-nsx" -> httplib2;
"vmware-nsx" -> mock;
"vmware-nsx" -> netaddr;
"vmware-nsx" -> "oslo.concurrency";
"vmware-nsx" -> "oslo.config";
"vmware-nsx" -> "oslo.db";
"vmware-nsx" -> "oslo.i18n";
"vmware-nsx" -> "oslo.log";
"vmware-nsx" -> "oslo.serialization";
"vmware-nsx" -> "oslo.service";
"vmware-nsx" -> "oslo.utils";
"vmware-nsx" -> "oslo.vmware";
"vmware-nsx" -> oslosphinx;
"vmware-nsx" -> pbr;
"vmware-nsx" -> "python-subunit";
"vmware-nsx" -> retrying;
"vmware-nsx" -> six;
"vmware-nsx" -> sphinx;
"vmware-nsx" -> sqlalchemy;
"vmware-nsx" -> stevedore;
"vmware-nsx" -> "tempest-lib";
"vmware-nsx" -> testrepository;
"vmware-nsx" -> testscenarios;
"vmware-nsx" -> testtools;
"vmware-nsx" -> tooz;
"vmware-nsx" -> webtest;
"vnccollab.portal" -> distribute;
"vnccollab.portal" -> pillow;
"vnccollab.portal" -> plone;
"vnccollab.portal" -> "plone.api";
"vnccollab.portal" -> "plone.app.iterate";
"vnccollab.portal" -> "plone.app.workflow";
"vnccollab.portal" -> "vnccollab.theme";
"vnccollab.portal" -> "vnccollab.zimbra";
"vnccollab.theme" -> beautifulsoup;
"vnccollab.theme" -> "collective.js.jqueryui";
"vnccollab.theme" -> "collective.plonetruegallery";
"vnccollab.theme" -> distribute;
"vnccollab.theme" -> "plone.api";
"vnccollab.theme" -> "plone.app.jquery";
"vnccollab.theme" -> "plone.app.jquerytools";
"vnccollab.theme" -> "plone.app.z3cform";
"vnccollab.theme" -> pytz;
"vnccollab.theme" -> "sc.social.bookmarks";
"vnccollab.theme" -> simplejson;
"vnccollab.theme" -> tldextract;
"vnccollab.theme" -> "z3c.jbot";
"vnccollab.zimbra" -> beautifulsoup;
"vnccollab.zimbra" -> distribute;
"vnccollab.zimbra" -> "five.grok";
"vnccollab.zimbra" -> "plone.api";
"vnccollab.zimbra" -> "plone.app.jquery";
"vnccollab.zimbra" -> "plone.app.jquerytools";
"vnccollab.zimbra" -> requests;
"vnccollab.zimbra" -> simplejson;
vr -> django;
vr -> "django-celery";
vr -> "django-extensions";
vr -> "django-picklefield";
vr -> "django-reversion";
vr -> "django-tastypie";
vr -> gevent;
vr -> gunicorn;
vr -> psycopg2;
vr -> pymongo;
vr -> redis;
vr -> requests;
vr -> south;
"vr.server" -> django;
"vr.server" -> "django-celery";
"vr.server" -> "django-extensions";
"vr.server" -> "django-picklefield";
"vr.server" -> "django-reversion";
"vr.server" -> "django-tastypie";
"vr.server" -> gevent;
"vr.server" -> gunicorn;
"vr.server" -> psycopg2;
"vr.server" -> pymongo;
"vr.server" -> redis;
"vr.server" -> requests;
"vr.server" -> setproctitle;
"vr.server" -> six;
vumi -> coverage;
vumi -> pep8;
vumi -> pyflakes;
vumi -> "python-subunit";
vumi -> supervisor;
"vumi-go" -> celery;
"vumi-go" -> django;
"vumi-go" -> "django-celery";
"vumi-go" -> "django-crispy-forms";
"vumi-go" -> "django-debug-toolbar";
"vumi-go" -> "django-pipeline";
"vumi-go" -> "django-registration";
"vumi-go" -> gunicorn;
"vumi-go" -> hiredis;
"vumi-go" -> kombu;
"vumi-go" -> markdown;
"vumi-go" -> mock;
"vumi-go" -> psycopg2;
"vumi-go" -> raven;
"vumi-go" -> requests;
"vumi-go" -> south;
"vumi-go" -> vumi;
"vumi-go" -> xlrd;
"w20e.pycms" -> cssmin;
"w20e.pycms" -> pastescript;
"w20e.pycms" -> pyramid;
"w20e.pycms" -> "pyramid-debugtoolbar";
"w20e.pycms" -> "pyramid-tm";
"w20e.pycms" -> zodb3;
"wafflehaus.iweb" -> coverage;
"wafflehaus.iweb" -> discover;
"wafflehaus.iweb" -> distribute;
"wafflehaus.iweb" -> hacking;
"wafflehaus.iweb" -> mock;
"wafflehaus.iweb" -> nose;
"wafflehaus.iweb" -> pep8;
"wafflehaus.iweb" -> routes;
"wafflehaus.iweb" -> unittest2;
"wafflehaus.iweb" -> webob;
wagtail -> coverage;
wagtail -> django;
wagtail -> elasticsearch;
wagtail -> flake8;
wagtail -> mock;
wagtail -> pillow;
wagtail -> pyenchant;
wagtail -> "python-dateutil";
wagtail -> pytz;
wagtail -> sphinx;
wagtail -> "sphinx-autobuild";
wagtail -> "sphinx-rtd-theme";
wagtail -> wagtail;
wally -> decorator;
wally -> futures;
wally -> netaddr;
wally -> paramiko;
wally -> prettytable;
wally -> pyyaml;
wally -> requests;
wally -> simplejson;
wally -> texttable;
warthog -> click;
warthog -> coverage;
warthog -> fabric;
warthog -> mock;
warthog -> pylint;
warthog -> pytest;
warthog -> requests;
warthog -> sphinx;
warthog -> "sphinx-rtd-theme";
warthog -> tox;
warthog -> twine;
warthog -> wheel;
"watson-common" -> coverage;
"watson-common" -> coveralls;
"watson-common" -> pytest;
"watson-common" -> "pytest-cov";
"watson-framework" -> coverage;
"watson-framework" -> coveralls;
"watson-framework" -> jinja2;
"watson-framework" -> pygments;
"watson-framework" -> pytest;
"watson-framework" -> "pytest-cov";
"watson-framework" -> "watson-common";
"wc.cookiecredentials" -> distribute;
"wc.cookiecredentials" -> zodb3;
"wc.cookiecredentials" -> "zope.annotation";
"wc.cookiecredentials" -> "zope.app.component";
"wc.cookiecredentials" -> "zope.app.publisher";
"wc.cookiecredentials" -> "zope.app.testing";
"wc.cookiecredentials" -> "zope.component";
"wc.cookiecredentials" -> "zope.formlib";
"wc.cookiecredentials" -> "zope.i18nmessageid";
"wc.cookiecredentials" -> "zope.interface";
"wc.cookiecredentials" -> "zope.publisher";
webalerts -> astroid;
webalerts -> cssselect;
webalerts -> docutils;
webalerts -> jinja2;
webalerts -> "logilab-common";
webalerts -> lxml;
webalerts -> markupsafe;
webalerts -> mock;
webalerts -> py;
webalerts -> pygments;
webalerts -> pylint;
webalerts -> pytest;
webalerts -> pytz;
webalerts -> pyyaml;
webalerts -> requests;
webalerts -> sphinx;
webalerts -> wsgiref;
Weblate -> babel;
Weblate -> django;
Weblate -> "django-compressor";
Weblate -> "django-crispy-forms";
Weblate -> lxml;
Weblate -> mercurial;
Weblate -> oauthlib;
Weblate -> pillow;
Weblate -> "python-dateutil";
Weblate -> "python-memcached";
Weblate -> "python-social-auth";
Weblate -> whoosh;
webmux -> cffi;
webmux -> cryptography;
webmux -> futures;
webmux -> jinja2;
webmux -> pyasn1;
webmux -> pycparser;
webmux -> pycrypto;
webmux -> pyopenssl;
webmux -> six;
webmux -> twisted;
webmux -> wsgiref;
webmux -> "zope.interface";
webreview -> coverage;
webreview -> "google-api-python-client";
webreview -> httplib2;
webreview -> keyring;
webreview -> nose;
webreview -> oauth2client;
webreview -> progressbar2;
webreview -> rednose;
webreview -> requests;
weihnachtsgurke -> click;
weihnachtsgurke -> colorama;
weihnachtsgurke -> docutils;
weihnachtsgurke -> flake8;
weihnachtsgurke -> jinja2;
weihnachtsgurke -> markupsafe;
weihnachtsgurke -> mccabe;
weihnachtsgurke -> mock;
weihnachtsgurke -> paver;
weihnachtsgurke -> pep8;
weihnachtsgurke -> py;
weihnachtsgurke -> pyflakes;
weihnachtsgurke -> pygments;
weihnachtsgurke -> pytest;
weihnachtsgurke -> sphinx;
wger -> bleach;
wger -> django;
wger -> "django-compressor";
wger -> "django-filter";
wger -> "django-tastypie";
wger -> djangorestframework;
wger -> "easy-thumbnails";
wger -> icalendar;
wger -> pillow;
wger -> "python-mimeparse";
wger -> reportlab;
wger -> six;
wger -> sphinx;
wheelcms_project -> distribute;
wheelcms_project -> "dj-database-url";
wheelcms_project -> "django-guardian";
wheelcms_project -> "django-haystack";
wheelcms_project -> "django-taggit";
wheelcms_project -> "django-tinymce";
wheelcms_project -> pillow;
wheelcms_project -> pytest;
wheelcms_project -> south;
wight -> argparse;
wight -> cement;
wight -> colorama;
wight -> derpconf;
wight -> mongoengine;
wight -> paramiko;
wight -> prettytable;
wight -> "python-dateutil";
wight -> pyyaml;
wight -> redis;
wight -> requests;
wight -> sh;
wight -> tornado;
wight -> virtualenv;
wikilabels -> beaker;
wikilabels -> docopt;
wikilabels -> flask;
wikilabels -> psycopg2;
wikilabels -> pyexecjs;
wikilabels -> pylibmc;
wikilabels -> pyopenssl;
Wikked -> colorama;
Wikked -> flask;
Wikked -> "flask-login";
Wikked -> itsdangerous;
Wikked -> jinja2;
Wikked -> markdown;
Wikked -> markupsafe;
Wikked -> py;
Wikked -> pygments;
Wikked -> pytest;
Wikked -> "repoze.lru";
Wikked -> sqlalchemy;
Wikked -> werkzeug;
Wikked -> whoosh;
will -> apscheduler;
will -> bottle;
will -> cherrypy;
will -> clint;
will -> coverage;
will -> dill;
will -> dnspython;
will -> fabric;
will -> flake8;
will -> hiredis;
will -> jinja2;
will -> markdown;
will -> markupsafe;
will -> mock;
will -> nose;
will -> parsedatetime;
will -> pyandoc;
will -> pyasn1;
will -> "pyasn1-modules";
will -> pyyaml;
will -> redis;
will -> requests;
will -> sleekxmpp;
winchester -> alembic;
winchester -> enum34;
winchester -> hacking;
winchester -> mock;
winchester -> "mysql-python";
winchester -> nose;
winchester -> "python-daemon";
winchester -> "python-dateutil";
winchester -> requests;
winchester -> sqlalchemy;
winchester -> stackdistiller;
winchester -> unittest2;
Wooey -> boto;
Wooey -> django;
Wooey -> "django-celery";
Wooey -> psycopg2;
Wooey -> waitress;
worldengine -> argparse;
worldengine -> h5py;
worldengine -> nose;
worldengine -> numpy;
worldengine -> protobuf;
worldengine -> pytest;
worldengine -> six;
worldengine -> sphinx;
worldengine -> "sphinx-autobuild";
wpull -> chardet;
wpull -> html5lib;
wpull -> lxml;
wpull -> psutil;
wpull -> "sphinx-argparse";
wpull -> "sphinxcontrib-napoleon";
wpull -> sqlalchemy;
wpull -> tornado;
xadrpy -> argparse;
xadrpy -> django;
xadrpy -> "django-ckeditor";
xadrpy -> "django-grappelli";
xadrpy -> "django-haystack";
xadrpy -> "django-mptt";
xadrpy -> pil;
xadrpy -> psycopg2;
xadrpy -> simplejson;
xadrpy -> south;
xadrpy -> whoosh;
"xbus.monitor" -> chameleon;
"xbus.monitor" -> hiredis;
"xbus.monitor" -> lxml;
"xbus.monitor" -> mako;
"xbus.monitor" -> markupsafe;
"xbus.monitor" -> "msgpack-python";
"xbus.monitor" -> pastedeploy;
"xbus.monitor" -> psycopg2;
"xbus.monitor" -> pyramid;
"xbus.monitor" -> "pyramid-chameleon";
"xbus.monitor" -> "pyramid-debugtoolbar";
"xbus.monitor" -> "pyramid-tm";
"xbus.monitor" -> pyzmq;
"xbus.monitor" -> redis;
"xbus.monitor" -> "repoze.lru";
"xbus.monitor" -> six;
"xbus.monitor" -> sqlalchemy;
"xbus.monitor" -> transaction;
"xbus.monitor" -> translationstring;
"xbus.monitor" -> venusian;
"xbus.monitor" -> waitress;
"xbus.monitor" -> webob;
"xbus.monitor" -> "zope.deprecation";
"xbus.monitor" -> "zope.interface";
"xbus.monitor" -> "zope.sqlalchemy";
xelpaste -> "check-manifest";
xelpaste -> coverage;
xelpaste -> django;
xelpaste -> "django-appconf";
xelpaste -> "django-mptt";
xelpaste -> pygments;
xelpaste -> sphinx;
xelpaste -> "sphinx-rtd-theme";
xelpaste -> wheel;
xlseries -> arrow;
xlseries -> coverage;
xlseries -> mock;
xlseries -> nose;
xlseries -> numpy;
xlseries -> openpyxl;
xlseries -> pandas;
xlseries -> unidecode;
xlseries -> wheel;
xlseries -> xlrd;
xlwt -> coveralls;
xlwt -> nose;
xlwt -> "nose-cov";
xlwt -> pkginfo;
xlwt -> "setuptools-git";
xlwt -> sphinx;
xlwt -> twine;
xlwt -> wheel;
xtas -> anyjson;
xtas -> celery;
xtas -> chardet;
xtas -> cython;
xtas -> distribute;
xtas -> docopt;
xtas -> elasticsearch;
xtas -> flask;
xtas -> markupsafe;
xtas -> nltk;
xtas -> "scikit-learn";
xtas -> six;
xtas -> tornado;
xtas -> unidecode;
xtas -> urllib3;
yabgp -> coverage;
yabgp -> coveralls;
yabgp -> flake8;
yabgp -> flask;
yabgp -> netaddr;
yabgp -> nose;
yabgp -> "oslo.config";
yabgp -> pbr;
yabgp -> pika;
yabgp -> pymongo;
yabgp -> testrepository;
yabgp -> testtools;
yabgp -> twisted;
yafowil -> distribute;
yafowil -> node;
"yafowil.documentation" -> distribute;
"yafowil.documentation" -> pillow;
"yafowil.documentation" -> sphinx;
"yafowil.documentation" -> "sphinx-bootstrap-theme";
"yafowil.documentation" -> yafowil;
yaml2ical -> argparse;
yaml2ical -> coverage;
yaml2ical -> discover;
yaml2ical -> fixtures;
yaml2ical -> hacking;
yaml2ical -> icalendar;
yaml2ical -> jinja2;
yaml2ical -> pbr;
yaml2ical -> "python-subunit";
yaml2ical -> pyyaml;
yaml2ical -> testrepository;
yaml2ical -> testscenarios;
yaml2ical -> testtools;
yaql -> babel;
yaql -> coverage;
yaql -> discover;
yaql -> fixtures;
yaql -> hacking;
yaql -> oslosphinx;
yaql -> pbr;
yaql -> ply;
yaql -> "python-subunit";
yaql -> six;
yaql -> sphinx;
yaql -> testrepository;
yaql -> testscenarios;
yaql -> testtools;
"yith-library-server" -> babel;
"yith-library-server" -> beaker;
"yith-library-server" -> beautifulsoup4;
"yith-library-server" -> chameleon;
"yith-library-server" -> colander;
"yith-library-server" -> coverage;
"yith-library-server" -> deform;
"yith-library-server" -> docutils;
"yith-library-server" -> freezegun;
"yith-library-server" -> jinja2;
"yith-library-server" -> markupsafe;
"yith-library-server" -> mock;
"yith-library-server" -> nose;
"yith-library-server" -> oauthlib;
"yith-library-server" -> pastedeploy;
"yith-library-server" -> polib;
"yith-library-server" -> psycopg2;
"yith-library-server" -> pyramid;
"yith-library-server" -> "pyramid-beaker";
"yith-library-server" -> "pyramid-chameleon";
"yith-library-server" -> "pyramid-tm";
"yith-library-server" -> "python-dateutil";
"yith-library-server" -> pytz;
"yith-library-server" -> raven;
"yith-library-server" -> "repoze.lru";
"yith-library-server" -> requests;
"yith-library-server" -> six;
"yith-library-server" -> sphinx;
"yith-library-server" -> sqlalchemy;
"yith-library-server" -> transaction;
"yith-library-server" -> translationstring;
"yith-library-server" -> venusian;
"yith-library-server" -> waitress;
"yith-library-server" -> webassets;
"yith-library-server" -> webob;
"yith-library-server" -> webtest;
"yith-library-server" -> wsgiref;
"yith-library-server" -> "zope.deprecation";
"yith-library-server" -> "zope.interface";
"yith-library-server" -> "zope.sqlalchemy";
"z3c.boston" -> distribute;
"z3c.boston" -> "z3c.form";
"z3c.boston" -> "z3c.template";
"z3c.caching" -> distribute;
"z3c.caching" -> "zope.browser";
"z3c.caching" -> "zope.component";
"z3c.caching" -> "zope.event";
"z3c.caching" -> "zope.interface";
"z3c.caching" -> "zope.lifecycleevent";
"z3c.extfile" -> distribute;
"z3c.extfile" -> "z3c.filetype";
"z3c.extfile" -> "zope.app.component";
"z3c.extfile" -> "zope.app.file";
"z3c.extfile" -> "zope.cachedescriptors";
"z3c.extfile" -> "zope.datetime";
"z3c.extfile" -> "zope.formlib";
"z3c.extfile" -> "zope.i18nmessageid";
"z3c.extfile" -> "zope.publisher";
"z3c.extfile" -> "zope.schema";
"z3c.extfile" -> "zope.security";
"z3c.extfile" -> "zope.traversing";
"z3c.filetype" -> distribute;
"z3c.filetype" -> "zope.cachedescriptors";
"z3c.filetype" -> "zope.component";
"z3c.filetype" -> "zope.event";
"z3c.filetype" -> "zope.i18nmessageid";
"z3c.filetype" -> "zope.interface";
"z3c.filetype" -> "zope.lifecycleevent";
"z3c.filetype" -> "zope.proxy";
"z3c.filetype" -> "zope.schema";
"z3c.formwidget.query" -> distribute;
"z3c.formwidget.query" -> "z3c.form";
"z3c.formwidget.query" -> "zope.component";
"z3c.formwidget.query" -> "zope.i18nmessageid";
"z3c.formwidget.query" -> "zope.interface";
"z3c.formwidget.query" -> "zope.schema";
"z3c.jbot" -> distribute;
"z3c.jbot" -> "zope.component";
"z3c.jbot" -> "zope.configuration";
"z3c.jbot" -> "zope.pagetemplate";
"z3c.jbot" -> "zope.publisher";
"z3c.jbot" -> "zope.security";
"z3c.resourcecollector" -> distribute;
"z3c.resourcecollector" -> "zope.app.component";
"z3c.resourcecollector" -> "zope.cachedescriptors";
"z3c.resourcecollector" -> "zope.component";
"z3c.resourcecollector" -> "zope.configuration";
"z3c.resourcecollector" -> "zope.interface";
"z3c.resourcecollector" -> "zope.publisher";
"z3c.resourcecollector" -> "zope.schema";
"z3c.resourcecollector" -> "zope.security";
"z3c.resourcecollector" -> "zope.viewlet";
"z3c.rotterdam" -> distribute;
"z3c.rotterdam" -> "z3c.form";
"z3c.rotterdam" -> "z3c.template";
"z3c.rotterdam" -> "zope.viewlet";
"z3c.zalchemy" -> distribute;
"z3c.zalchemy" -> sqlalchemy;
"z3c.zalchemy" -> zodb3;
"z3c.zalchemy" -> "zope.app.component";
"z3c.zalchemy" -> "zope.app.container";
"z3c.zalchemy" -> "zope.app.testing";
"z3c.zalchemy" -> "zope.component";
"z3c.zalchemy" -> "zope.interface";
"z3c.zalchemy" -> "zope.schema";
zappa -> boto;
zappa -> boto3;
zappa -> botocore;
zappa -> docutils;
zappa -> futures;
zappa -> jmespath;
zappa -> nose;
zappa -> "python-dateutil";
zappa -> requests;
zappa -> six;
zappa -> tqdm;
zappa -> wheel;
"zato-apitest" -> argparse;
"zato-apitest" -> arrow;
"zato-apitest" -> behave;
"zato-apitest" -> blist;
"zato-apitest" -> bunch;
"zato-apitest" -> "cassandra-driver";
"zato-apitest" -> click;
"zato-apitest" -> configobj;
"zato-apitest" -> coverage;
"zato-apitest" -> distribute;
"zato-apitest" -> enum34;
"zato-apitest" -> flake8;
"zato-apitest" -> jsonpointer;
"zato-apitest" -> lxml;
"zato-apitest" -> mccabe;
"zato-apitest" -> mock;
"zato-apitest" -> nose;
"zato-apitest" -> pep8;
"zato-apitest" -> psycopg2;
"zato-apitest" -> pyflakes;
"zato-apitest" -> "python-dateutil";
"zato-apitest" -> requests;
"zato-apitest" -> six;
"zato-apitest" -> sqlalchemy;
"zato-apitest" -> wsgiref;
"zato-common" -> alembic;
"zato-common" -> anyjson;
"zato-common" -> arrow;
"zato-common" -> boto;
"zato-common" -> bunch;
"zato-common" -> bzr;
"zato-common" -> configobj;
"zato-common" -> gevent;
"zato-common" -> lxml;
"zato-common" -> mock;
"zato-common" -> nose;
"zato-common" -> paste;
"zato-common" -> pip;
"zato-common" -> psutil;
"zato-common" -> pycrypto;
"zato-common" -> pyopenssl;
"zato-common" -> pyparsing;
"zato-common" -> "python-dateutil";
"zato-common" -> pytz;
"zato-common" -> pyzmq;
"zato-common" -> redis;
"zato-common" -> requests;
"zato-common" -> rsa;
"zato-common" -> sqlalchemy;
"zato-common" -> texttable;
"zc.displayname" -> distribute;
"zc.displayname" -> "zope.app.container";
"zc.displayname" -> "zope.component";
"zc.displayname" -> "zope.dublincore";
"zc.displayname" -> "zope.i18n";
"zc.displayname" -> "zope.i18nmessageid";
"zc.displayname" -> "zope.interface";
"zc.displayname" -> "zope.location";
"zc.displayname" -> "zope.proxy";
"zc.displayname" -> "zope.publisher";
"zc.displayname" -> "zope.security";
"zc.displayname" -> "zope.testing";
"zc.displayname" -> "zope.traversing";
"zc.relationship" -> distribute;
"zc.relationship" -> zodb3;
"zc.relationship" -> "zope.app.component";
"zc.relationship" -> "zope.app.container";
"zc.relationship" -> "zope.app.testing";
"zc.relationship" -> "zope.component";
"zc.relationship" -> "zope.interface";
"zc.relationship" -> "zope.location";
"zc.relationship" -> "zope.testing";
"zds-member" -> coverage;
"zds-member" -> "django-crispy-forms";
"zds-member" -> "django-filter";
"zds-member" -> djangorestframework;
"zds-member" -> "factory-boy";
"zds-member" -> "fake-factory";
"zds-member" -> flake8;
"zds-member" -> pyyaml;
"zds-member" -> sphinx;
"zds-member" -> "sphinx-rtd-theme";
"zds-member" -> "sphinxcontrib-httpdomain";
"zeam.form.base" -> distribute;
"zeam.form.base" -> "grokcore.chameleon";
"zeam.form.base" -> "grokcore.component";
"zeam.form.base" -> "grokcore.security";
"zeam.form.base" -> "grokcore.view";
"zeam.form.base" -> martian;
"zeam.form.base" -> "megrok.pagetemplate";
"zeam.form.base" -> "zope.cachedescriptors";
"zeam.form.base" -> "zope.component";
"zeam.form.base" -> "zope.i18n";
"zeam.form.base" -> "zope.i18nmessageid";
"zeam.form.base" -> "zope.interface";
"zeam.form.base" -> "zope.pagetemplate";
"zeam.form.base" -> "zope.publisher";
"zeam.form.base" -> "zope.testing";
"zeam.form.composed" -> distribute;
"zeam.form.composed" -> "grokcore.chameleon";
"zeam.form.composed" -> "grokcore.component";
"zeam.form.composed" -> "grokcore.view";
"zeam.form.composed" -> martian;
"zeam.form.composed" -> "megrok.pagetemplate";
"zeam.form.composed" -> "zeam.form.base";
"zeam.form.composed" -> "zope.component";
"zeam.form.composed" -> "zope.interface";
"zeam.form.composed" -> "zope.publisher";
"zeam.form.layout" -> distribute;
"zeam.form.layout" -> "grokcore.chameleon";
"zeam.form.layout" -> "grokcore.component";
"zeam.form.layout" -> "grokcore.layout";
"zeam.form.layout" -> "megrok.pagetemplate";
"zeam.form.layout" -> "zeam.form.base";
"zeam.form.layout" -> "zeam.form.composed";
"zeam.form.layout" -> "zope.component";
"zeam.form.layout" -> "zope.publisher";
"zeam.form.silva" -> distribute;
"zeam.form.silva" -> "five.grok";
"zeam.form.silva" -> "grokcore.chameleon";
"zeam.form.silva" -> "grokcore.layout";
"zeam.form.silva" -> "grokcore.security";
"zeam.form.silva" -> "infrae.rest";
"zeam.form.silva" -> "js.jquery";
"zeam.form.silva" -> martian;
"zeam.form.silva" -> "megrok.pagetemplate";
"zeam.form.silva" -> "silva.core.conf";
"zeam.form.silva" -> "silva.core.interfaces";
"zeam.form.silva" -> "silva.core.layout";
"zeam.form.silva" -> "silva.core.views";
"zeam.form.silva" -> "silva.fanstatic";
"zeam.form.silva" -> "silva.translations";
"zeam.form.silva" -> "silva.ui";
"zeam.form.silva" -> "zeam.form.base";
"zeam.form.silva" -> "zeam.form.composed";
"zeam.form.silva" -> "zeam.form.table";
"zeam.form.silva" -> "zeam.form.ztk";
"zeam.form.silva" -> "zope.component";
"zeam.form.silva" -> "zope.configuration";
"zeam.form.silva" -> "zope.interface";
"zeam.form.silva" -> "zope.publisher";
"zeam.form.silva" -> "zope.security";
"zeam.form.silva" -> "zope.traversing";
"zeam.form.table" -> distribute;
"zeam.form.table" -> "grokcore.chameleon";
"zeam.form.table" -> "grokcore.component";
"zeam.form.table" -> "megrok.pagetemplate";
"zeam.form.table" -> "zeam.form.base";
"zeam.form.table" -> "zeam.form.composed";
"zeam.form.table" -> "zeam.utils.batch";
"zeam.form.table" -> "zope.component";
"zeam.form.table" -> "zope.i18nmessageid";
"zeam.form.table" -> "zope.interface";
"zeam.form.ztk" -> distribute;
"zeam.form.ztk" -> "grokcore.chameleon";
"zeam.form.ztk" -> "grokcore.component";
"zeam.form.ztk" -> "grokcore.security";
"zeam.form.ztk" -> "grokcore.view";
"zeam.form.ztk" -> "zeam.form.base";
"zeam.form.ztk" -> "zope.component";
"zeam.form.ztk" -> "zope.container";
"zeam.form.ztk" -> "zope.event";
"zeam.form.ztk" -> "zope.i18n";
"zeam.form.ztk" -> "zope.i18nmessageid";
"zeam.form.ztk" -> "zope.interface";
"zeam.form.ztk" -> "zope.lifecycleevent";
"zeam.form.ztk" -> "zope.publisher";
"zeam.form.ztk" -> "zope.schema";
"zeam.form.ztk" -> "zope.traversing";
"zeam.utils.batch" -> distribute;
"zeam.utils.batch" -> "grokcore.component";
"zeam.utils.batch" -> "grokcore.view";
"zeam.utils.batch" -> "megrok.pagetemplate";
"zeam.utils.batch" -> "zope.cachedescriptors";
"zeam.utils.batch" -> "zope.i18n";
"zeam.utils.batch" -> "zope.interface";
"zeam.utils.batch" -> "zope.publisher";
"zeam.utils.batch" -> "zope.traversing";
zerodb -> click;
zerodb -> ecdsa;
zerodb -> flask;
zerodb -> "flask-cors";
zerodb -> jsonpickle;
zerodb -> requests;
zerodb -> "zope.component";
zimplewiki -> distribute;
zimplewiki -> "z3c.form";
zimplewiki -> "z3c.template";
zimplewiki -> "zope.viewlet";
zipfelchappe -> argparse;
zipfelchappe -> beautifulsoup4;
zipfelchappe -> coverage;
zipfelchappe -> distribute;
zipfelchappe -> django;
zipfelchappe -> "django-debug-toolbar";
zipfelchappe -> "django-mptt";
zipfelchappe -> "django-tinymce";
zipfelchappe -> "factory-boy";
zipfelchappe -> feincms;
zipfelchappe -> ipython;
zipfelchappe -> pillow;
zipfelchappe -> pytz;
zipfelchappe -> requests;
zipfelchappe -> six;
zipfelchappe -> south;
zipfelchappe -> wsgiref;
zipline -> alabaster;
zipline -> babel;
zipline -> certifi;
zipline -> click;
zipline -> contextlib2;
zipline -> cython;
zipline -> docopt;
zipline -> docutils;
zipline -> flake8;
zipline -> funcsigs;
zipline -> futures;
zipline -> jinja2;
zipline -> logbook;
zipline -> markdown;
zipline -> markupsafe;
zipline -> matplotlib;
zipline -> mccabe;
zipline -> mistune;
zipline -> mock;
zipline -> networkx;
zipline -> nose;
zipline -> numexpr;
zipline -> numpy;
zipline -> numpydoc;
zipline -> pandas;
zipline -> pbr;
zipline -> pep8;
zipline -> pip;
zipline -> pyandoc;
zipline -> pyflakes;
zipline -> pygments;
zipline -> pyparsing;
zipline -> "python-dateutil";
zipline -> pytz;
zipline -> requests;
zipline -> "requests-futures";
zipline -> scipy;
zipline -> six;
zipline -> snowballstemmer;
zipline -> sphinx;
zipline -> "sphinx-rtd-theme";
zipline -> sqlalchemy;
zipline -> statsmodels;
zipline -> testfixtures;
zipline -> toolz;
zipline -> tornado;
zipline -> xlrd;
zm -> coverage;
zm -> discover;
zm -> fixtures;
zm -> hacking;
zm -> "oslo.config";
zm -> oslosphinx;
zm -> pbr;
zm -> prettytable;
zm -> "python-subunit";
zm -> pyyaml;
zm -> requests;
zm -> sphinx;
zm -> testrepository;
zm -> testscenarios;
zm -> testtools;
ZMS3 -> ZMS3;
ZMS3 -> accesscontrol;
ZMS3 -> acquisition;
ZMS3 -> datetime;
ZMS3 -> docutils;
ZMS3 -> "five.globalrequest";
ZMS3 -> mechanize;
ZMS3 -> "products.cmfcore";
ZMS3 -> "products.genericsetup";
ZMS3 -> pytz;
ZMS3 -> six;
ZMS3 -> transaction;
ZMS3 -> zconfig;
ZMS3 -> zodb3;
ZMS3 -> "zope.annotation";
ZMS3 -> "zope.app.publication";
ZMS3 -> "zope.authentication";
ZMS3 -> "zope.browser";
ZMS3 -> "zope.browserpage";
ZMS3 -> "zope.component";
ZMS3 -> "zope.configuration";
ZMS3 -> "zope.container";
ZMS3 -> "zope.contentprovider";
ZMS3 -> "zope.datetime";
ZMS3 -> "zope.deferredimport";
ZMS3 -> "zope.dottedname";
ZMS3 -> "zope.event";
ZMS3 -> "zope.formlib";
ZMS3 -> "zope.globalrequest";
ZMS3 -> "zope.i18n";
ZMS3 -> "zope.i18nmessageid";
ZMS3 -> "zope.interface";
ZMS3 -> "zope.lifecycleevent";
ZMS3 -> "zope.location";
ZMS3 -> "zope.pagetemplate";
ZMS3 -> "zope.processlifetime";
ZMS3 -> "zope.proxy";
ZMS3 -> "zope.publisher";
ZMS3 -> "zope.schema";
ZMS3 -> "zope.security";
ZMS3 -> "zope.site";
ZMS3 -> "zope.tales";
ZMS3 -> "zope.testing";
ZMS3 -> "zope.traversing";
ZMS3 -> "zope.viewlet";
ZMS3 -> zope2;
Zope2 -> accesscontrol;
Zope2 -> acquisition;
Zope2 -> datetime;
Zope2 -> distribute;
Zope2 -> docutils;
Zope2 -> jinja2;
Zope2 -> markupsafe;
Zope2 -> mechanize;
Zope2 -> paste;
Zope2 -> pastedeploy;
Zope2 -> pastescript;
Zope2 -> pygments;
Zope2 -> pytz;
Zope2 -> "repoze.who";
Zope2 -> sphinx;
Zope2 -> transaction;
Zope2 -> "zc.buildout";
Zope2 -> "zc.recipe.egg";
Zope2 -> zconfig;
Zope2 -> zodb3;
Zope2 -> "zope.annotation";
Zope2 -> "zope.browser";
Zope2 -> "zope.browserpage";
Zope2 -> "zope.component";
Zope2 -> "zope.configuration";
Zope2 -> "zope.container";
Zope2 -> "zope.contentprovider";
Zope2 -> "zope.deferredimport";
Zope2 -> "zope.dottedname";
Zope2 -> "zope.event";
Zope2 -> "zope.i18n";
Zope2 -> "zope.i18nmessageid";
Zope2 -> "zope.interface";
Zope2 -> "zope.lifecycleevent";
Zope2 -> "zope.location";
Zope2 -> "zope.pagetemplate";
Zope2 -> "zope.processlifetime";
Zope2 -> "zope.proxy";
Zope2 -> "zope.publisher";
Zope2 -> "zope.schema";
Zope2 -> "zope.security";
Zope2 -> "zope.site";
Zope2 -> "zope.tales";
Zope2 -> "zope.testing";
Zope2 -> "zope.traversing";
Zope2 -> "zope.viewlet";
Zope2 -> zope2;
"zope.app.publisher" -> distribute;
"zope.app.publisher" -> "zope.browser";
"zope.app.publisher" -> "zope.component";
"zope.app.publisher" -> "zope.componentvocabulary";
"zope.app.publisher" -> "zope.configuration";
"zope.app.publisher" -> "zope.container";
"zope.app.publisher" -> "zope.datetime";
"zope.app.publisher" -> "zope.i18n";
"zope.app.publisher" -> "zope.interface";
"zope.app.publisher" -> "zope.location";
"zope.app.publisher" -> "zope.pagetemplate";
"zope.app.publisher" -> "zope.publisher";
"zope.app.publisher" -> "zope.schema";
"zope.app.publisher" -> "zope.security";
"zope.app.publisher" -> "zope.site";
"zope.app.publisher" -> "zope.traversing";
"zope.globalrequest" -> distribute;
"zope.globalrequest" -> "zope.interface";
"zope.globalrequest" -> "zope.publisher";
"zope.globalrequest" -> "zope.traversing";
"zope.locking" -> distribute;
"zope.locking" -> pytz;
"zope.locking" -> zodb3;
"zope.locking" -> "zope.app.publisher";
"zope.locking" -> "zope.app.testing";
"zope.locking" -> "zope.component";
"zope.locking" -> "zope.event";
"zope.locking" -> "zope.formlib";
"zope.locking" -> "zope.i18nmessageid";
"zope.locking" -> "zope.interface";
"zope.locking" -> "zope.location";
"zope.locking" -> "zope.publisher";
"zope.locking" -> "zope.schema";
"zope.locking" -> "zope.security";
"zope.locking" -> "zope.testing";
"ztfy.alchemy" -> distribute;
"ztfy.alchemy" -> sqlalchemy;
"ztfy.alchemy" -> transaction;
"ztfy.alchemy" -> "zope.annotation";
"ztfy.alchemy" -> "zope.component";
"ztfy.alchemy" -> "zope.componentvocabulary";
"ztfy.alchemy" -> "zope.configuration";
"ztfy.alchemy" -> "zope.container";
"ztfy.alchemy" -> "zope.i18nmessageid";
"ztfy.alchemy" -> "zope.interface";
"ztfy.alchemy" -> "zope.schema";
"ztfy.alchemy" -> "ztfy.utils";
"ztfy.baseskin" -> distribute;
"ztfy.baseskin" -> "z3c.form";
"ztfy.baseskin" -> "zope.component";
"ztfy.baseskin" -> "zope.i18nmessageid";
"ztfy.baseskin" -> "zope.interface";
"ztfy.baseskin" -> "ztfy.utils";
"ztfy.blog" -> distribute;
"ztfy.blog" -> fanstatic;
"ztfy.blog" -> "hurry.query";
"ztfy.blog" -> pygments;
"ztfy.blog" -> pytz;
"ztfy.blog" -> transaction;
"ztfy.blog" -> "z3c.form";
"ztfy.blog" -> "z3c.template";
"ztfy.blog" -> "zope.annotation";
"ztfy.blog" -> "zope.app.publication";
"ztfy.blog" -> "zope.authentication";
"ztfy.blog" -> "zope.browserpage";
"ztfy.blog" -> "zope.catalog";
"ztfy.blog" -> "zope.component";
"ztfy.blog" -> "zope.container";
"ztfy.blog" -> "zope.dublincore";
"ztfy.blog" -> "zope.i18n";
"ztfy.blog" -> "zope.i18nmessageid";
"ztfy.blog" -> "zope.interface";
"ztfy.blog" -> "zope.intid";
"ztfy.blog" -> "zope.location";
"ztfy.blog" -> "zope.processlifetime";
"ztfy.blog" -> "zope.schema";
"ztfy.blog" -> "zope.site";
"ztfy.blog" -> "zope.tales";
"ztfy.blog" -> "zope.traversing";
"ztfy.blog" -> "zope.viewlet";
"ztfy.blog" -> "ztfy.extfile";
"ztfy.blog" -> "ztfy.file";
"ztfy.blog" -> "ztfy.i18n";
"ztfy.blog" -> "ztfy.jqueryui";
"ztfy.blog" -> "ztfy.security";
"ztfy.blog" -> "ztfy.skin";
"ztfy.blog" -> "ztfy.utils";
"ztfy.blog" -> "ztfy.workflow";
"ztfy.cache" -> distribute;
"ztfy.cache" -> "lovely.memcached";
"ztfy.cache" -> "zope.annotation";
"ztfy.cache" -> "zope.component";
"ztfy.cache" -> "zope.componentvocabulary";
"ztfy.cache" -> "zope.configuration";
"ztfy.cache" -> "zope.container";
"ztfy.cache" -> "zope.i18nmessageid";
"ztfy.cache" -> "zope.interface";
"ztfy.cache" -> "zope.lifecycleevent";
"ztfy.cache" -> "zope.schema";
"ztfy.captcha" -> distribute;
"ztfy.captcha" -> pillow;
"ztfy.captcha" -> "z3c.form";
"ztfy.captcha" -> "z3c.template";
"ztfy.captcha" -> "zope.annotation";
"ztfy.captcha" -> "zope.component";
"ztfy.captcha" -> "zope.dublincore";
"ztfy.captcha" -> "zope.i18nmessageid";
"ztfy.captcha" -> "zope.interface";
"ztfy.captcha" -> "zope.schema";
"ztfy.captcha" -> "ztfy.cache";
"ztfy.captcha" -> "ztfy.jqueryui";
"ztfy.captcha" -> "ztfy.skin";
"ztfy.captcha" -> "ztfy.utils";
"ztfy.comment" -> distribute;
"ztfy.comment" -> "z3c.template";
"ztfy.comment" -> "zope.annotation";
"ztfy.comment" -> "zope.component";
"ztfy.comment" -> "zope.dublincore";
"ztfy.comment" -> "zope.event";
"ztfy.comment" -> "zope.i18n";
"ztfy.comment" -> "zope.interface";
"ztfy.comment" -> "zope.lifecycleevent";
"ztfy.comment" -> "zope.publisher";
"ztfy.comment" -> "zope.schema";
"ztfy.comment" -> "zope.security";
"ztfy.comment" -> "ztfy.security";
"ztfy.comment" -> "ztfy.skin";
"ztfy.comment" -> "ztfy.utils";
"ztfy.extfile" -> distribute;
"ztfy.extfile" -> fanstatic;
"ztfy.extfile" -> "hurry.query";
"ztfy.extfile" -> paramiko;
"ztfy.extfile" -> "python-magic";
"ztfy.extfile" -> pytz;
"ztfy.extfile" -> zodb3;
"ztfy.extfile" -> "zope.annotation";
"ztfy.extfile" -> "zope.app.component";
"ztfy.extfile" -> "zope.app.file";
"ztfy.extfile" -> "zope.app.publication";
"ztfy.extfile" -> "zope.catalog";
"ztfy.extfile" -> "zope.component";
"ztfy.extfile" -> "zope.configuration";
"ztfy.extfile" -> "zope.container";
"ztfy.extfile" -> "zope.dublincore";
"ztfy.extfile" -> "zope.event";
"ztfy.extfile" -> "zope.interface";
"ztfy.extfile" -> "zope.intid";
"ztfy.extfile" -> "zope.lifecycleevent";
"ztfy.extfile" -> "zope.location";
"ztfy.extfile" -> "zope.processlifetime";
"ztfy.extfile" -> "zope.schema";
"ztfy.extfile" -> "ztfy.utils";
"ztfy.file" -> distribute;
"ztfy.file" -> fanstatic;
"ztfy.file" -> pillow;
"ztfy.file" -> "z3c.form";
"ztfy.file" -> "z3c.template";
"ztfy.file" -> zodb3;
"ztfy.file" -> "zope.annotation";
"ztfy.file" -> "zope.app.file";
"ztfy.file" -> "zope.catalog";
"ztfy.file" -> "zope.component";
"ztfy.file" -> "zope.datetime";
"ztfy.file" -> "zope.dublincore";
"ztfy.file" -> "zope.event";
"ztfy.file" -> "zope.interface";
"ztfy.file" -> "zope.lifecycleevent";
"ztfy.file" -> "zope.location";
"ztfy.file" -> "zope.publisher";
"ztfy.file" -> "zope.schema";
"ztfy.file" -> "zope.tales";
"ztfy.file" -> "zope.traversing";
"ztfy.file" -> "ztfy.extfile";
"ztfy.file" -> "ztfy.jqueryui";
"ztfy.file" -> "ztfy.utils";
"ztfy.gallery" -> distribute;
"ztfy.gallery" -> fanstatic;
"ztfy.gallery" -> "hurry.query";
"ztfy.gallery" -> "z3c.form";
"ztfy.gallery" -> "z3c.template";
"ztfy.gallery" -> "zope.annotation";
"ztfy.gallery" -> "zope.app.file";
"ztfy.gallery" -> "zope.catalog";
"ztfy.gallery" -> "zope.component";
"ztfy.gallery" -> "zope.container";
"ztfy.gallery" -> "zope.i18n";
"ztfy.gallery" -> "zope.interface";
"ztfy.gallery" -> "zope.intid";
"ztfy.gallery" -> "zope.location";
"ztfy.gallery" -> "zope.publisher";
"ztfy.gallery" -> "zope.schema";
"ztfy.gallery" -> "zope.traversing";
"ztfy.gallery" -> "zope.viewlet";
"ztfy.gallery" -> "ztfy.blog";
"ztfy.gallery" -> "ztfy.extfile";
"ztfy.gallery" -> "ztfy.file";
"ztfy.gallery" -> "ztfy.i18n";
"ztfy.gallery" -> "ztfy.skin";
"ztfy.gallery" -> "ztfy.utils";
"ztfy.gallery" -> "ztfy.workflow";
"ztfy.i18n" -> distribute;
"ztfy.i18n" -> fanstatic;
"ztfy.i18n" -> "z3c.form";
"ztfy.i18n" -> "z3c.template";
"ztfy.i18n" -> "zope.annotation";
"ztfy.i18n" -> "zope.app.file";
"ztfy.i18n" -> "zope.component";
"ztfy.i18n" -> "zope.event";
"ztfy.i18n" -> "zope.i18n";
"ztfy.i18n" -> "zope.i18nmessageid";
"ztfy.i18n" -> "zope.interface";
"ztfy.i18n" -> "zope.lifecycleevent";
"ztfy.i18n" -> "zope.location";
"ztfy.i18n" -> "zope.publisher";
"ztfy.i18n" -> "zope.schema";
"ztfy.i18n" -> "zope.security";
"ztfy.i18n" -> "zope.tales";
"ztfy.i18n" -> "zope.traversing";
"ztfy.i18n" -> "ztfy.extfile";
"ztfy.i18n" -> "ztfy.file";
"ztfy.i18n" -> "ztfy.jqueryui";
"ztfy.i18n" -> "ztfy.utils";
"ztfy.jqueryui" -> distribute;
"ztfy.jqueryui" -> fanstatic;
"ztfy.ldap" -> distribute;
"ztfy.ldap" -> ldapadapter;
"ztfy.ldap" -> "python-ldap";
"ztfy.ldap" -> zodb3;
"ztfy.ldap" -> "zope.annotation";
"ztfy.ldap" -> "zope.component";
"ztfy.ldap" -> "zope.componentvocabulary";
"ztfy.ldap" -> "zope.container";
"ztfy.ldap" -> "zope.dublincore";
"ztfy.ldap" -> "zope.i18n";
"ztfy.ldap" -> "zope.i18nmessageid";
"ztfy.ldap" -> "zope.interface";
"ztfy.ldap" -> "zope.schema";
"ztfy.ldap" -> "zope.security";
"ztfy.ldap" -> "ztfy.cache";
"ztfy.ldap" -> "ztfy.mail";
"ztfy.ldap" -> "ztfy.security";
"ztfy.ldap" -> "ztfy.utils";
"ztfy.lock" -> distribute;
"ztfy.lock" -> "lovely.memcached";
"ztfy.lock" -> transaction;
"ztfy.lock" -> "z3c.form";
"ztfy.lock" -> "zope.annotation";
"ztfy.lock" -> "zope.app.publication";
"ztfy.lock" -> "zope.component";
"ztfy.lock" -> "zope.componentvocabulary";
"ztfy.lock" -> "zope.container";
"ztfy.lock" -> "zope.i18nmessageid";
"ztfy.lock" -> "zope.interface";
"ztfy.lock" -> "zope.intid";
"ztfy.lock" -> "zope.location";
"ztfy.lock" -> "zope.processlifetime";
"ztfy.lock" -> "zope.schema";
"ztfy.lock" -> "zope.site";
"ztfy.lock" -> "zope.traversing";
"ztfy.lock" -> "ztfy.utils";
"ztfy.mail" -> chardet;
"ztfy.mail" -> distribute;
"ztfy.mail" -> "zope.componentvocabulary";
"ztfy.mail" -> "zope.i18nmessageid";
"ztfy.mail" -> "zope.interface";
"ztfy.mail" -> "zope.schema";
"ztfy.mail" -> "ztfy.utils";
"ztfy.media" -> distribute;
"ztfy.media" -> fanstatic;
"ztfy.media" -> "zope.annotation";
"ztfy.media" -> "zope.app.file";
"ztfy.media" -> "zope.app.publication";
"ztfy.media" -> "zope.component";
"ztfy.media" -> "zope.container";
"ztfy.media" -> "zope.event";
"ztfy.media" -> "zope.i18nmessageid";
"ztfy.media" -> "zope.interface";
"ztfy.media" -> "zope.lifecycleevent";
"ztfy.media" -> "zope.location";
"ztfy.media" -> "zope.processlifetime";
"ztfy.media" -> "zope.schema";
"ztfy.media" -> "zope.site";
"ztfy.media" -> "zope.traversing";
"ztfy.media" -> "ztfy.extfile";
"ztfy.media" -> "ztfy.file";
"ztfy.media" -> "ztfy.jqueryui";
"ztfy.media" -> "ztfy.skin";
"ztfy.media" -> "ztfy.utils";
"ztfy.myams" -> distribute;
"ztfy.myams" -> fanstatic;
"ztfy.myams" -> "z3c.form";
"ztfy.myams" -> "z3c.template";
"ztfy.myams" -> "zope.annotation";
"ztfy.myams" -> "zope.authentication";
"ztfy.myams" -> "zope.component";
"ztfy.myams" -> "zope.container";
"ztfy.myams" -> "zope.event";
"ztfy.myams" -> "zope.i18n";
"ztfy.myams" -> "zope.i18nmessageid";
"ztfy.myams" -> "zope.interface";
"ztfy.myams" -> "zope.lifecycleevent";
"ztfy.myams" -> "zope.location";
"ztfy.myams" -> "zope.pagetemplate";
"ztfy.myams" -> "zope.publisher";
"ztfy.myams" -> "zope.schema";
"ztfy.myams" -> "zope.security";
"ztfy.myams" -> "zope.site";
"ztfy.myams" -> "zope.tales";
"ztfy.myams" -> "zope.traversing";
"ztfy.myams" -> "zope.viewlet";
"ztfy.myams" -> "ztfy.baseskin";
"ztfy.myams" -> "ztfy.extfile";
"ztfy.myams" -> "ztfy.file";
"ztfy.myams" -> "ztfy.mail";
"ztfy.myams" -> "ztfy.skin";
"ztfy.myams" -> "ztfy.utils";
"ztfy.scheduler" -> apscheduler;
"ztfy.scheduler" -> distribute;
"ztfy.scheduler" -> "lovely.memcached";
"ztfy.scheduler" -> paramiko;
"ztfy.scheduler" -> transaction;
"ztfy.scheduler" -> "z3c.form";
"ztfy.scheduler" -> "z3c.template";
"ztfy.scheduler" -> "zope.app.publication";
"ztfy.scheduler" -> "zope.authentication";
"ztfy.scheduler" -> "zope.component";
"ztfy.scheduler" -> "zope.container";
"ztfy.scheduler" -> "zope.dublincore";
"ztfy.scheduler" -> "zope.event";
"ztfy.scheduler" -> "zope.i18n";
"ztfy.scheduler" -> "zope.i18nmessageid";
"ztfy.scheduler" -> "zope.interface";
"ztfy.scheduler" -> "zope.intid";
"ztfy.scheduler" -> "zope.location";
"ztfy.scheduler" -> "zope.processlifetime";
"ztfy.scheduler" -> "zope.schema";
"ztfy.scheduler" -> "zope.security";
"ztfy.scheduler" -> "zope.site";
"ztfy.scheduler" -> "zope.traversing";
"ztfy.scheduler" -> "ztfy.i18n";
"ztfy.scheduler" -> "ztfy.jqueryui";
"ztfy.scheduler" -> "ztfy.mail";
"ztfy.scheduler" -> "ztfy.security";
"ztfy.scheduler" -> "ztfy.skin";
"ztfy.scheduler" -> "ztfy.utils";
"ztfy.scheduler" -> "ztfy.zmi";
"ztfy.security" -> distribute;
"ztfy.security" -> fanstatic;
"ztfy.security" -> "z3c.form";
"ztfy.security" -> "zope.annotation";
"ztfy.security" -> "zope.authentication";
"ztfy.security" -> "zope.component";
"ztfy.security" -> "zope.container";
"ztfy.security" -> "zope.interface";
"ztfy.security" -> "zope.lifecycleevent";
"ztfy.security" -> "zope.schema";
"ztfy.security" -> "zope.security";
"ztfy.security" -> "zope.tales";
"ztfy.security" -> "zope.traversing";
"ztfy.security" -> "ztfy.jqueryui";
"ztfy.security" -> "ztfy.skin";
"ztfy.security" -> "ztfy.utils";
"ztfy.sendit" -> distribute;
"ztfy.sendit" -> fanstatic;
"ztfy.sendit" -> "hurry.query";
"ztfy.sendit" -> uuid;
"ztfy.sendit" -> "z3c.form";
"ztfy.sendit" -> "zope.annotation";
"ztfy.sendit" -> "zope.app.file";
"ztfy.sendit" -> "zope.app.publication";
"ztfy.sendit" -> "zope.authentication";
"ztfy.sendit" -> "zope.browserpage";
"ztfy.sendit" -> "zope.catalog";
"ztfy.sendit" -> "zope.component";
"ztfy.sendit" -> "zope.componentvocabulary";
"ztfy.sendit" -> "zope.container";
"ztfy.sendit" -> "zope.dublincore";
"ztfy.sendit" -> "zope.event";
"ztfy.sendit" -> "zope.i18n";
"ztfy.sendit" -> "zope.i18nmessageid";
"ztfy.sendit" -> "zope.interface";
"ztfy.sendit" -> "zope.intid";
"ztfy.sendit" -> "zope.lifecycleevent";
"ztfy.sendit" -> "zope.location";
"ztfy.sendit" -> "zope.processlifetime";
"ztfy.sendit" -> "zope.publisher";
"ztfy.sendit" -> "zope.schema";
"ztfy.sendit" -> "zope.security";
"ztfy.sendit" -> "zope.site";
"ztfy.sendit" -> "zope.tales";
"ztfy.sendit" -> "zope.traversing";
"ztfy.sendit" -> "ztfy.captcha";
"ztfy.sendit" -> "ztfy.extfile";
"ztfy.sendit" -> "ztfy.file";
"ztfy.sendit" -> "ztfy.i18n";
"ztfy.sendit" -> "ztfy.jqueryui";
"ztfy.sendit" -> "ztfy.mail";
"ztfy.sendit" -> "ztfy.scheduler";
"ztfy.sendit" -> "ztfy.security";
"ztfy.sendit" -> "ztfy.skin";
"ztfy.sendit" -> "ztfy.utils";
"ztfy.sequence" -> distribute;
"ztfy.sequence" -> transaction;
"ztfy.sequence" -> "z3c.form";
"ztfy.sequence" -> "zope.annotation";
"ztfy.sequence" -> "zope.app.publication";
"ztfy.sequence" -> "zope.component";
"ztfy.sequence" -> "zope.componentvocabulary";
"ztfy.sequence" -> "zope.i18nmessageid";
"ztfy.sequence" -> "zope.interface";
"ztfy.sequence" -> "zope.intid";
"ztfy.sequence" -> "zope.lifecycleevent";
"ztfy.sequence" -> "zope.processlifetime";
"ztfy.sequence" -> "zope.schema";
"ztfy.sequence" -> "zope.site";
"ztfy.sequence" -> "zope.traversing";
"ztfy.sequence" -> "ztfy.skin";
"ztfy.sequence" -> "ztfy.utils";
"ztfy.skin" -> distribute;
"ztfy.skin" -> fanstatic;
"ztfy.skin" -> "z3c.form";
"ztfy.skin" -> "z3c.template";
"ztfy.skin" -> "zope.authentication";
"ztfy.skin" -> "zope.browserpage";
"ztfy.skin" -> "zope.component";
"ztfy.skin" -> "zope.container";
"ztfy.skin" -> "zope.contentprovider";
"ztfy.skin" -> "zope.dublincore";
"ztfy.skin" -> "zope.event";
"ztfy.skin" -> "zope.i18n";
"ztfy.skin" -> "zope.i18nmessageid";
"ztfy.skin" -> "zope.interface";
"ztfy.skin" -> "zope.intid";
"ztfy.skin" -> "zope.lifecycleevent";
"ztfy.skin" -> "zope.publisher";
"ztfy.skin" -> "zope.schema";
"ztfy.skin" -> "zope.security";
"ztfy.skin" -> "zope.traversing";
"ztfy.skin" -> "zope.viewlet";
"ztfy.skin" -> "ztfy.baseskin";
"ztfy.skin" -> "ztfy.i18n";
"ztfy.skin" -> "ztfy.jqueryui";
"ztfy.skin" -> "ztfy.utils";
"ztfy.thesaurus" -> chardet;
"ztfy.thesaurus" -> distribute;
"ztfy.thesaurus" -> fanstatic;
"ztfy.thesaurus" -> "hurry.query";
"ztfy.thesaurus" -> lxml;
"ztfy.thesaurus" -> "z3c.form";
"ztfy.thesaurus" -> "z3c.template";
"ztfy.thesaurus" -> zodb3;
"ztfy.thesaurus" -> "zope.annotation";
"ztfy.thesaurus" -> "zope.authentication";
"ztfy.thesaurus" -> "zope.catalog";
"ztfy.thesaurus" -> "zope.component";
"ztfy.thesaurus" -> "zope.componentvocabulary";
"ztfy.thesaurus" -> "zope.container";
"ztfy.thesaurus" -> "zope.dublincore";
"ztfy.thesaurus" -> "zope.i18n";
"ztfy.thesaurus" -> "zope.i18nmessageid";
"ztfy.thesaurus" -> "zope.interface";
"ztfy.thesaurus" -> "zope.intid";
"ztfy.thesaurus" -> "zope.location";
"ztfy.thesaurus" -> "zope.processlifetime";
"ztfy.thesaurus" -> "zope.publisher";
"ztfy.thesaurus" -> "zope.schema";
"ztfy.thesaurus" -> "zope.security";
"ztfy.thesaurus" -> "zope.traversing";
"ztfy.thesaurus" -> "ztfy.i18n";
"ztfy.thesaurus" -> "ztfy.jqueryui";
"ztfy.thesaurus" -> "ztfy.security";
"ztfy.thesaurus" -> "ztfy.skin";
"ztfy.thesaurus" -> "ztfy.utils";
"ztfy.utils" -> chardet;
"ztfy.utils" -> distribute;
"ztfy.utils" -> fanstatic;
"ztfy.utils" -> httplib2;
"ztfy.utils" -> "hurry.query";
"ztfy.utils" -> pytz;
"ztfy.utils" -> transaction;
"ztfy.utils" -> "z3c.form";
"ztfy.utils" -> zodb3;
"ztfy.utils" -> "zope.annotation";
"ztfy.utils" -> "zope.app.file";
"ztfy.utils" -> "zope.authentication";
"ztfy.utils" -> "zope.catalog";
"ztfy.utils" -> "zope.component";
"ztfy.utils" -> "zope.container";
"ztfy.utils" -> "zope.datetime";
"ztfy.utils" -> "zope.deprecation";
"ztfy.utils" -> "zope.i18n";
"ztfy.utils" -> "zope.i18nmessageid";
"ztfy.utils" -> "zope.interface";
"ztfy.utils" -> "zope.intid";
"ztfy.utils" -> "zope.location";
"ztfy.utils" -> "zope.publisher";
"ztfy.utils" -> "zope.schema";
"ztfy.utils" -> "zope.security";
"ztfy.utils" -> "zope.tales";
"ztfy.utils" -> "zope.traversing";
"ztfy.utils" -> "ztfy.jqueryui";
"ztfy.workflow" -> distribute;
"ztfy.workflow" -> "hurry.query";
"ztfy.workflow" -> pytz;
"ztfy.workflow" -> "z3c.template";
"ztfy.workflow" -> "zope.app.publication";
"ztfy.workflow" -> "zope.browserpage";
"ztfy.workflow" -> "zope.catalog";
"ztfy.workflow" -> "zope.component";
"ztfy.workflow" -> "zope.componentvocabulary";
"ztfy.workflow" -> "zope.dublincore";
"ztfy.workflow" -> "zope.event";
"ztfy.workflow" -> "zope.i18n";
"ztfy.workflow" -> "zope.interface";
"ztfy.workflow" -> "zope.intid";
"ztfy.workflow" -> "zope.lifecycleevent";
"ztfy.workflow" -> "zope.location";
"ztfy.workflow" -> "zope.processlifetime";
"ztfy.workflow" -> "zope.schema";
"ztfy.workflow" -> "zope.security";
"ztfy.workflow" -> "zope.tales";
"ztfy.workflow" -> "zope.traversing";
"ztfy.workflow" -> "zope.viewlet";
"ztfy.workflow" -> "ztfy.comment";
"ztfy.workflow" -> "ztfy.security";
"ztfy.workflow" -> "ztfy.skin";
"ztfy.workflow" -> "ztfy.utils";
"ztfy.zmi" -> distribute;
"ztfy.zmi" -> "zope.authentication";
"ztfy.zmi" -> "zope.browserpage";
"ztfy.zmi" -> "zope.component";
"ztfy.zmi" -> "zope.dublincore";
"ztfy.zmi" -> "zope.i18n";
"ztfy.zmi" -> "zope.i18nmessageid";
"ztfy.zmi" -> "zope.interface";
"ztfy.zmi" -> "zope.publisher";
"ztfy.zmi" -> "zope.schema";
"ztfy.zmi" -> "zope.security";
"ztfy.zmi" -> "zope.traversing";
"ztfy.zmi" -> "ztfy.skin";
zuul -> apscheduler;
zuul -> argparse;
zuul -> babel;
zuul -> coverage;
zuul -> discover;
zuul -> fixtures;
zuul -> gear;
zuul -> gitpython;
zuul -> hacking;
zuul -> ordereddict;
zuul -> paramiko;
zuul -> paste;
zuul -> pbr;
zuul -> prettytable;
zuul -> "python-daemon";
zuul -> "python-keystoneclient";
zuul -> "python-subunit";
zuul -> "python-swiftclient";
zuul -> pyyaml;
zuul -> six;
zuul -> sphinx;
zuul -> "sphinxcontrib-programoutput";
zuul -> statsd;
zuul -> testrepository;
zuul -> testtools;
zuul -> voluptuous;
zuul -> webob;
zuup -> babel;
zuup -> coverage;
zuup -> discover;
zuup -> hacking;
zuup -> oslosphinx;
zuup -> oslotest;
zuup -> pbr;
zuup -> "python-subunit";
zuup -> requests;
zuup -> sphinx;
zuup -> testrepository;
zuup -> testscenarios;
zuup -> testtools;
}
